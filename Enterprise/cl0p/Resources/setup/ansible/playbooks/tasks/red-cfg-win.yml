---
- name: configure red systems
  hosts: jumpbox_srv1
  gather_facts: no
  vars:
    red_deploy_dir: "C:\\terraform"
    deploy_dir: "C:/tools"
    choco_script_local: "../files/choco/chocolateyInstall.ps1"
    choco_script_dest: "C:/tools/install.ps1"
  vars_files:
    - ../vars/vars.yml

  tasks:
    - name: Configure to use Range DNS
      ansible.windows.win_dns_client:
        adapter_names: '*'
        dns_servers:
          - "{{ support_vars.dns_server_ip }}"
    # check if chocolatey is already installed
    - name: Get status of Chocolatey installation
      win_stat:
        path: c:\programdata\chocolatey\choco.exe
      register: choco_file_info
      changed_when: false

    # if choco not installed, delete directory so installer runs
    - name: TEMP - delete dir
      ansible.windows.win_file:
        path: "C:\\ProgramData\\chocolatey"
        state: absent
      when: choco_file_info.stat.exists == false

    - name: "Create directory for choco installer script: {{ deploy_dir }}"
      ansible.windows.win_file:
        path: "{{ deploy_dir }}"
        state: directory
      when: choco_file_info.stat.exists == false

    - name: "Copy choco installer script host: {{ choco_script_local }}"
      ansible.windows.win_copy:
        src: "{{ choco_script_local }}"
        dest: "{{ choco_script_dest }}"
      when: choco_file_info.stat.exists == false

    - name: Install chocolatey
      win_chocolatey:
        name:
          - chocolatey
        bootstrap_script: "{{ choco_script_dest }}"
        state: present
        ignore_checksums: yes
      environment:
        - chocolateyDownloadUrl: "http://27.21.12.121:8081/nexus/service/local/repositories/chocolatey-proxy/content/chocolatey/2.3.0/chocolatey-2.3.0.nupkg"

    - name: Remove the default public source
      win_chocolatey_source:
        name: chocolatey
        state: absent

    - name: Add new internal source
      win_chocolatey_source:
        name: nexus
        state: present
        source: "{{ support_vars.choco_mirror_url }}"

    - name: Manage tools directory
      win_file:
        path: "{{ red_dev.sandbox_dev_dir }}"
        state: directory

    - name: Create user accounts
      ansible.windows.win_user:
        name: "{{ item.username }}"
        password: "{{ item.password }}"
        fullname: "{{ item.firstname }}"
        password_never_expires: yes
        state: present
        groups:
          - Administrators
      loop: "{{ red_users }}"

    - name: Install Packages
      win_chocolatey:
        name:
          - advancedrun
          - git
          - python39
          - sysinternals
          - vscode
          - dotnet-6.0-aspnetruntime
          - tightvnc
        state: present
        ignore_checksums: yes

    - name: Install net version
      win_chocolatey:
        name: dotnet
        version: '6.0.32'
        force: yes

    - name: Ensure Python in system PATH
      win_path:
        elements:
          - C:\Python39\Scripts
          - C:\Python39\

    - name: Create directory for deploy files
      ansible.windows.win_file:
        path: "{{ red_deploy_dir }}"
        state: directory

    - name: Disable firewall for Domain, Public and Private profiles
      community.windows.win_firewall:
        state: disabled
        profiles:
          - Domain
          - Private
          - Public
      tags: disable_firewall

    - name: Disable automatic firefox updates
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Mozilla\Firefox
        name: "DisableAppUpdate"
        data: 1
        type: dword

    - name: Disable firefox default browser check
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Mozilla\Firefox
        name: "DontCheckDefaultBrowser"
        data: 1
        type: dword

    - name: Disable firefox first run
      ansible.windows.win_regedit:
        path: HKLM:\SOFTWARE\Policies\Mozilla\Firefox
        name: "OverrideFirstRunPage"
        type: string

    - name: Disable edge first run
      ansible.windows.win_regedit:
        path: HKLM:\Software\Policies\Microsoft\MicrosoftEdge\Main
        name: "PreventFirstRunPage"
        data: 1
        type: dword

    - name: Disable edge sync wizard
      ansible.windows.win_regedit:
        path: HKLM:\Software\Policies\Microsoft\MicrosoftEdge
        name: "SyncDisabled"
        data: 1
        type: dword
